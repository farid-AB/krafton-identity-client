// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/identity/identity.proto

package identity

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BackendErrCode int32

const (
	// The GUID or ProviderID provided were not found.
	BackendErrCode_ErrAccountByIDNotFound BackendErrCode = 0
	// The GUID provided was not found.
	BackendErrCode_ErrAccountByGUIDNotFound BackendErrCode = 1
	// The Email address provided is not associated with a Global Account.
	BackendErrCode_ErrAccountByEmailNotFound BackendErrCode = 2
	// The ProviderID was not linked to a GlobalAccount.
	BackendErrCode_ErrAccountByProviderIDNotFound BackendErrCode = 3
	// The requested account is currently deactivated.
	BackendErrCode_ErrAccountDeactivated BackendErrCode = 4
	// The request account is already activated.
	BackendErrCode_ErrAccountActivated BackendErrCode = 5
	// The requested account is on hold by Player Services.
	BackendErrCode_ErrAccountOnHold BackendErrCode = 6
	// The OIDC Refresh Token for this account link is invalid.
	BackendErrCode_ErrInvalidRefreshToken BackendErrCode = 7
	// The Activation Token provided was not accepted by the server.
	BackendErrCode_ErrInvalidActivationToken BackendErrCode = 8
	// The email address provided is considered invalid by the server. NOTE: We do not allow registration with throwaway/temporary email providers.
	BackendErrCode_ErrFailedEmailValidation BackendErrCode = 9
	// The password provided was incorrect.
	BackendErrCode_ErrLocalAuthResetPasswordInvalidOldPassword BackendErrCode = 10
	// The password provided does not meet the password requirements.
	BackendErrCode_ErrLocalAuthSetPasswordInvalidFormat BackendErrCode = 11
	// An error occurred while deleting an account.
	BackendErrCode_ErrCouldNotDeleteAccount BackendErrCode = 12
	// An error occurred while updating the EmailOptIn status of the account.
	BackendErrCode_ErrFailedUpdateEmailOptIn BackendErrCode = 13
	// An error occurred while updating the Persona of the account.
	BackendErrCode_ErrFailedUpdatePersona BackendErrCode = 14
	// The Provider information was invalid.
	BackendErrCode_ErrInvaildProvider BackendErrCode = 15
	// An error occurred while attempting to linking accounts.
	BackendErrCode_ErrFailedCreateLink BackendErrCode = 16
	// An error occured while attempting to unlink accounts.
	BackendErrCode_ErrFailedDeleteLink BackendErrCode = 17
	// The server encountered a type error with the data in this account.
	BackendErrCode_ErrCouldnotConvertAuth BackendErrCode = 18
	// The domain of the email address is not whitelisted for registration.
	BackendErrCode_ErrEmailDomainNotWhitelisted BackendErrCode = 19
	// The user did not accept the TOS so we cannot complete registration.
	BackendErrCode_ErrTOSNotAccepted BackendErrCode = 20
	// The user's Date of Birth is not valid.
	BackendErrCode_ErrInvalidDOB BackendErrCode = 21
	// Legacy error code, not currently in use.
	BackendErrCode_ErrInvalidEmailConfirm BackendErrCode = 22
	// The password does not meet the password requirements.
	BackendErrCode_ErrInvalidPassword BackendErrCode = 23
	// The user's Password Confirmation did not match the provided Password.
	BackendErrCode_ErrInvalidPasswordConfirm BackendErrCode = 24
	// The account being created already exists.
	BackendErrCode_ErrAccountAlreadyExists BackendErrCode = 25
	// The password provided did not match the password saved on the specified account.
	BackendErrCode_ErrIncorrectPassword BackendErrCode = 26
	// The account being set to On Hold is already On Hold.
	BackendErrCode_ErrAccountIsArealdyOnHolded BackendErrCode = 27
	// An error occurred while setting an account to On Hold.
	BackendErrCode_ErrFailedUpdateOnHold BackendErrCode = 28
	// An error occurred while attempting to lock an account.
	BackendErrCode_ErrFailedUpdateLocked BackendErrCode = 29
	// The account is locked and cannot be modified.
	BackendErrCode_ErrAccountLocked BackendErrCode = 30
	// The account's email address has not been confirmed.
	BackendErrCode_ErrAccountUnconfirmed BackendErrCode = 31
	// The account being linked is already linked to this or another account.
	BackendErrCode_ErrAccountAlreadyLinked BackendErrCode = 32
	// Registrations originating from the LitePC launcher are currently disabled.
	BackendErrCode_ErrLitePCLauncherRegistrationDisabled BackendErrCode = 33
	// The information provided is not sufficient for creating an account link.
	BackendErrCode_ErrInvalidLinkInfo BackendErrCode = 34
	// The New and Old email addresses are the same.
	BackendErrCode_ErrEmailChangeNewEmailSameAsOld BackendErrCode = 35
	// The New email address is already registered to an account.
	BackendErrCode_ErrEmailChangeNewEmailAlreadyRegistered BackendErrCode = 36
	// The Old email address is no longer associated with the account.
	BackendErrCode_ErrEmailChangeOldEmailAlreadyChanged BackendErrCode = 37
	// The Email Change JWT provided was not accepted by the server.
	BackendErrCode_ErrEmailChangeInvalidToken BackendErrCode = 38
	// The Password Reset JWt provided was not accepted by the server.
	BackendErrCode_ErrPasswordResetInvalidToken BackendErrCode = 39
	// The information provided is not sufficient for creating an account link.
	BackendErrCode_ErrLinkInfoMissing BackendErrCode = 40
	// The Provider account specified was not found.
	BackendErrCode_ErrProviderAccountNotFound BackendErrCode = 41
	// The Identity server was unable to talk to TSL.
	BackendErrCode_ErrTSLProxyRequestFail BackendErrCode = 42
	// The Identity server encountered an error parsing the response from TSL.
	BackendErrCode_ErrTSLPlatformAccountUnmarshalFail BackendErrCode = 43
	// The Identity server received an empty response from TSL.
	BackendErrCode_ErrTSLPlatformAccountEmptyResponse BackendErrCode = 44
	// No TSL account found.
	BackendErrCode_ErrTSLPlatformAccountSummaryNotFound BackendErrCode = 45
	// TSL Account is missing information.
	BackendErrCode_ErrTSLPlatformAccountSummaryMissingData BackendErrCode = 46
	// When an account is unlinked we forbid linking a new account for a period of time to prevent abuse.
	BackendErrCode_ErrAccountRecentlyUnlinked BackendErrCode = 47
	// The IP address of the user is currently being rate limited.
	BackendErrCode_ErrTooManyRequestByIp BackendErrCode = 48
	// Logins to this account are currently being rate limited.
	BackendErrCode_ErrTooManyRequestByLogin BackendErrCode = 49
	// ForgotPassword requests for this account are currently being rate limited.
	BackendErrCode_ErrTooManyRequestByForgotPassword BackendErrCode = 50
	// Linking this provider requires that a TSL Platform is linked first. This account has no TSL platforms linked.
	BackendErrCode_ErrNoPlatformsLinked BackendErrCode = 51
	// The Username does not meet the username requirements
	BackendErrCode_ErrInvalidUsername BackendErrCode = 52
	// The Username is already in use
	BackendErrCode_ErrUsernameTaken BackendErrCode = 53
	// The requested username was not linked to an account
	BackendErrCode_ErrAccountByUsernameNotFound BackendErrCode = 54
	// The account already has a username set
	BackendErrCode_ErrUsernameAlreadySet BackendErrCode = 55
	// The Country Code is invalid
	BackendErrCode_ErrInvalidCountry BackendErrCode = 56
	// The provided magiclink code was invalid or expired
	BackendErrCode_ErrMagicLinkCodeInvalid BackendErrCode = 57
	// The provided magicLink code has not completed it's respective link
	BackendErrCode_ErrMagicLinkNotComplete BackendErrCode = 58
	// The given creator code is invalid.
	BackendErrCode_ErrInvalidCreatorCode BackendErrCode = 59
	// For certain Auth Providers you're only allowed to link a single Provider Account with your Global Account. You can deactivate your link, but you'll only be able to re-link with that same provider account. PS has the ability to unlock this provider by deactivating this link in ACPV.
	BackendErrCode_ErrProviderLocked BackendErrCode = 60
	// ChangeEmail requests for this account are currently being rate limited.
	BackendErrCode_ErrTooManyRequestByChangeEmail BackendErrCode = 61
	// occurs error at getting iplog
	BackendErrCode_ErrCouldNotGetIpLogs BackendErrCode = 62
	// occurs error at getting session table
	BackendErrCode_ErrCouldNotGetSessionLogs BackendErrCode = 63
	// Creator code link is required for this action.
	BackendErrCode_ErrCreatorCodeRequired BackendErrCode = 64
	// Promotion for given ID could not be found.
	BackendErrCode_ErrPromotionNotFound BackendErrCode = 65
	// Promotion is not active.
	BackendErrCode_ErrPromotionNotActive BackendErrCode = 66
	// Promotion has no more available codes.
	BackendErrCode_ErrPromotionNoCodesAvailable BackendErrCode = 67
	// Unknown event type from mailjet, support only `spam`, `unsub`
	BackendErrCode_ErrUnknownEventTypeFromMailjet BackendErrCode = 68
	// Everything went to plan.
	BackendErrCode_Success BackendErrCode = 200
)

var BackendErrCode_name = map[int32]string{
	0:   "ErrAccountByIDNotFound",
	1:   "ErrAccountByGUIDNotFound",
	2:   "ErrAccountByEmailNotFound",
	3:   "ErrAccountByProviderIDNotFound",
	4:   "ErrAccountDeactivated",
	5:   "ErrAccountActivated",
	6:   "ErrAccountOnHold",
	7:   "ErrInvalidRefreshToken",
	8:   "ErrInvalidActivationToken",
	9:   "ErrFailedEmailValidation",
	10:  "ErrLocalAuthResetPasswordInvalidOldPassword",
	11:  "ErrLocalAuthSetPasswordInvalidFormat",
	12:  "ErrCouldNotDeleteAccount",
	13:  "ErrFailedUpdateEmailOptIn",
	14:  "ErrFailedUpdatePersona",
	15:  "ErrInvaildProvider",
	16:  "ErrFailedCreateLink",
	17:  "ErrFailedDeleteLink",
	18:  "ErrCouldnotConvertAuth",
	19:  "ErrEmailDomainNotWhitelisted",
	20:  "ErrTOSNotAccepted",
	21:  "ErrInvalidDOB",
	22:  "ErrInvalidEmailConfirm",
	23:  "ErrInvalidPassword",
	24:  "ErrInvalidPasswordConfirm",
	25:  "ErrAccountAlreadyExists",
	26:  "ErrIncorrectPassword",
	27:  "ErrAccountIsArealdyOnHolded",
	28:  "ErrFailedUpdateOnHold",
	29:  "ErrFailedUpdateLocked",
	30:  "ErrAccountLocked",
	31:  "ErrAccountUnconfirmed",
	32:  "ErrAccountAlreadyLinked",
	33:  "ErrLitePCLauncherRegistrationDisabled",
	34:  "ErrInvalidLinkInfo",
	35:  "ErrEmailChangeNewEmailSameAsOld",
	36:  "ErrEmailChangeNewEmailAlreadyRegistered",
	37:  "ErrEmailChangeOldEmailAlreadyChanged",
	38:  "ErrEmailChangeInvalidToken",
	39:  "ErrPasswordResetInvalidToken",
	40:  "ErrLinkInfoMissing",
	41:  "ErrProviderAccountNotFound",
	42:  "ErrTSLProxyRequestFail",
	43:  "ErrTSLPlatformAccountUnmarshalFail",
	44:  "ErrTSLPlatformAccountEmptyResponse",
	45:  "ErrTSLPlatformAccountSummaryNotFound",
	46:  "ErrTSLPlatformAccountSummaryMissingData",
	47:  "ErrAccountRecentlyUnlinked",
	48:  "ErrTooManyRequestByIp",
	49:  "ErrTooManyRequestByLogin",
	50:  "ErrTooManyRequestByForgotPassword",
	51:  "ErrNoPlatformsLinked",
	52:  "ErrInvalidUsername",
	53:  "ErrUsernameTaken",
	54:  "ErrAccountByUsernameNotFound",
	55:  "ErrUsernameAlreadySet",
	56:  "ErrInvalidCountry",
	57:  "ErrMagicLinkCodeInvalid",
	58:  "ErrMagicLinkNotComplete",
	59:  "ErrInvalidCreatorCode",
	60:  "ErrProviderLocked",
	61:  "ErrTooManyRequestByChangeEmail",
	62:  "ErrCouldNotGetIpLogs",
	63:  "ErrCouldNotGetSessionLogs",
	64:  "ErrCreatorCodeRequired",
	65:  "ErrPromotionNotFound",
	66:  "ErrPromotionNotActive",
	67:  "ErrPromotionNoCodesAvailable",
	68:  "ErrUnknownEventTypeFromMailjet",
	200: "Success",
}

var BackendErrCode_value = map[string]int32{
	"ErrAccountByIDNotFound":                      0,
	"ErrAccountByGUIDNotFound":                    1,
	"ErrAccountByEmailNotFound":                   2,
	"ErrAccountByProviderIDNotFound":              3,
	"ErrAccountDeactivated":                       4,
	"ErrAccountActivated":                         5,
	"ErrAccountOnHold":                            6,
	"ErrInvalidRefreshToken":                      7,
	"ErrInvalidActivationToken":                   8,
	"ErrFailedEmailValidation":                    9,
	"ErrLocalAuthResetPasswordInvalidOldPassword": 10,
	"ErrLocalAuthSetPasswordInvalidFormat":        11,
	"ErrCouldNotDeleteAccount":                    12,
	"ErrFailedUpdateEmailOptIn":                   13,
	"ErrFailedUpdatePersona":                      14,
	"ErrInvaildProvider":                          15,
	"ErrFailedCreateLink":                         16,
	"ErrFailedDeleteLink":                         17,
	"ErrCouldnotConvertAuth":                      18,
	"ErrEmailDomainNotWhitelisted":                19,
	"ErrTOSNotAccepted":                           20,
	"ErrInvalidDOB":                               21,
	"ErrInvalidEmailConfirm":                      22,
	"ErrInvalidPassword":                          23,
	"ErrInvalidPasswordConfirm":                   24,
	"ErrAccountAlreadyExists":                     25,
	"ErrIncorrectPassword":                        26,
	"ErrAccountIsArealdyOnHolded":                 27,
	"ErrFailedUpdateOnHold":                       28,
	"ErrFailedUpdateLocked":                       29,
	"ErrAccountLocked":                            30,
	"ErrAccountUnconfirmed":                       31,
	"ErrAccountAlreadyLinked":                     32,
	"ErrLitePCLauncherRegistrationDisabled":       33,
	"ErrInvalidLinkInfo":                          34,
	"ErrEmailChangeNewEmailSameAsOld":             35,
	"ErrEmailChangeNewEmailAlreadyRegistered":     36,
	"ErrEmailChangeOldEmailAlreadyChanged":        37,
	"ErrEmailChangeInvalidToken":                  38,
	"ErrPasswordResetInvalidToken":                39,
	"ErrLinkInfoMissing":                          40,
	"ErrProviderAccountNotFound":                  41,
	"ErrTSLProxyRequestFail":                      42,
	"ErrTSLPlatformAccountUnmarshalFail":          43,
	"ErrTSLPlatformAccountEmptyResponse":          44,
	"ErrTSLPlatformAccountSummaryNotFound":        45,
	"ErrTSLPlatformAccountSummaryMissingData":     46,
	"ErrAccountRecentlyUnlinked":                  47,
	"ErrTooManyRequestByIp":                       48,
	"ErrTooManyRequestByLogin":                    49,
	"ErrTooManyRequestByForgotPassword":           50,
	"ErrNoPlatformsLinked":                        51,
	"ErrInvalidUsername":                          52,
	"ErrUsernameTaken":                            53,
	"ErrAccountByUsernameNotFound":                54,
	"ErrUsernameAlreadySet":                       55,
	"ErrInvalidCountry":                           56,
	"ErrMagicLinkCodeInvalid":                     57,
	"ErrMagicLinkNotComplete":                     58,
	"ErrInvalidCreatorCode":                       59,
	"ErrProviderLocked":                           60,
	"ErrTooManyRequestByChangeEmail":              61,
	"ErrCouldNotGetIpLogs":                        62,
	"ErrCouldNotGetSessionLogs":                   63,
	"ErrCreatorCodeRequired":                      64,
	"ErrPromotionNotFound":                        65,
	"ErrPromotionNotActive":                       66,
	"ErrPromotionNoCodesAvailable":                67,
	"ErrUnknownEventTypeFromMailjet":              68,
	"Success":                                     200,
}

func (x BackendErrCode) String() string {
	return proto.EnumName(BackendErrCode_name, int32(x))
}

func (BackendErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{0}
}

type UserData struct {
	//
	//The IP address of the player that the request is about.
	//This must be the IP of the end-user, not a server IP, because rate limiting is based off this value.
	IP string `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	// The language-code the user expects to receive emails in. Defaults to English if not present.
	Locale string `protobuf:"bytes,2,opt,name=Locale,proto3" json:"Locale,omitempty"`
	// The relaying being used making a log
	Relying string `protobuf:"bytes,3,opt,name=Relying,proto3" json:"Relying,omitempty"`
	// The Meta contained addtional information like userAgent to store on ip log tables
	Meta                 map[string]string `protobuf:"bytes,4,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserData) Reset()         { *m = UserData{} }
func (m *UserData) String() string { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()    {}
func (*UserData) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{0}
}

func (m *UserData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserData.Unmarshal(m, b)
}
func (m *UserData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserData.Marshal(b, m, deterministic)
}
func (m *UserData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserData.Merge(m, src)
}
func (m *UserData) XXX_Size() int {
	return xxx_messageInfo_UserData.Size(m)
}
func (m *UserData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserData.DiscardUnknown(m)
}

var xxx_messageInfo_UserData proto.InternalMessageInfo

func (m *UserData) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *UserData) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *UserData) GetRelying() string {
	if m != nil {
		return m.Relying
	}
	return ""
}

func (m *UserData) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

type CreateAccountParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The email address used to identify the new account
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	// The user's password in plaintext. Will be hashed/salted server-side
	Password string `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	// Confirmation of the user's password. Must match the Password field
	PasswordConfirmation string `protobuf:"bytes,5,opt,name=PasswordConfirmation,proto3" json:"PasswordConfirmation,omitempty"`
	// The user's Date of Birth in Epoch time
	DateOfBirth int64 `protobuf:"varint,6,opt,name=DateOfBirth,proto3" json:"DateOfBirth,omitempty"`
	// The IATA country code where the user resides
	Country string `protobuf:"bytes,7,opt,name=Country,proto3" json:"Country,omitempty"`
	// Whether or not the user has consented to receiving emails from us
	EmailOptIn bool `protobuf:"varint,8,opt,name=EmailOptIn,proto3" json:"EmailOptIn,omitempty"`
	// Whether or not the user has agreed to the Terms of Service/Privacy Policy
	TosAccepted bool `protobuf:"varint,9,opt,name=TosAccepted,proto3" json:"TosAccepted,omitempty"`
	// Optional: The ClientID of the OIDC client creating this account
	ClientID string `protobuf:"bytes,10,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	// Optional: Information about additional authentication providers to link the new account to
	LinkInfo *AuthLinkInfo `protobuf:"bytes,12,opt,name=LinkInfo,proto3" json:"LinkInfo,omitempty"`
	// Optional: A/B test state. On or off.
	ActivateTest string `protobuf:"bytes,13,opt,name=ActivateTest,proto3" json:"ActivateTest,omitempty"`
	// The username that the user has chosen for the account
	Username             string   `protobuf:"bytes,14,opt,name=Username,proto3" json:"Username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountParams) Reset()         { *m = CreateAccountParams{} }
func (m *CreateAccountParams) String() string { return proto.CompactTextString(m) }
func (*CreateAccountParams) ProtoMessage()    {}
func (*CreateAccountParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{1}
}

func (m *CreateAccountParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountParams.Unmarshal(m, b)
}
func (m *CreateAccountParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountParams.Marshal(b, m, deterministic)
}
func (m *CreateAccountParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountParams.Merge(m, src)
}
func (m *CreateAccountParams) XXX_Size() int {
	return xxx_messageInfo_CreateAccountParams.Size(m)
}
func (m *CreateAccountParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountParams.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountParams proto.InternalMessageInfo

func (m *CreateAccountParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateAccountParams) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateAccountParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateAccountParams) GetPasswordConfirmation() string {
	if m != nil {
		return m.PasswordConfirmation
	}
	return ""
}

func (m *CreateAccountParams) GetDateOfBirth() int64 {
	if m != nil {
		return m.DateOfBirth
	}
	return 0
}

func (m *CreateAccountParams) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CreateAccountParams) GetEmailOptIn() bool {
	if m != nil {
		return m.EmailOptIn
	}
	return false
}

func (m *CreateAccountParams) GetTosAccepted() bool {
	if m != nil {
		return m.TosAccepted
	}
	return false
}

func (m *CreateAccountParams) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *CreateAccountParams) GetLinkInfo() *AuthLinkInfo {
	if m != nil {
		return m.LinkInfo
	}
	return nil
}

func (m *CreateAccountParams) GetActivateTest() string {
	if m != nil {
		return m.ActivateTest
	}
	return ""
}

func (m *CreateAccountParams) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type FindOrInitGPPAccountParams struct {
	// The name of the service that the AuthProviderID is valid for, ("steam", "xbox", "psn", etc.)
	AuthProvider string `protobuf:"bytes,1,opt,name=AuthProvider,proto3" json:"AuthProvider,omitempty"`
	// The user's ID in the auth provider's system (SteamID64, XUID, PSNID, etc.)
	AuthProviderID string `protobuf:"bytes,2,opt,name=AuthProviderID,proto3" json:"AuthProviderID,omitempty"`
	// Optional: The ID of the user's account in the GPP system. If blank the generated Global Account ID will be used.
	GameAccountID        string   `protobuf:"bytes,3,opt,name=GameAccountID,proto3" json:"GameAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindOrInitGPPAccountParams) Reset()         { *m = FindOrInitGPPAccountParams{} }
func (m *FindOrInitGPPAccountParams) String() string { return proto.CompactTextString(m) }
func (*FindOrInitGPPAccountParams) ProtoMessage()    {}
func (*FindOrInitGPPAccountParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{2}
}

func (m *FindOrInitGPPAccountParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOrInitGPPAccountParams.Unmarshal(m, b)
}
func (m *FindOrInitGPPAccountParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOrInitGPPAccountParams.Marshal(b, m, deterministic)
}
func (m *FindOrInitGPPAccountParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOrInitGPPAccountParams.Merge(m, src)
}
func (m *FindOrInitGPPAccountParams) XXX_Size() int {
	return xxx_messageInfo_FindOrInitGPPAccountParams.Size(m)
}
func (m *FindOrInitGPPAccountParams) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOrInitGPPAccountParams.DiscardUnknown(m)
}

var xxx_messageInfo_FindOrInitGPPAccountParams proto.InternalMessageInfo

func (m *FindOrInitGPPAccountParams) GetAuthProvider() string {
	if m != nil {
		return m.AuthProvider
	}
	return ""
}

func (m *FindOrInitGPPAccountParams) GetAuthProviderID() string {
	if m != nil {
		return m.AuthProviderID
	}
	return ""
}

func (m *FindOrInitGPPAccountParams) GetGameAccountID() string {
	if m != nil {
		return m.GameAccountID
	}
	return ""
}

type GPPAccountResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Details about the account that was found or created.
	Account              *GlobalAccount `protobuf:"bytes,3,opt,name=Account,proto3" json:"Account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GPPAccountResponse) Reset()         { *m = GPPAccountResponse{} }
func (m *GPPAccountResponse) String() string { return proto.CompactTextString(m) }
func (*GPPAccountResponse) ProtoMessage()    {}
func (*GPPAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{3}
}

func (m *GPPAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPPAccountResponse.Unmarshal(m, b)
}
func (m *GPPAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPPAccountResponse.Marshal(b, m, deterministic)
}
func (m *GPPAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPPAccountResponse.Merge(m, src)
}
func (m *GPPAccountResponse) XXX_Size() int {
	return xxx_messageInfo_GPPAccountResponse.Size(m)
}
func (m *GPPAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GPPAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GPPAccountResponse proto.InternalMessageInfo

func (m *GPPAccountResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *GPPAccountResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GPPAccountResponse) GetAccount() *GlobalAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

type AuthLinkInfo struct {
	// Indicates which of the LinkInfo fields is filled out
	Provider string `protobuf:"bytes,1,opt,name=Provider,proto3" json:"Provider,omitempty"`
	// Facebook account info
	Facebook *FacebookLinkInfo `protobuf:"bytes,3,opt,name=Facebook,proto3" json:"Facebook,omitempty"`
	// Google  account info
	Google *GoogleLinkInfo `protobuf:"bytes,4,opt,name=Google,proto3" json:"Google,omitempty"`
	// Line account info
	Line *LineLinkInfo `protobuf:"bytes,5,opt,name=Line,proto3" json:"Line,omitempty"`
	// Playstation account info
	Playstation *PlaystationLinkInfo `protobuf:"bytes,6,opt,name=Playstation,proto3" json:"Playstation,omitempty"`
	// Steam account info
	Steam *SteamLinkInfo `protobuf:"bytes,7,opt,name=Steam,proto3" json:"Steam,omitempty"`
	// Twitch account info
	Twitch *TwitchLinkInfo `protobuf:"bytes,8,opt,name=Twitch,proto3" json:"Twitch,omitempty"`
	// Twitter account info
	Twitter *TwitterLinkInfo `protobuf:"bytes,9,opt,name=Twitter,proto3" json:"Twitter,omitempty"`
	// VK account info
	VK *VKLinkInfo `protobuf:"bytes,10,opt,name=VK,proto3" json:"VK,omitempty"`
	// XBox account info
	Xbox *XboxLinkInfo `protobuf:"bytes,11,opt,name=Xbox,proto3" json:"Xbox,omitempty"`
	// Stadia account info
	Stadia *StadiaLinkInfo `protobuf:"bytes,12,opt,name=Stadia,proto3" json:"Stadia,omitempty"`
	// Discord account info
	Discord *DiscordLinkInfo `protobuf:"bytes,13,opt,name=Discord,proto3" json:"Discord,omitempty"`
	// Reddit account info
	Reddit               *RedditLinkInfo `protobuf:"bytes,14,opt,name=Reddit,proto3" json:"Reddit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AuthLinkInfo) Reset()         { *m = AuthLinkInfo{} }
func (m *AuthLinkInfo) String() string { return proto.CompactTextString(m) }
func (*AuthLinkInfo) ProtoMessage()    {}
func (*AuthLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{4}
}

func (m *AuthLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthLinkInfo.Unmarshal(m, b)
}
func (m *AuthLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthLinkInfo.Marshal(b, m, deterministic)
}
func (m *AuthLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthLinkInfo.Merge(m, src)
}
func (m *AuthLinkInfo) XXX_Size() int {
	return xxx_messageInfo_AuthLinkInfo.Size(m)
}
func (m *AuthLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AuthLinkInfo proto.InternalMessageInfo

func (m *AuthLinkInfo) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *AuthLinkInfo) GetFacebook() *FacebookLinkInfo {
	if m != nil {
		return m.Facebook
	}
	return nil
}

func (m *AuthLinkInfo) GetGoogle() *GoogleLinkInfo {
	if m != nil {
		return m.Google
	}
	return nil
}

func (m *AuthLinkInfo) GetLine() *LineLinkInfo {
	if m != nil {
		return m.Line
	}
	return nil
}

func (m *AuthLinkInfo) GetPlaystation() *PlaystationLinkInfo {
	if m != nil {
		return m.Playstation
	}
	return nil
}

func (m *AuthLinkInfo) GetSteam() *SteamLinkInfo {
	if m != nil {
		return m.Steam
	}
	return nil
}

func (m *AuthLinkInfo) GetTwitch() *TwitchLinkInfo {
	if m != nil {
		return m.Twitch
	}
	return nil
}

func (m *AuthLinkInfo) GetTwitter() *TwitterLinkInfo {
	if m != nil {
		return m.Twitter
	}
	return nil
}

func (m *AuthLinkInfo) GetVK() *VKLinkInfo {
	if m != nil {
		return m.VK
	}
	return nil
}

func (m *AuthLinkInfo) GetXbox() *XboxLinkInfo {
	if m != nil {
		return m.Xbox
	}
	return nil
}

func (m *AuthLinkInfo) GetStadia() *StadiaLinkInfo {
	if m != nil {
		return m.Stadia
	}
	return nil
}

func (m *AuthLinkInfo) GetDiscord() *DiscordLinkInfo {
	if m != nil {
		return m.Discord
	}
	return nil
}

func (m *AuthLinkInfo) GetReddit() *RedditLinkInfo {
	if m != nil {
		return m.Reddit
	}
	return nil
}

type FacebookLinkInfo struct {
	// Facebook Account ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Facebook display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Facebook OIDC Access token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// Facebook account email address
	Email                string   `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FacebookLinkInfo) Reset()         { *m = FacebookLinkInfo{} }
func (m *FacebookLinkInfo) String() string { return proto.CompactTextString(m) }
func (*FacebookLinkInfo) ProtoMessage()    {}
func (*FacebookLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{5}
}

func (m *FacebookLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FacebookLinkInfo.Unmarshal(m, b)
}
func (m *FacebookLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FacebookLinkInfo.Marshal(b, m, deterministic)
}
func (m *FacebookLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FacebookLinkInfo.Merge(m, src)
}
func (m *FacebookLinkInfo) XXX_Size() int {
	return xxx_messageInfo_FacebookLinkInfo.Size(m)
}
func (m *FacebookLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FacebookLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FacebookLinkInfo proto.InternalMessageInfo

func (m *FacebookLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *FacebookLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *FacebookLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *FacebookLinkInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type GoogleLinkInfo struct {
	// Google account ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Google account display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Google OIDC Access Token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// Google OIDC Refresh Token
	RefreshToken string `protobuf:"bytes,4,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	// Google account email address
	Email                string   `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleLinkInfo) Reset()         { *m = GoogleLinkInfo{} }
func (m *GoogleLinkInfo) String() string { return proto.CompactTextString(m) }
func (*GoogleLinkInfo) ProtoMessage()    {}
func (*GoogleLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{6}
}

func (m *GoogleLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleLinkInfo.Unmarshal(m, b)
}
func (m *GoogleLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleLinkInfo.Marshal(b, m, deterministic)
}
func (m *GoogleLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleLinkInfo.Merge(m, src)
}
func (m *GoogleLinkInfo) XXX_Size() int {
	return xxx_messageInfo_GoogleLinkInfo.Size(m)
}
func (m *GoogleLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleLinkInfo proto.InternalMessageInfo

func (m *GoogleLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GoogleLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *GoogleLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *GoogleLinkInfo) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *GoogleLinkInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type LineLinkInfo struct {
	// Line Account ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Line display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Line OIDC Access Token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// Line OIDC Refresh Token
	RefreshToken string `protobuf:"bytes,4,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	// Line account email address
	Email                string   `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LineLinkInfo) Reset()         { *m = LineLinkInfo{} }
func (m *LineLinkInfo) String() string { return proto.CompactTextString(m) }
func (*LineLinkInfo) ProtoMessage()    {}
func (*LineLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{7}
}

func (m *LineLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineLinkInfo.Unmarshal(m, b)
}
func (m *LineLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineLinkInfo.Marshal(b, m, deterministic)
}
func (m *LineLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineLinkInfo.Merge(m, src)
}
func (m *LineLinkInfo) XXX_Size() int {
	return xxx_messageInfo_LineLinkInfo.Size(m)
}
func (m *LineLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LineLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LineLinkInfo proto.InternalMessageInfo

func (m *LineLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *LineLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *LineLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *LineLinkInfo) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *LineLinkInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type PlaystationLinkInfo struct {
	// Playstation Account ID
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	// Playstation display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Playstation OIDC Access token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// User's age reported by Playstation
	Age int32 `protobuf:"varint,4,opt,name=Age,proto3" json:"Age,omitempty"`
	// TODO
	CommunityDomain string `protobuf:"bytes,5,opt,name=CommunityDomain,proto3" json:"CommunityDomain,omitempty"`
	// User's Date of Birth reported by Playstation
	DateOfBirth string `protobuf:"bytes,6,opt,name=DateOfBirth,proto3" json:"DateOfBirth,omitempty"`
	// User's language reported by Playstation
	Language string `protobuf:"bytes,7,opt,name=Language,proto3" json:"Language,omitempty"`
	// Parental controls enabled on this Playstation account
	ParentalControl *PSNParentalControl `protobuf:"bytes,8,opt,name=ParentalControl,proto3" json:"ParentalControl,omitempty"`
	// Playstation account region
	Region string `protobuf:"bytes,9,opt,name=Region,proto3" json:"Region,omitempty"`
	// Whether or not this account is a sub-account of another PSN account.
	IsSubAccount         bool     `protobuf:"varint,10,opt,name=IsSubAccount,proto3" json:"IsSubAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaystationLinkInfo) Reset()         { *m = PlaystationLinkInfo{} }
func (m *PlaystationLinkInfo) String() string { return proto.CompactTextString(m) }
func (*PlaystationLinkInfo) ProtoMessage()    {}
func (*PlaystationLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{8}
}

func (m *PlaystationLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaystationLinkInfo.Unmarshal(m, b)
}
func (m *PlaystationLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaystationLinkInfo.Marshal(b, m, deterministic)
}
func (m *PlaystationLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaystationLinkInfo.Merge(m, src)
}
func (m *PlaystationLinkInfo) XXX_Size() int {
	return xxx_messageInfo_PlaystationLinkInfo.Size(m)
}
func (m *PlaystationLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaystationLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlaystationLinkInfo proto.InternalMessageInfo

func (m *PlaystationLinkInfo) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *PlaystationLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *PlaystationLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *PlaystationLinkInfo) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *PlaystationLinkInfo) GetCommunityDomain() string {
	if m != nil {
		return m.CommunityDomain
	}
	return ""
}

func (m *PlaystationLinkInfo) GetDateOfBirth() string {
	if m != nil {
		return m.DateOfBirth
	}
	return ""
}

func (m *PlaystationLinkInfo) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *PlaystationLinkInfo) GetParentalControl() *PSNParentalControl {
	if m != nil {
		return m.ParentalControl
	}
	return nil
}

func (m *PlaystationLinkInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PlaystationLinkInfo) GetIsSubAccount() bool {
	if m != nil {
		return m.IsSubAccount
	}
	return false
}

// The parental controls configured for this Playstation account.
type PSNParentalControl struct {
	// "This control blocks a Sub Account from using text chat, voice chat, video chat, and other messaging features". More info on the <a href="https://www.playstation.com/en-us/network/legal/ratings/">Playstation Legal Doc</a>
	RestrictChat bool `protobuf:"varint,1,opt,name=RestrictChat,proto3" json:"RestrictChat,omitempty"`
	// "This parental control blocks a Sub Account from posting or viewing user-generated content". More info on the <a href="https://www.playstation.com/en-us/network/legal/ratings/">Playstation Legal Doc</a>
	RestrictUGM bool `protobuf:"varint,2,opt,name=RestrictUGM,proto3" json:"RestrictUGM,omitempty"`
	// "This setting allows a Master Account holder to A) prevent a Sub Account from buying game content through PSN that not intended for his/her age according to the ESRB rating system and B) prevent a Sub Account from playing software content on PSN that is not intended for his age according to the ESRB rating system.". More info on the <a href="https://www.playstation.com/en-us/network/legal/ratings/">Playstation Legal Doc</a>
	RestrictStoreContent bool     `protobuf:"varint,3,opt,name=RestrictStoreContent,proto3" json:"RestrictStoreContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PSNParentalControl) Reset()         { *m = PSNParentalControl{} }
func (m *PSNParentalControl) String() string { return proto.CompactTextString(m) }
func (*PSNParentalControl) ProtoMessage()    {}
func (*PSNParentalControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{9}
}

func (m *PSNParentalControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PSNParentalControl.Unmarshal(m, b)
}
func (m *PSNParentalControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PSNParentalControl.Marshal(b, m, deterministic)
}
func (m *PSNParentalControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PSNParentalControl.Merge(m, src)
}
func (m *PSNParentalControl) XXX_Size() int {
	return xxx_messageInfo_PSNParentalControl.Size(m)
}
func (m *PSNParentalControl) XXX_DiscardUnknown() {
	xxx_messageInfo_PSNParentalControl.DiscardUnknown(m)
}

var xxx_messageInfo_PSNParentalControl proto.InternalMessageInfo

func (m *PSNParentalControl) GetRestrictChat() bool {
	if m != nil {
		return m.RestrictChat
	}
	return false
}

func (m *PSNParentalControl) GetRestrictUGM() bool {
	if m != nil {
		return m.RestrictUGM
	}
	return false
}

func (m *PSNParentalControl) GetRestrictStoreContent() bool {
	if m != nil {
		return m.RestrictStoreContent
	}
	return false
}

type RedditLinkInfo struct {
	// Reddit Account ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Reddit display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Reddit OIDC Access token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// Reddit OIDC Refresh token
	RefreshToken         string   `protobuf:"bytes,4,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedditLinkInfo) Reset()         { *m = RedditLinkInfo{} }
func (m *RedditLinkInfo) String() string { return proto.CompactTextString(m) }
func (*RedditLinkInfo) ProtoMessage()    {}
func (*RedditLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{10}
}

func (m *RedditLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedditLinkInfo.Unmarshal(m, b)
}
func (m *RedditLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedditLinkInfo.Marshal(b, m, deterministic)
}
func (m *RedditLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedditLinkInfo.Merge(m, src)
}
func (m *RedditLinkInfo) XXX_Size() int {
	return xxx_messageInfo_RedditLinkInfo.Size(m)
}
func (m *RedditLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RedditLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RedditLinkInfo proto.InternalMessageInfo

func (m *RedditLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *RedditLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *RedditLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *RedditLinkInfo) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type StadiaLinkInfo struct {
	// Stadia player ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Stadia display name
	DisplayName          string   `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StadiaLinkInfo) Reset()         { *m = StadiaLinkInfo{} }
func (m *StadiaLinkInfo) String() string { return proto.CompactTextString(m) }
func (*StadiaLinkInfo) ProtoMessage()    {}
func (*StadiaLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{11}
}

func (m *StadiaLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StadiaLinkInfo.Unmarshal(m, b)
}
func (m *StadiaLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StadiaLinkInfo.Marshal(b, m, deterministic)
}
func (m *StadiaLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StadiaLinkInfo.Merge(m, src)
}
func (m *StadiaLinkInfo) XXX_Size() int {
	return xxx_messageInfo_StadiaLinkInfo.Size(m)
}
func (m *StadiaLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StadiaLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StadiaLinkInfo proto.InternalMessageInfo

func (m *StadiaLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *StadiaLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type SteamLinkInfo struct {
	// Steam account ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Steam display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Steam profile picture
	Photos               []*SteamPhoto `protobuf:"bytes,3,rep,name=Photos,proto3" json:"Photos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SteamLinkInfo) Reset()         { *m = SteamLinkInfo{} }
func (m *SteamLinkInfo) String() string { return proto.CompactTextString(m) }
func (*SteamLinkInfo) ProtoMessage()    {}
func (*SteamLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{12}
}

func (m *SteamLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SteamLinkInfo.Unmarshal(m, b)
}
func (m *SteamLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SteamLinkInfo.Marshal(b, m, deterministic)
}
func (m *SteamLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SteamLinkInfo.Merge(m, src)
}
func (m *SteamLinkInfo) XXX_Size() int {
	return xxx_messageInfo_SteamLinkInfo.Size(m)
}
func (m *SteamLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SteamLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SteamLinkInfo proto.InternalMessageInfo

func (m *SteamLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SteamLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *SteamLinkInfo) GetPhotos() []*SteamPhoto {
	if m != nil {
		return m.Photos
	}
	return nil
}

type SteamPhoto struct {
	// Link to a profile picture
	Value                string   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SteamPhoto) Reset()         { *m = SteamPhoto{} }
func (m *SteamPhoto) String() string { return proto.CompactTextString(m) }
func (*SteamPhoto) ProtoMessage()    {}
func (*SteamPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{13}
}

func (m *SteamPhoto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SteamPhoto.Unmarshal(m, b)
}
func (m *SteamPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SteamPhoto.Marshal(b, m, deterministic)
}
func (m *SteamPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SteamPhoto.Merge(m, src)
}
func (m *SteamPhoto) XXX_Size() int {
	return xxx_messageInfo_SteamPhoto.Size(m)
}
func (m *SteamPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_SteamPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_SteamPhoto proto.InternalMessageInfo

func (m *SteamPhoto) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TwitchLinkInfo struct {
	// Twitch account ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Twitch display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Twitch OIDC Access Token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// Twitch OIDC Refresh Token
	RefreshToken string `protobuf:"bytes,4,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	// Twitch account email address
	Email string `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	// Twitch account username
	Username             string   `protobuf:"bytes,6,opt,name=Username,proto3" json:"Username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwitchLinkInfo) Reset()         { *m = TwitchLinkInfo{} }
func (m *TwitchLinkInfo) String() string { return proto.CompactTextString(m) }
func (*TwitchLinkInfo) ProtoMessage()    {}
func (*TwitchLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{14}
}

func (m *TwitchLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwitchLinkInfo.Unmarshal(m, b)
}
func (m *TwitchLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwitchLinkInfo.Marshal(b, m, deterministic)
}
func (m *TwitchLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwitchLinkInfo.Merge(m, src)
}
func (m *TwitchLinkInfo) XXX_Size() int {
	return xxx_messageInfo_TwitchLinkInfo.Size(m)
}
func (m *TwitchLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TwitchLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TwitchLinkInfo proto.InternalMessageInfo

func (m *TwitchLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *TwitchLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *TwitchLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *TwitchLinkInfo) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *TwitchLinkInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TwitchLinkInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type TwitterLinkInfo struct {
	// Twitter Account ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Twitter display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Twitter OIDC Access Token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// Twitter account email
	Email                string   `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwitterLinkInfo) Reset()         { *m = TwitterLinkInfo{} }
func (m *TwitterLinkInfo) String() string { return proto.CompactTextString(m) }
func (*TwitterLinkInfo) ProtoMessage()    {}
func (*TwitterLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{15}
}

func (m *TwitterLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwitterLinkInfo.Unmarshal(m, b)
}
func (m *TwitterLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwitterLinkInfo.Marshal(b, m, deterministic)
}
func (m *TwitterLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwitterLinkInfo.Merge(m, src)
}
func (m *TwitterLinkInfo) XXX_Size() int {
	return xxx_messageInfo_TwitterLinkInfo.Size(m)
}
func (m *TwitterLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TwitterLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TwitterLinkInfo proto.InternalMessageInfo

func (m *TwitterLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *TwitterLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *TwitterLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *TwitterLinkInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type VKLinkInfo struct {
	// VK Account ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// VK Display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// VK OIDC Access Token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// VK account email address
	Email                string   `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VKLinkInfo) Reset()         { *m = VKLinkInfo{} }
func (m *VKLinkInfo) String() string { return proto.CompactTextString(m) }
func (*VKLinkInfo) ProtoMessage()    {}
func (*VKLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{16}
}

func (m *VKLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VKLinkInfo.Unmarshal(m, b)
}
func (m *VKLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VKLinkInfo.Marshal(b, m, deterministic)
}
func (m *VKLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VKLinkInfo.Merge(m, src)
}
func (m *VKLinkInfo) XXX_Size() int {
	return xxx_messageInfo_VKLinkInfo.Size(m)
}
func (m *VKLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VKLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VKLinkInfo proto.InternalMessageInfo

func (m *VKLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *VKLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *VKLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *VKLinkInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type XboxLinkInfo struct {
	// XBox account ID
	XUID string `protobuf:"bytes,1,opt,name=XUID,proto3" json:"XUID,omitempty"`
	// XBox display name
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Xbox OIDC Access token
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// Xbox OIDC Refresh Token
	RefreshToken string `protobuf:"bytes,4,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	// When the XBox OIDC tokens expire
	ValidUntil           int64    `protobuf:"varint,5,opt,name=ValidUntil,proto3" json:"ValidUntil,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XboxLinkInfo) Reset()         { *m = XboxLinkInfo{} }
func (m *XboxLinkInfo) String() string { return proto.CompactTextString(m) }
func (*XboxLinkInfo) ProtoMessage()    {}
func (*XboxLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{17}
}

func (m *XboxLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XboxLinkInfo.Unmarshal(m, b)
}
func (m *XboxLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XboxLinkInfo.Marshal(b, m, deterministic)
}
func (m *XboxLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XboxLinkInfo.Merge(m, src)
}
func (m *XboxLinkInfo) XXX_Size() int {
	return xxx_messageInfo_XboxLinkInfo.Size(m)
}
func (m *XboxLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_XboxLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_XboxLinkInfo proto.InternalMessageInfo

func (m *XboxLinkInfo) GetXUID() string {
	if m != nil {
		return m.XUID
	}
	return ""
}

func (m *XboxLinkInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *XboxLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *XboxLinkInfo) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *XboxLinkInfo) GetValidUntil() int64 {
	if m != nil {
		return m.ValidUntil
	}
	return 0
}

type DiscordLinkInfo struct {
	// Discord user ID
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Discord Username
	Username string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	// Discord unique identifier (like #1234)
	Discriminator string `protobuf:"bytes,3,opt,name=Discriminator,proto3" json:"Discriminator,omitempty"`
	// User's email address
	Email string `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	// Whether or not the user's email has been verified.
	Verified bool `protobuf:"varint,5,opt,name=Verified,proto3" json:"Verified,omitempty"`
	// Whether or not this account is a bot.
	Bot bool `protobuf:"varint,6,opt,name=Bot,proto3" json:"Bot,omitempty"`
	// Discord OIDC Access Token
	AccessToken string `protobuf:"bytes,7,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// Discord OIDC Refresh Token
	RefreshToken string `protobuf:"bytes,8,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	// When the Discord OIDC Access Token expires
	ExpiresIn int64 `protobuf:"varint,9,opt,name=ExpiresIn,proto3" json:"ExpiresIn,omitempty"`
	// Identifier for the user's Avatar. Use this with Discord's CDN to retrieve the avatar image. For more info see https://discord.com/developers/docs/reference#image-formatting
	AvatarHash string `protobuf:"bytes,10,opt,name=AvatarHash,proto3" json:"AvatarHash,omitempty"`
	// Premium types den9te the level of premium a user has.
	PremiumType int64 `protobuf:"varint,11,opt,name=PremiumType,proto3" json:"PremiumType,omitempty"`
	// Special information about this account, such as if it's a Discord employee, a bot, etc.
	Flags int64 `protobuf:"varint,12,opt,name=Flags,proto3" json:"Flags,omitempty"`
	// Same as Flags, but only lists flags displayed to the public.
	PublicFlags          int64    `protobuf:"varint,13,opt,name=PublicFlags,proto3" json:"PublicFlags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscordLinkInfo) Reset()         { *m = DiscordLinkInfo{} }
func (m *DiscordLinkInfo) String() string { return proto.CompactTextString(m) }
func (*DiscordLinkInfo) ProtoMessage()    {}
func (*DiscordLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{18}
}

func (m *DiscordLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscordLinkInfo.Unmarshal(m, b)
}
func (m *DiscordLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscordLinkInfo.Marshal(b, m, deterministic)
}
func (m *DiscordLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscordLinkInfo.Merge(m, src)
}
func (m *DiscordLinkInfo) XXX_Size() int {
	return xxx_messageInfo_DiscordLinkInfo.Size(m)
}
func (m *DiscordLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscordLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DiscordLinkInfo proto.InternalMessageInfo

func (m *DiscordLinkInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DiscordLinkInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *DiscordLinkInfo) GetDiscriminator() string {
	if m != nil {
		return m.Discriminator
	}
	return ""
}

func (m *DiscordLinkInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *DiscordLinkInfo) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *DiscordLinkInfo) GetBot() bool {
	if m != nil {
		return m.Bot
	}
	return false
}

func (m *DiscordLinkInfo) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *DiscordLinkInfo) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *DiscordLinkInfo) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *DiscordLinkInfo) GetAvatarHash() string {
	if m != nil {
		return m.AvatarHash
	}
	return ""
}

func (m *DiscordLinkInfo) GetPremiumType() int64 {
	if m != nil {
		return m.PremiumType
	}
	return 0
}

func (m *DiscordLinkInfo) GetFlags() int64 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *DiscordLinkInfo) GetPublicFlags() int64 {
	if m != nil {
		return m.PublicFlags
	}
	return 0
}

type DeleteAccountParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account to be deleted.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The user's password, used to confirm access to the account before deletion.
	Password             string   `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAccountParams) Reset()         { *m = DeleteAccountParams{} }
func (m *DeleteAccountParams) String() string { return proto.CompactTextString(m) }
func (*DeleteAccountParams) ProtoMessage()    {}
func (*DeleteAccountParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{19}
}

func (m *DeleteAccountParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAccountParams.Unmarshal(m, b)
}
func (m *DeleteAccountParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAccountParams.Marshal(b, m, deterministic)
}
func (m *DeleteAccountParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAccountParams.Merge(m, src)
}
func (m *DeleteAccountParams) XXX_Size() int {
	return xxx_messageInfo_DeleteAccountParams.Size(m)
}
func (m *DeleteAccountParams) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAccountParams.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAccountParams proto.InternalMessageInfo

func (m *DeleteAccountParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *DeleteAccountParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *DeleteAccountParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ResendActivationParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// A Global Account ID
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Optional: OIDC Client ID of the service making the request.
	ClientID string `protobuf:"bytes,3,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	// Optional: A/B test state. On or off.
	ActivateTest         string   `protobuf:"bytes,4,opt,name=ActivateTest,proto3" json:"ActivateTest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResendActivationParams) Reset()         { *m = ResendActivationParams{} }
func (m *ResendActivationParams) String() string { return proto.CompactTextString(m) }
func (*ResendActivationParams) ProtoMessage()    {}
func (*ResendActivationParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{20}
}

func (m *ResendActivationParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResendActivationParams.Unmarshal(m, b)
}
func (m *ResendActivationParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResendActivationParams.Marshal(b, m, deterministic)
}
func (m *ResendActivationParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResendActivationParams.Merge(m, src)
}
func (m *ResendActivationParams) XXX_Size() int {
	return xxx_messageInfo_ResendActivationParams.Size(m)
}
func (m *ResendActivationParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ResendActivationParams.DiscardUnknown(m)
}

var xxx_messageInfo_ResendActivationParams proto.InternalMessageInfo

func (m *ResendActivationParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ResendActivationParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *ResendActivationParams) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *ResendActivationParams) GetActivateTest() string {
	if m != nil {
		return m.ActivateTest
	}
	return ""
}

type GuidInput struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// A Global Account ID
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Optional: OIDC Client ID of the service making the request.
	ClientID             string   `protobuf:"bytes,3,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuidInput) Reset()         { *m = GuidInput{} }
func (m *GuidInput) String() string { return proto.CompactTextString(m) }
func (*GuidInput) ProtoMessage()    {}
func (*GuidInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{21}
}

func (m *GuidInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuidInput.Unmarshal(m, b)
}
func (m *GuidInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuidInput.Marshal(b, m, deterministic)
}
func (m *GuidInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuidInput.Merge(m, src)
}
func (m *GuidInput) XXX_Size() int {
	return xxx_messageInfo_GuidInput.Size(m)
}
func (m *GuidInput) XXX_DiscardUnknown() {
	xxx_messageInfo_GuidInput.DiscardUnknown(m)
}

var xxx_messageInfo_GuidInput proto.InternalMessageInfo

func (m *GuidInput) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GuidInput) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *GuidInput) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

type GuidProviderCombo struct {
	// A Global Account ID
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The name of an Authentication Provider
	Provider             string   `protobuf:"bytes,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuidProviderCombo) Reset()         { *m = GuidProviderCombo{} }
func (m *GuidProviderCombo) String() string { return proto.CompactTextString(m) }
func (*GuidProviderCombo) ProtoMessage()    {}
func (*GuidProviderCombo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{22}
}

func (m *GuidProviderCombo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuidProviderCombo.Unmarshal(m, b)
}
func (m *GuidProviderCombo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuidProviderCombo.Marshal(b, m, deterministic)
}
func (m *GuidProviderCombo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuidProviderCombo.Merge(m, src)
}
func (m *GuidProviderCombo) XXX_Size() int {
	return xxx_messageInfo_GuidProviderCombo.Size(m)
}
func (m *GuidProviderCombo) XXX_DiscardUnknown() {
	xxx_messageInfo_GuidProviderCombo.DiscardUnknown(m)
}

var xxx_messageInfo_GuidProviderCombo proto.InternalMessageInfo

func (m *GuidProviderCombo) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *GuidProviderCombo) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type DestroyLinkParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account to be unlinked.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The name of the Authentication Provider to unlink.
	Provider             string   `protobuf:"bytes,3,opt,name=Provider,proto3" json:"Provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestroyLinkParams) Reset()         { *m = DestroyLinkParams{} }
func (m *DestroyLinkParams) String() string { return proto.CompactTextString(m) }
func (*DestroyLinkParams) ProtoMessage()    {}
func (*DestroyLinkParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{23}
}

func (m *DestroyLinkParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DestroyLinkParams.Unmarshal(m, b)
}
func (m *DestroyLinkParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DestroyLinkParams.Marshal(b, m, deterministic)
}
func (m *DestroyLinkParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroyLinkParams.Merge(m, src)
}
func (m *DestroyLinkParams) XXX_Size() int {
	return xxx_messageInfo_DestroyLinkParams.Size(m)
}
func (m *DestroyLinkParams) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroyLinkParams.DiscardUnknown(m)
}

var xxx_messageInfo_DestroyLinkParams proto.InternalMessageInfo

func (m *DestroyLinkParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *DestroyLinkParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *DestroyLinkParams) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type CriteriaQuery struct {
	// The criteria you wish to search for
	Criteria string `protobuf:"bytes,1,opt,name=Criteria,proto3" json:"Criteria,omitempty"`
	//
	//Describes what part of the account Criteria is searching for.
	//Possible values:
	//- guid
	//- provider_id
	//- platform_id
	CriteriaType         string   `protobuf:"bytes,2,opt,name=CriteriaType,proto3" json:"CriteriaType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CriteriaQuery) Reset()         { *m = CriteriaQuery{} }
func (m *CriteriaQuery) String() string { return proto.CompactTextString(m) }
func (*CriteriaQuery) ProtoMessage()    {}
func (*CriteriaQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{24}
}

func (m *CriteriaQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CriteriaQuery.Unmarshal(m, b)
}
func (m *CriteriaQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CriteriaQuery.Marshal(b, m, deterministic)
}
func (m *CriteriaQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CriteriaQuery.Merge(m, src)
}
func (m *CriteriaQuery) XXX_Size() int {
	return xxx_messageInfo_CriteriaQuery.Size(m)
}
func (m *CriteriaQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_CriteriaQuery.DiscardUnknown(m)
}

var xxx_messageInfo_CriteriaQuery proto.InternalMessageInfo

func (m *CriteriaQuery) GetCriteria() string {
	if m != nil {
		return m.Criteria
	}
	return ""
}

func (m *CriteriaQuery) GetCriteriaType() string {
	if m != nil {
		return m.CriteriaType
	}
	return ""
}

type ActivateAccountParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The JWT sent to the user's email to verify they have access to the email they signed up with.
	ActivationToken      string   `protobuf:"bytes,3,opt,name=ActivationToken,proto3" json:"ActivationToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateAccountParams) Reset()         { *m = ActivateAccountParams{} }
func (m *ActivateAccountParams) String() string { return proto.CompactTextString(m) }
func (*ActivateAccountParams) ProtoMessage()    {}
func (*ActivateAccountParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{25}
}

func (m *ActivateAccountParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateAccountParams.Unmarshal(m, b)
}
func (m *ActivateAccountParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateAccountParams.Marshal(b, m, deterministic)
}
func (m *ActivateAccountParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateAccountParams.Merge(m, src)
}
func (m *ActivateAccountParams) XXX_Size() int {
	return xxx_messageInfo_ActivateAccountParams.Size(m)
}
func (m *ActivateAccountParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateAccountParams.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateAccountParams proto.InternalMessageInfo

func (m *ActivateAccountParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ActivateAccountParams) GetActivationToken() string {
	if m != nil {
		return m.ActivationToken
	}
	return ""
}

type BeginEmailChangeParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account that's being updated.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The email address to change the account to.
	NewEmail string `protobuf:"bytes,3,opt,name=NewEmail,proto3" json:"NewEmail,omitempty"`
	// The password for this account, used to confirm that the user has access to the account being changed.
	Password             string   `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeginEmailChangeParams) Reset()         { *m = BeginEmailChangeParams{} }
func (m *BeginEmailChangeParams) String() string { return proto.CompactTextString(m) }
func (*BeginEmailChangeParams) ProtoMessage()    {}
func (*BeginEmailChangeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{26}
}

func (m *BeginEmailChangeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeginEmailChangeParams.Unmarshal(m, b)
}
func (m *BeginEmailChangeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeginEmailChangeParams.Marshal(b, m, deterministic)
}
func (m *BeginEmailChangeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeginEmailChangeParams.Merge(m, src)
}
func (m *BeginEmailChangeParams) XXX_Size() int {
	return xxx_messageInfo_BeginEmailChangeParams.Size(m)
}
func (m *BeginEmailChangeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_BeginEmailChangeParams.DiscardUnknown(m)
}

var xxx_messageInfo_BeginEmailChangeParams proto.InternalMessageInfo

func (m *BeginEmailChangeParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BeginEmailChangeParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *BeginEmailChangeParams) GetNewEmail() string {
	if m != nil {
		return m.NewEmail
	}
	return ""
}

func (m *BeginEmailChangeParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CompleteEmailChangeParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The JWT that we sent to the user's new email to verify they have access to the email account.
	Token                string   `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteEmailChangeParams) Reset()         { *m = CompleteEmailChangeParams{} }
func (m *CompleteEmailChangeParams) String() string { return proto.CompactTextString(m) }
func (*CompleteEmailChangeParams) ProtoMessage()    {}
func (*CompleteEmailChangeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{27}
}

func (m *CompleteEmailChangeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteEmailChangeParams.Unmarshal(m, b)
}
func (m *CompleteEmailChangeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteEmailChangeParams.Marshal(b, m, deterministic)
}
func (m *CompleteEmailChangeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteEmailChangeParams.Merge(m, src)
}
func (m *CompleteEmailChangeParams) XXX_Size() int {
	return xxx_messageInfo_CompleteEmailChangeParams.Size(m)
}
func (m *CompleteEmailChangeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteEmailChangeParams.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteEmailChangeParams proto.InternalMessageInfo

func (m *CompleteEmailChangeParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CompleteEmailChangeParams) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UpdateUsernameParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account that's being updated.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// THe new username to be set.
	NewUsername          string   `protobuf:"bytes,3,opt,name=NewUsername,proto3" json:"NewUsername,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUsernameParams) Reset()         { *m = UpdateUsernameParams{} }
func (m *UpdateUsernameParams) String() string { return proto.CompactTextString(m) }
func (*UpdateUsernameParams) ProtoMessage()    {}
func (*UpdateUsernameParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{28}
}

func (m *UpdateUsernameParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUsernameParams.Unmarshal(m, b)
}
func (m *UpdateUsernameParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUsernameParams.Marshal(b, m, deterministic)
}
func (m *UpdateUsernameParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUsernameParams.Merge(m, src)
}
func (m *UpdateUsernameParams) XXX_Size() int {
	return xxx_messageInfo_UpdateUsernameParams.Size(m)
}
func (m *UpdateUsernameParams) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUsernameParams.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUsernameParams proto.InternalMessageInfo

func (m *UpdateUsernameParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateUsernameParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *UpdateUsernameParams) GetNewUsername() string {
	if m != nil {
		return m.NewUsername
	}
	return ""
}

type UpdatePasswordParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account that's being updated.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The password originally set on the account. Used to confirm that the user has access to the account being changed.
	OldPass string `protobuf:"bytes,3,opt,name=OldPass,proto3" json:"OldPass,omitempty"`
	// The new password to set, in plaintext. Will be hashed/salted server-side.
	NewPass string `protobuf:"bytes,4,opt,name=NewPass,proto3" json:"NewPass,omitempty"`
	// Confirmation of the new password. Must match the NewPass field.
	PassConf             string   `protobuf:"bytes,5,opt,name=PassConf,proto3" json:"PassConf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordParams) Reset()         { *m = UpdatePasswordParams{} }
func (m *UpdatePasswordParams) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordParams) ProtoMessage()    {}
func (*UpdatePasswordParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{29}
}

func (m *UpdatePasswordParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordParams.Unmarshal(m, b)
}
func (m *UpdatePasswordParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordParams.Marshal(b, m, deterministic)
}
func (m *UpdatePasswordParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordParams.Merge(m, src)
}
func (m *UpdatePasswordParams) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordParams.Size(m)
}
func (m *UpdatePasswordParams) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordParams.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordParams proto.InternalMessageInfo

func (m *UpdatePasswordParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdatePasswordParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *UpdatePasswordParams) GetOldPass() string {
	if m != nil {
		return m.OldPass
	}
	return ""
}

func (m *UpdatePasswordParams) GetNewPass() string {
	if m != nil {
		return m.NewPass
	}
	return ""
}

func (m *UpdatePasswordParams) GetPassConf() string {
	if m != nil {
		return m.PassConf
	}
	return ""
}

type BeginForgotPasswordParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The email address of the account that we're recovering a password for. Not needed if GUID is used.
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	// The Global Account ID of the account that we're recovering a password for. Not needed if Email is used.
	GUID string `protobuf:"bytes,3,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Optional: OIDC Client ID of the service making the request.
	ClientID             string   `protobuf:"bytes,4,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeginForgotPasswordParams) Reset()         { *m = BeginForgotPasswordParams{} }
func (m *BeginForgotPasswordParams) String() string { return proto.CompactTextString(m) }
func (*BeginForgotPasswordParams) ProtoMessage()    {}
func (*BeginForgotPasswordParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{30}
}

func (m *BeginForgotPasswordParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeginForgotPasswordParams.Unmarshal(m, b)
}
func (m *BeginForgotPasswordParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeginForgotPasswordParams.Marshal(b, m, deterministic)
}
func (m *BeginForgotPasswordParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeginForgotPasswordParams.Merge(m, src)
}
func (m *BeginForgotPasswordParams) XXX_Size() int {
	return xxx_messageInfo_BeginForgotPasswordParams.Size(m)
}
func (m *BeginForgotPasswordParams) XXX_DiscardUnknown() {
	xxx_messageInfo_BeginForgotPasswordParams.DiscardUnknown(m)
}

var xxx_messageInfo_BeginForgotPasswordParams proto.InternalMessageInfo

func (m *BeginForgotPasswordParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BeginForgotPasswordParams) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *BeginForgotPasswordParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *BeginForgotPasswordParams) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

type CompleteForgotPasswordParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The JWT that we emailed to the user to verify they have access to the account.
	ResetToken string `protobuf:"bytes,2,opt,name=ResetToken,proto3" json:"ResetToken,omitempty"`
	// The new password to set, in plaintext. Will be hashed/salted server-side.
	NewPass string `protobuf:"bytes,3,opt,name=NewPass,proto3" json:"NewPass,omitempty"`
	// Confirmation of the new password. Must match the NewPass field.
	PassConf             string   `protobuf:"bytes,4,opt,name=PassConf,proto3" json:"PassConf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteForgotPasswordParams) Reset()         { *m = CompleteForgotPasswordParams{} }
func (m *CompleteForgotPasswordParams) String() string { return proto.CompactTextString(m) }
func (*CompleteForgotPasswordParams) ProtoMessage()    {}
func (*CompleteForgotPasswordParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{31}
}

func (m *CompleteForgotPasswordParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteForgotPasswordParams.Unmarshal(m, b)
}
func (m *CompleteForgotPasswordParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteForgotPasswordParams.Marshal(b, m, deterministic)
}
func (m *CompleteForgotPasswordParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteForgotPasswordParams.Merge(m, src)
}
func (m *CompleteForgotPasswordParams) XXX_Size() int {
	return xxx_messageInfo_CompleteForgotPasswordParams.Size(m)
}
func (m *CompleteForgotPasswordParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteForgotPasswordParams.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteForgotPasswordParams proto.InternalMessageInfo

func (m *CompleteForgotPasswordParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CompleteForgotPasswordParams) GetResetToken() string {
	if m != nil {
		return m.ResetToken
	}
	return ""
}

func (m *CompleteForgotPasswordParams) GetNewPass() string {
	if m != nil {
		return m.NewPass
	}
	return ""
}

func (m *CompleteForgotPasswordParams) GetPassConf() string {
	if m != nil {
		return m.PassConf
	}
	return ""
}

type SetCommPrefsParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account being updated.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Whether or not the user wishes to receive communications from PUBG.
	EmailOptIn           bool     `protobuf:"varint,3,opt,name=EmailOptIn,proto3" json:"EmailOptIn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetCommPrefsParams) Reset()         { *m = SetCommPrefsParams{} }
func (m *SetCommPrefsParams) String() string { return proto.CompactTextString(m) }
func (*SetCommPrefsParams) ProtoMessage()    {}
func (*SetCommPrefsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{32}
}

func (m *SetCommPrefsParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetCommPrefsParams.Unmarshal(m, b)
}
func (m *SetCommPrefsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetCommPrefsParams.Marshal(b, m, deterministic)
}
func (m *SetCommPrefsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetCommPrefsParams.Merge(m, src)
}
func (m *SetCommPrefsParams) XXX_Size() int {
	return xxx_messageInfo_SetCommPrefsParams.Size(m)
}
func (m *SetCommPrefsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SetCommPrefsParams.DiscardUnknown(m)
}

var xxx_messageInfo_SetCommPrefsParams proto.InternalMessageInfo

func (m *SetCommPrefsParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *SetCommPrefsParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *SetCommPrefsParams) GetEmailOptIn() bool {
	if m != nil {
		return m.EmailOptIn
	}
	return false
}

type SetPersonaParams struct {
	// The Global Account ID of the account being updated.
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The platform selected as the user's Persona Platform.
	Platform             string   `protobuf:"bytes,2,opt,name=Platform,proto3" json:"Platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPersonaParams) Reset()         { *m = SetPersonaParams{} }
func (m *SetPersonaParams) String() string { return proto.CompactTextString(m) }
func (*SetPersonaParams) ProtoMessage()    {}
func (*SetPersonaParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{33}
}

func (m *SetPersonaParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPersonaParams.Unmarshal(m, b)
}
func (m *SetPersonaParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPersonaParams.Marshal(b, m, deterministic)
}
func (m *SetPersonaParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPersonaParams.Merge(m, src)
}
func (m *SetPersonaParams) XXX_Size() int {
	return xxx_messageInfo_SetPersonaParams.Size(m)
}
func (m *SetPersonaParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPersonaParams.DiscardUnknown(m)
}

var xxx_messageInfo_SetPersonaParams proto.InternalMessageInfo

func (m *SetPersonaParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *SetPersonaParams) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type CreateLinkParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account being linked.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Info about the third-party account being linked to the Global Account.
	LinkInfo *AuthLinkInfo `protobuf:"bytes,3,opt,name=LinkInfo,proto3" json:"LinkInfo,omitempty"`
	// A magic link code to use to lookup AuthLinkInfo for the magic linking flow.
	MagicLinkCode        string   `protobuf:"bytes,4,opt,name=MagicLinkCode,proto3" json:"MagicLinkCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLinkParams) Reset()         { *m = CreateLinkParams{} }
func (m *CreateLinkParams) String() string { return proto.CompactTextString(m) }
func (*CreateLinkParams) ProtoMessage()    {}
func (*CreateLinkParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{34}
}

func (m *CreateLinkParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLinkParams.Unmarshal(m, b)
}
func (m *CreateLinkParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLinkParams.Marshal(b, m, deterministic)
}
func (m *CreateLinkParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLinkParams.Merge(m, src)
}
func (m *CreateLinkParams) XXX_Size() int {
	return xxx_messageInfo_CreateLinkParams.Size(m)
}
func (m *CreateLinkParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLinkParams.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLinkParams proto.InternalMessageInfo

func (m *CreateLinkParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateLinkParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *CreateLinkParams) GetLinkInfo() *AuthLinkInfo {
	if m != nil {
		return m.LinkInfo
	}
	return nil
}

func (m *CreateLinkParams) GetMagicLinkCode() string {
	if m != nil {
		return m.MagicLinkCode
	}
	return ""
}

type CreateRelyingPartyLinkParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The name of the provider the record is for.
	Provider string `protobuf:"bytes,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	// A Global Account ID
	GUID string `protobuf:"bytes,3,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Optional: OIDC Client ID of the service making the request.
	ClientID             string   `protobuf:"bytes,4,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRelyingPartyLinkParams) Reset()         { *m = CreateRelyingPartyLinkParams{} }
func (m *CreateRelyingPartyLinkParams) String() string { return proto.CompactTextString(m) }
func (*CreateRelyingPartyLinkParams) ProtoMessage()    {}
func (*CreateRelyingPartyLinkParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{35}
}

func (m *CreateRelyingPartyLinkParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRelyingPartyLinkParams.Unmarshal(m, b)
}
func (m *CreateRelyingPartyLinkParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRelyingPartyLinkParams.Marshal(b, m, deterministic)
}
func (m *CreateRelyingPartyLinkParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRelyingPartyLinkParams.Merge(m, src)
}
func (m *CreateRelyingPartyLinkParams) XXX_Size() int {
	return xxx_messageInfo_CreateRelyingPartyLinkParams.Size(m)
}
func (m *CreateRelyingPartyLinkParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRelyingPartyLinkParams.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRelyingPartyLinkParams proto.InternalMessageInfo

func (m *CreateRelyingPartyLinkParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateRelyingPartyLinkParams) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *CreateRelyingPartyLinkParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *CreateRelyingPartyLinkParams) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

type VerifyPasswordParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The email address being logged into.
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	// The password being used to log in to the account.
	Password             string   `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyPasswordParams) Reset()         { *m = VerifyPasswordParams{} }
func (m *VerifyPasswordParams) String() string { return proto.CompactTextString(m) }
func (*VerifyPasswordParams) ProtoMessage()    {}
func (*VerifyPasswordParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{36}
}

func (m *VerifyPasswordParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyPasswordParams.Unmarshal(m, b)
}
func (m *VerifyPasswordParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyPasswordParams.Marshal(b, m, deterministic)
}
func (m *VerifyPasswordParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyPasswordParams.Merge(m, src)
}
func (m *VerifyPasswordParams) XXX_Size() int {
	return xxx_messageInfo_VerifyPasswordParams.Size(m)
}
func (m *VerifyPasswordParams) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyPasswordParams.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyPasswordParams proto.InternalMessageInfo

func (m *VerifyPasswordParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *VerifyPasswordParams) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VerifyPasswordParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type GetPrevTwitchParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// A Global Account ID
	GUID                 string   `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrevTwitchParams) Reset()         { *m = GetPrevTwitchParams{} }
func (m *GetPrevTwitchParams) String() string { return proto.CompactTextString(m) }
func (*GetPrevTwitchParams) ProtoMessage()    {}
func (*GetPrevTwitchParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{37}
}

func (m *GetPrevTwitchParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPrevTwitchParams.Unmarshal(m, b)
}
func (m *GetPrevTwitchParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPrevTwitchParams.Marshal(b, m, deterministic)
}
func (m *GetPrevTwitchParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrevTwitchParams.Merge(m, src)
}
func (m *GetPrevTwitchParams) XXX_Size() int {
	return xxx_messageInfo_GetPrevTwitchParams.Size(m)
}
func (m *GetPrevTwitchParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrevTwitchParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrevTwitchParams proto.InternalMessageInfo

func (m *GetPrevTwitchParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetPrevTwitchParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

type CompleteEnableTOTPParams struct {
	// The Global Account ID of the account enabling OTP.
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The JWT we sent to the user's email address to verify ownership of the account.
	Code                 string   `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteEnableTOTPParams) Reset()         { *m = CompleteEnableTOTPParams{} }
func (m *CompleteEnableTOTPParams) String() string { return proto.CompactTextString(m) }
func (*CompleteEnableTOTPParams) ProtoMessage()    {}
func (*CompleteEnableTOTPParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{38}
}

func (m *CompleteEnableTOTPParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteEnableTOTPParams.Unmarshal(m, b)
}
func (m *CompleteEnableTOTPParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteEnableTOTPParams.Marshal(b, m, deterministic)
}
func (m *CompleteEnableTOTPParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteEnableTOTPParams.Merge(m, src)
}
func (m *CompleteEnableTOTPParams) XXX_Size() int {
	return xxx_messageInfo_CompleteEnableTOTPParams.Size(m)
}
func (m *CompleteEnableTOTPParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteEnableTOTPParams.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteEnableTOTPParams proto.InternalMessageInfo

func (m *CompleteEnableTOTPParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *CompleteEnableTOTPParams) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type VerifyTOTPCodeParams struct {
	// The Global Account ID of the account we're verifying the OTP code for.
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Password of the account.
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	// The OTP code generated on the client side that we'll check the validity of.
	Code                 string   `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTOTPCodeParams) Reset()         { *m = VerifyTOTPCodeParams{} }
func (m *VerifyTOTPCodeParams) String() string { return proto.CompactTextString(m) }
func (*VerifyTOTPCodeParams) ProtoMessage()    {}
func (*VerifyTOTPCodeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{39}
}

func (m *VerifyTOTPCodeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTOTPCodeParams.Unmarshal(m, b)
}
func (m *VerifyTOTPCodeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTOTPCodeParams.Marshal(b, m, deterministic)
}
func (m *VerifyTOTPCodeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTOTPCodeParams.Merge(m, src)
}
func (m *VerifyTOTPCodeParams) XXX_Size() int {
	return xxx_messageInfo_VerifyTOTPCodeParams.Size(m)
}
func (m *VerifyTOTPCodeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTOTPCodeParams.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTOTPCodeParams proto.InternalMessageInfo

func (m *VerifyTOTPCodeParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *VerifyTOTPCodeParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *VerifyTOTPCodeParams) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type SocialLoginParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The ProviderID used to look up Global account .
	ProviderID           string   `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SocialLoginParams) Reset()         { *m = SocialLoginParams{} }
func (m *SocialLoginParams) String() string { return proto.CompactTextString(m) }
func (*SocialLoginParams) ProtoMessage()    {}
func (*SocialLoginParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{40}
}

func (m *SocialLoginParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SocialLoginParams.Unmarshal(m, b)
}
func (m *SocialLoginParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SocialLoginParams.Marshal(b, m, deterministic)
}
func (m *SocialLoginParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SocialLoginParams.Merge(m, src)
}
func (m *SocialLoginParams) XXX_Size() int {
	return xxx_messageInfo_SocialLoginParams.Size(m)
}
func (m *SocialLoginParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SocialLoginParams.DiscardUnknown(m)
}

var xxx_messageInfo_SocialLoginParams proto.InternalMessageInfo

func (m *SocialLoginParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *SocialLoginParams) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type PreferredLangParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// User's preferred language
	Language             string   `protobuf:"bytes,3,opt,name=Language,proto3" json:"Language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreferredLangParams) Reset()         { *m = PreferredLangParams{} }
func (m *PreferredLangParams) String() string { return proto.CompactTextString(m) }
func (*PreferredLangParams) ProtoMessage()    {}
func (*PreferredLangParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{41}
}

func (m *PreferredLangParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreferredLangParams.Unmarshal(m, b)
}
func (m *PreferredLangParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreferredLangParams.Marshal(b, m, deterministic)
}
func (m *PreferredLangParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreferredLangParams.Merge(m, src)
}
func (m *PreferredLangParams) XXX_Size() int {
	return xxx_messageInfo_PreferredLangParams.Size(m)
}
func (m *PreferredLangParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PreferredLangParams.DiscardUnknown(m)
}

var xxx_messageInfo_PreferredLangParams proto.InternalMessageInfo

func (m *PreferredLangParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *PreferredLangParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *PreferredLangParams) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type MagicLinkGenerateParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The provider name, for example steam/xbox/etc
	Provider string `protobuf:"bytes,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	// The provider ID of the player, for example steamID
	ProviderID string `protobuf:"bytes,3,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	// The provider display name
	DisplayName          string   `protobuf:"bytes,4,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MagicLinkGenerateParams) Reset()         { *m = MagicLinkGenerateParams{} }
func (m *MagicLinkGenerateParams) String() string { return proto.CompactTextString(m) }
func (*MagicLinkGenerateParams) ProtoMessage()    {}
func (*MagicLinkGenerateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{42}
}

func (m *MagicLinkGenerateParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MagicLinkGenerateParams.Unmarshal(m, b)
}
func (m *MagicLinkGenerateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MagicLinkGenerateParams.Marshal(b, m, deterministic)
}
func (m *MagicLinkGenerateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MagicLinkGenerateParams.Merge(m, src)
}
func (m *MagicLinkGenerateParams) XXX_Size() int {
	return xxx_messageInfo_MagicLinkGenerateParams.Size(m)
}
func (m *MagicLinkGenerateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MagicLinkGenerateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MagicLinkGenerateParams proto.InternalMessageInfo

func (m *MagicLinkGenerateParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *MagicLinkGenerateParams) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *MagicLinkGenerateParams) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *MagicLinkGenerateParams) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type MagicLinkCodeParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation.
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The magiclink code to validate
	LinkCode             string   `protobuf:"bytes,2,opt,name=LinkCode,proto3" json:"LinkCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MagicLinkCodeParams) Reset()         { *m = MagicLinkCodeParams{} }
func (m *MagicLinkCodeParams) String() string { return proto.CompactTextString(m) }
func (*MagicLinkCodeParams) ProtoMessage()    {}
func (*MagicLinkCodeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{43}
}

func (m *MagicLinkCodeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MagicLinkCodeParams.Unmarshal(m, b)
}
func (m *MagicLinkCodeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MagicLinkCodeParams.Marshal(b, m, deterministic)
}
func (m *MagicLinkCodeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MagicLinkCodeParams.Merge(m, src)
}
func (m *MagicLinkCodeParams) XXX_Size() int {
	return xxx_messageInfo_MagicLinkCodeParams.Size(m)
}
func (m *MagicLinkCodeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MagicLinkCodeParams.DiscardUnknown(m)
}

var xxx_messageInfo_MagicLinkCodeParams proto.InternalMessageInfo

func (m *MagicLinkCodeParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *MagicLinkCodeParams) GetLinkCode() string {
	if m != nil {
		return m.LinkCode
	}
	return ""
}

type UpdateCreatorCodeParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account we're updating the creator code for.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The creator code to attach to the account.
	CreatorCode          string   `protobuf:"bytes,3,opt,name=CreatorCode,proto3" json:"CreatorCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCreatorCodeParams) Reset()         { *m = UpdateCreatorCodeParams{} }
func (m *UpdateCreatorCodeParams) String() string { return proto.CompactTextString(m) }
func (*UpdateCreatorCodeParams) ProtoMessage()    {}
func (*UpdateCreatorCodeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{44}
}

func (m *UpdateCreatorCodeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCreatorCodeParams.Unmarshal(m, b)
}
func (m *UpdateCreatorCodeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCreatorCodeParams.Marshal(b, m, deterministic)
}
func (m *UpdateCreatorCodeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCreatorCodeParams.Merge(m, src)
}
func (m *UpdateCreatorCodeParams) XXX_Size() int {
	return xxx_messageInfo_UpdateCreatorCodeParams.Size(m)
}
func (m *UpdateCreatorCodeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCreatorCodeParams.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCreatorCodeParams proto.InternalMessageInfo

func (m *UpdateCreatorCodeParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateCreatorCodeParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *UpdateCreatorCodeParams) GetCreatorCode() string {
	if m != nil {
		return m.CreatorCode
	}
	return ""
}

type GetCreatorCodesParams struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCreatorCodesParams) Reset()         { *m = GetCreatorCodesParams{} }
func (m *GetCreatorCodesParams) String() string { return proto.CompactTextString(m) }
func (*GetCreatorCodesParams) ProtoMessage()    {}
func (*GetCreatorCodesParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{45}
}

func (m *GetCreatorCodesParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCreatorCodesParams.Unmarshal(m, b)
}
func (m *GetCreatorCodesParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCreatorCodesParams.Marshal(b, m, deterministic)
}
func (m *GetCreatorCodesParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCreatorCodesParams.Merge(m, src)
}
func (m *GetCreatorCodesParams) XXX_Size() int {
	return xxx_messageInfo_GetCreatorCodesParams.Size(m)
}
func (m *GetCreatorCodesParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCreatorCodesParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetCreatorCodesParams proto.InternalMessageInfo

type GetPromotionsParams struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPromotionsParams) Reset()         { *m = GetPromotionsParams{} }
func (m *GetPromotionsParams) String() string { return proto.CompactTextString(m) }
func (*GetPromotionsParams) ProtoMessage()    {}
func (*GetPromotionsParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{46}
}

func (m *GetPromotionsParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPromotionsParams.Unmarshal(m, b)
}
func (m *GetPromotionsParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPromotionsParams.Marshal(b, m, deterministic)
}
func (m *GetPromotionsParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPromotionsParams.Merge(m, src)
}
func (m *GetPromotionsParams) XXX_Size() int {
	return xxx_messageInfo_GetPromotionsParams.Size(m)
}
func (m *GetPromotionsParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPromotionsParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetPromotionsParams proto.InternalMessageInfo

type ClaimPromoCodeParams struct {
	// Information about the end-user the request is for. Used for rate limiting and email translation
	User *UserData `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	// The Global Account ID of the account we're claiming a code for.
	GUID string `protobuf:"bytes,2,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The promotion ID of the promotion we're claiming a code for.
	PromotionID          string   `protobuf:"bytes,3,opt,name=PromotionID,proto3" json:"PromotionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClaimPromoCodeParams) Reset()         { *m = ClaimPromoCodeParams{} }
func (m *ClaimPromoCodeParams) String() string { return proto.CompactTextString(m) }
func (*ClaimPromoCodeParams) ProtoMessage()    {}
func (*ClaimPromoCodeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{47}
}

func (m *ClaimPromoCodeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimPromoCodeParams.Unmarshal(m, b)
}
func (m *ClaimPromoCodeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimPromoCodeParams.Marshal(b, m, deterministic)
}
func (m *ClaimPromoCodeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimPromoCodeParams.Merge(m, src)
}
func (m *ClaimPromoCodeParams) XXX_Size() int {
	return xxx_messageInfo_ClaimPromoCodeParams.Size(m)
}
func (m *ClaimPromoCodeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimPromoCodeParams.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimPromoCodeParams proto.InternalMessageInfo

func (m *ClaimPromoCodeParams) GetUser() *UserData {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ClaimPromoCodeParams) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *ClaimPromoCodeParams) GetPromotionID() string {
	if m != nil {
		return m.PromotionID
	}
	return ""
}

type StatusResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Details of the error specified by the Code field.
	Error                string   `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{48}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *StatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StatusResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type TokenClaimResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Details of the error specified by the Code field.
	Error string `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	// Data extracted from the JWT
	TokenClaim           map[string]string `protobuf:"bytes,4,rep,name=TokenClaim,proto3" json:"TokenClaim,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TokenClaimResponse) Reset()         { *m = TokenClaimResponse{} }
func (m *TokenClaimResponse) String() string { return proto.CompactTextString(m) }
func (*TokenClaimResponse) ProtoMessage()    {}
func (*TokenClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{49}
}

func (m *TokenClaimResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenClaimResponse.Unmarshal(m, b)
}
func (m *TokenClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenClaimResponse.Marshal(b, m, deterministic)
}
func (m *TokenClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenClaimResponse.Merge(m, src)
}
func (m *TokenClaimResponse) XXX_Size() int {
	return xxx_messageInfo_TokenClaimResponse.Size(m)
}
func (m *TokenClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenClaimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenClaimResponse proto.InternalMessageInfo

func (m *TokenClaimResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *TokenClaimResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TokenClaimResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *TokenClaimResponse) GetTokenClaim() map[string]string {
	if m != nil {
		return m.TokenClaim
	}
	return nil
}

type GlobalAccountResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Details about the account that was requested, if found.
	Account              *GlobalAccount `protobuf:"bytes,3,opt,name=Account,proto3" json:"Account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GlobalAccountResponse) Reset()         { *m = GlobalAccountResponse{} }
func (m *GlobalAccountResponse) String() string { return proto.CompactTextString(m) }
func (*GlobalAccountResponse) ProtoMessage()    {}
func (*GlobalAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{50}
}

func (m *GlobalAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalAccountResponse.Unmarshal(m, b)
}
func (m *GlobalAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalAccountResponse.Marshal(b, m, deterministic)
}
func (m *GlobalAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalAccountResponse.Merge(m, src)
}
func (m *GlobalAccountResponse) XXX_Size() int {
	return xxx_messageInfo_GlobalAccountResponse.Size(m)
}
func (m *GlobalAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalAccountResponse proto.InternalMessageInfo

func (m *GlobalAccountResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *GlobalAccountResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GlobalAccountResponse) GetAccount() *GlobalAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

type GetLinkResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Details about the linked account requested, if found.
	Link                 *AuthenticationData `protobuf:"bytes,3,opt,name=Link,proto3" json:"Link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetLinkResponse) Reset()         { *m = GetLinkResponse{} }
func (m *GetLinkResponse) String() string { return proto.CompactTextString(m) }
func (*GetLinkResponse) ProtoMessage()    {}
func (*GetLinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{51}
}

func (m *GetLinkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLinkResponse.Unmarshal(m, b)
}
func (m *GetLinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLinkResponse.Marshal(b, m, deterministic)
}
func (m *GetLinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLinkResponse.Merge(m, src)
}
func (m *GetLinkResponse) XXX_Size() int {
	return xxx_messageInfo_GetLinkResponse.Size(m)
}
func (m *GetLinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLinkResponse proto.InternalMessageInfo

func (m *GetLinkResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *GetLinkResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetLinkResponse) GetLink() *AuthenticationData {
	if m != nil {
		return m.Link
	}
	return nil
}

type PrevTwitchResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Details about the previously linked Twitch account.
	Data                 *PrevTwitch `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PrevTwitchResponse) Reset()         { *m = PrevTwitchResponse{} }
func (m *PrevTwitchResponse) String() string { return proto.CompactTextString(m) }
func (*PrevTwitchResponse) ProtoMessage()    {}
func (*PrevTwitchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{52}
}

func (m *PrevTwitchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrevTwitchResponse.Unmarshal(m, b)
}
func (m *PrevTwitchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrevTwitchResponse.Marshal(b, m, deterministic)
}
func (m *PrevTwitchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrevTwitchResponse.Merge(m, src)
}
func (m *PrevTwitchResponse) XXX_Size() int {
	return xxx_messageInfo_PrevTwitchResponse.Size(m)
}
func (m *PrevTwitchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrevTwitchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrevTwitchResponse proto.InternalMessageInfo

func (m *PrevTwitchResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *PrevTwitchResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PrevTwitchResponse) GetData() *PrevTwitch {
	if m != nil {
		return m.Data
	}
	return nil
}

type BeginEnableTOTPResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// QR-Code image (200x200 PNG) suitable for use by clients like Google-Authenticator to enroll the user in OTP.
	TOTPSetupImage       []byte   `protobuf:"bytes,3,opt,name=TOTPSetupImage,proto3" json:"TOTPSetupImage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeginEnableTOTPResponse) Reset()         { *m = BeginEnableTOTPResponse{} }
func (m *BeginEnableTOTPResponse) String() string { return proto.CompactTextString(m) }
func (*BeginEnableTOTPResponse) ProtoMessage()    {}
func (*BeginEnableTOTPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{53}
}

func (m *BeginEnableTOTPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeginEnableTOTPResponse.Unmarshal(m, b)
}
func (m *BeginEnableTOTPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeginEnableTOTPResponse.Marshal(b, m, deterministic)
}
func (m *BeginEnableTOTPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeginEnableTOTPResponse.Merge(m, src)
}
func (m *BeginEnableTOTPResponse) XXX_Size() int {
	return xxx_messageInfo_BeginEnableTOTPResponse.Size(m)
}
func (m *BeginEnableTOTPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BeginEnableTOTPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BeginEnableTOTPResponse proto.InternalMessageInfo

func (m *BeginEnableTOTPResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *BeginEnableTOTPResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BeginEnableTOTPResponse) GetTOTPSetupImage() []byte {
	if m != nil {
		return m.TOTPSetupImage
	}
	return nil
}

type CompleteEnableTOTPResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// Indicates the result of the operation.
	Result               bool     `protobuf:"varint,3,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteEnableTOTPResponse) Reset()         { *m = CompleteEnableTOTPResponse{} }
func (m *CompleteEnableTOTPResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteEnableTOTPResponse) ProtoMessage()    {}
func (*CompleteEnableTOTPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{54}
}

func (m *CompleteEnableTOTPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteEnableTOTPResponse.Unmarshal(m, b)
}
func (m *CompleteEnableTOTPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteEnableTOTPResponse.Marshal(b, m, deterministic)
}
func (m *CompleteEnableTOTPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteEnableTOTPResponse.Merge(m, src)
}
func (m *CompleteEnableTOTPResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteEnableTOTPResponse.Size(m)
}
func (m *CompleteEnableTOTPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteEnableTOTPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteEnableTOTPResponse proto.InternalMessageInfo

func (m *CompleteEnableTOTPResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *CompleteEnableTOTPResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CompleteEnableTOTPResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type MagicLinkGenerateResponse struct {
	// The magiclink code to validate
	LinkCode string `protobuf:"bytes,1,opt,name=LinkCode,proto3" json:"LinkCode,omitempty"`
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,3,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message              string   `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MagicLinkGenerateResponse) Reset()         { *m = MagicLinkGenerateResponse{} }
func (m *MagicLinkGenerateResponse) String() string { return proto.CompactTextString(m) }
func (*MagicLinkGenerateResponse) ProtoMessage()    {}
func (*MagicLinkGenerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{55}
}

func (m *MagicLinkGenerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MagicLinkGenerateResponse.Unmarshal(m, b)
}
func (m *MagicLinkGenerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MagicLinkGenerateResponse.Marshal(b, m, deterministic)
}
func (m *MagicLinkGenerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MagicLinkGenerateResponse.Merge(m, src)
}
func (m *MagicLinkGenerateResponse) XXX_Size() int {
	return xxx_messageInfo_MagicLinkGenerateResponse.Size(m)
}
func (m *MagicLinkGenerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MagicLinkGenerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MagicLinkGenerateResponse proto.InternalMessageInfo

func (m *MagicLinkGenerateResponse) GetLinkCode() string {
	if m != nil {
		return m.LinkCode
	}
	return ""
}

func (m *MagicLinkGenerateResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *MagicLinkGenerateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MagicLinkValidateResponse struct {
	// The provider name, for example steam/xbox/etc
	Provider string `protobuf:"bytes,1,opt,name=Provider,proto3" json:"Provider,omitempty"`
	// The provider ID of the player, for example steamID
	ProviderID string `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,3,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	// The provider display name
	DisplayName          string   `protobuf:"bytes,5,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MagicLinkValidateResponse) Reset()         { *m = MagicLinkValidateResponse{} }
func (m *MagicLinkValidateResponse) String() string { return proto.CompactTextString(m) }
func (*MagicLinkValidateResponse) ProtoMessage()    {}
func (*MagicLinkValidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{56}
}

func (m *MagicLinkValidateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MagicLinkValidateResponse.Unmarshal(m, b)
}
func (m *MagicLinkValidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MagicLinkValidateResponse.Marshal(b, m, deterministic)
}
func (m *MagicLinkValidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MagicLinkValidateResponse.Merge(m, src)
}
func (m *MagicLinkValidateResponse) XXX_Size() int {
	return xxx_messageInfo_MagicLinkValidateResponse.Size(m)
}
func (m *MagicLinkValidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MagicLinkValidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MagicLinkValidateResponse proto.InternalMessageInfo

func (m *MagicLinkValidateResponse) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *MagicLinkValidateResponse) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *MagicLinkValidateResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *MagicLinkValidateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MagicLinkValidateResponse) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type MagicLinkCheckCompleteResponse struct {
	// The linked Global Account GUID
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,3,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message              string   `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MagicLinkCheckCompleteResponse) Reset()         { *m = MagicLinkCheckCompleteResponse{} }
func (m *MagicLinkCheckCompleteResponse) String() string { return proto.CompactTextString(m) }
func (*MagicLinkCheckCompleteResponse) ProtoMessage()    {}
func (*MagicLinkCheckCompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{57}
}

func (m *MagicLinkCheckCompleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MagicLinkCheckCompleteResponse.Unmarshal(m, b)
}
func (m *MagicLinkCheckCompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MagicLinkCheckCompleteResponse.Marshal(b, m, deterministic)
}
func (m *MagicLinkCheckCompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MagicLinkCheckCompleteResponse.Merge(m, src)
}
func (m *MagicLinkCheckCompleteResponse) XXX_Size() int {
	return xxx_messageInfo_MagicLinkCheckCompleteResponse.Size(m)
}
func (m *MagicLinkCheckCompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MagicLinkCheckCompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MagicLinkCheckCompleteResponse proto.InternalMessageInfo

func (m *MagicLinkCheckCompleteResponse) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *MagicLinkCheckCompleteResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *MagicLinkCheckCompleteResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CodesResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// List of creator codes.
	CreatorCodes []string `protobuf:"bytes,3,rep,name=CreatorCodes,proto3" json:"CreatorCodes,omitempty"`
	// List of creator names.
	CreatorNames         []string `protobuf:"bytes,4,rep,name=CreatorNames,proto3" json:"CreatorNames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodesResponse) Reset()         { *m = CodesResponse{} }
func (m *CodesResponse) String() string { return proto.CompactTextString(m) }
func (*CodesResponse) ProtoMessage()    {}
func (*CodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{58}
}

func (m *CodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodesResponse.Unmarshal(m, b)
}
func (m *CodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodesResponse.Marshal(b, m, deterministic)
}
func (m *CodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodesResponse.Merge(m, src)
}
func (m *CodesResponse) XXX_Size() int {
	return xxx_messageInfo_CodesResponse.Size(m)
}
func (m *CodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CodesResponse proto.InternalMessageInfo

func (m *CodesResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *CodesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CodesResponse) GetCreatorCodes() []string {
	if m != nil {
		return m.CreatorCodes
	}
	return nil
}

func (m *CodesResponse) GetCreatorNames() []string {
	if m != nil {
		return m.CreatorNames
	}
	return nil
}

type PromotionsResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// List of promotions.
	Promotions           []*PromotionInfo `protobuf:"bytes,3,rep,name=Promotions,proto3" json:"Promotions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PromotionsResponse) Reset()         { *m = PromotionsResponse{} }
func (m *PromotionsResponse) String() string { return proto.CompactTextString(m) }
func (*PromotionsResponse) ProtoMessage()    {}
func (*PromotionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{59}
}

func (m *PromotionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionsResponse.Unmarshal(m, b)
}
func (m *PromotionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionsResponse.Marshal(b, m, deterministic)
}
func (m *PromotionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionsResponse.Merge(m, src)
}
func (m *PromotionsResponse) XXX_Size() int {
	return xxx_messageInfo_PromotionsResponse.Size(m)
}
func (m *PromotionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionsResponse proto.InternalMessageInfo

func (m *PromotionsResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *PromotionsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PromotionsResponse) GetPromotions() []*PromotionInfo {
	if m != nil {
		return m.Promotions
	}
	return nil
}

type GlobalAccount struct {
	// The Global Account ID of this account.
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The username of the selected persona platform, or the user's email address.
	Username string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	// The authentication provider that the Username field is from.
	PersonaPlatform string `protobuf:"bytes,3,opt,name=PersonaPlatform,proto3" json:"PersonaPlatform,omitempty"`
	// Whether or not this account's email has been confirmed.
	Activated bool `protobuf:"varint,4,opt,name=Activated,proto3" json:"Activated,omitempty"`
	// Whether or not the user wants to receive emails from PUBG.
	EmailOptIn bool `protobuf:"varint,5,opt,name=EmailOptIn,proto3" json:"EmailOptIn,omitempty"`
	// All third-party accounts that are linked to this Global Account.
	Authentications *AuthenticationData `protobuf:"bytes,6,opt,name=Authentications,proto3" json:"Authentications,omitempty"`
	// PUBG Game accounts linked to this GlobalAccount.
	Platforms map[string]*PlatformAccount `protobuf:"bytes,7,rep,name=Platforms,proto3" json:"Platforms,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Profile information for this GlobalAccount.
	Profile *Profile `protobuf:"bytes,8,opt,name=Profile,proto3" json:"Profile,omitempty"`
	// Headless Game Accounts associated with this Global Account
	GameAccounts         []*GameAccount `protobuf:"bytes,9,rep,name=GameAccounts,proto3" json:"GameAccounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GlobalAccount) Reset()         { *m = GlobalAccount{} }
func (m *GlobalAccount) String() string { return proto.CompactTextString(m) }
func (*GlobalAccount) ProtoMessage()    {}
func (*GlobalAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{60}
}

func (m *GlobalAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalAccount.Unmarshal(m, b)
}
func (m *GlobalAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalAccount.Marshal(b, m, deterministic)
}
func (m *GlobalAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalAccount.Merge(m, src)
}
func (m *GlobalAccount) XXX_Size() int {
	return xxx_messageInfo_GlobalAccount.Size(m)
}
func (m *GlobalAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalAccount.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalAccount proto.InternalMessageInfo

func (m *GlobalAccount) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *GlobalAccount) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GlobalAccount) GetPersonaPlatform() string {
	if m != nil {
		return m.PersonaPlatform
	}
	return ""
}

func (m *GlobalAccount) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

func (m *GlobalAccount) GetEmailOptIn() bool {
	if m != nil {
		return m.EmailOptIn
	}
	return false
}

func (m *GlobalAccount) GetAuthentications() *AuthenticationData {
	if m != nil {
		return m.Authentications
	}
	return nil
}

func (m *GlobalAccount) GetPlatforms() map[string]*PlatformAccount {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *GlobalAccount) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *GlobalAccount) GetGameAccounts() []*GameAccount {
	if m != nil {
		return m.GameAccounts
	}
	return nil
}

type AuthenticationData struct {
	Local                *LocalAuth       `protobuf:"bytes,1,opt,name=local,proto3" json:"local,omitempty"`
	Twitch               *TwitchAuth      `protobuf:"bytes,2,opt,name=twitch,proto3" json:"twitch,omitempty"`
	Facebook             *FacebookAuth    `protobuf:"bytes,3,opt,name=facebook,proto3" json:"facebook,omitempty"`
	Litepc               *LitePCAuth      `protobuf:"bytes,4,opt,name=litepc,proto3" json:"litepc,omitempty"`
	Google               *GoogleAuth      `protobuf:"bytes,5,opt,name=google,proto3" json:"google,omitempty"`
	Line                 *LineAuth        `protobuf:"bytes,6,opt,name=line,proto3" json:"line,omitempty"`
	Twitter              *TwitterAuth     `protobuf:"bytes,7,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Psn                  *PlaystationAuth `protobuf:"bytes,8,opt,name=psn,proto3" json:"psn,omitempty"`
	Steam                *SteamAuth       `protobuf:"bytes,9,opt,name=steam,proto3" json:"steam,omitempty"`
	Xbox                 *XboxAuth        `protobuf:"bytes,10,opt,name=xbox,proto3" json:"xbox,omitempty"`
	Vk                   *VkAuth          `protobuf:"bytes,11,opt,name=vk,proto3" json:"vk,omitempty"`
	Youtube              *YoutubeAuth     `protobuf:"bytes,12,opt,name=youtube,proto3" json:"youtube,omitempty"`
	Stadia               *StadiaAuth      `protobuf:"bytes,13,opt,name=stadia,proto3" json:"stadia,omitempty"`
	Discord              *DiscordAuth     `protobuf:"bytes,14,opt,name=discord,proto3" json:"discord,omitempty"`
	Reddit               *RedditAuth      `protobuf:"bytes,15,opt,name=reddit,proto3" json:"reddit,omitempty"`
	Afreecatv            *AfreecaTVAuth   `protobuf:"bytes,16,opt,name=afreecatv,proto3" json:"afreecatv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AuthenticationData) Reset()         { *m = AuthenticationData{} }
func (m *AuthenticationData) String() string { return proto.CompactTextString(m) }
func (*AuthenticationData) ProtoMessage()    {}
func (*AuthenticationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{61}
}

func (m *AuthenticationData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticationData.Unmarshal(m, b)
}
func (m *AuthenticationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticationData.Marshal(b, m, deterministic)
}
func (m *AuthenticationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationData.Merge(m, src)
}
func (m *AuthenticationData) XXX_Size() int {
	return xxx_messageInfo_AuthenticationData.Size(m)
}
func (m *AuthenticationData) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationData.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationData proto.InternalMessageInfo

func (m *AuthenticationData) GetLocal() *LocalAuth {
	if m != nil {
		return m.Local
	}
	return nil
}

func (m *AuthenticationData) GetTwitch() *TwitchAuth {
	if m != nil {
		return m.Twitch
	}
	return nil
}

func (m *AuthenticationData) GetFacebook() *FacebookAuth {
	if m != nil {
		return m.Facebook
	}
	return nil
}

func (m *AuthenticationData) GetLitepc() *LitePCAuth {
	if m != nil {
		return m.Litepc
	}
	return nil
}

func (m *AuthenticationData) GetGoogle() *GoogleAuth {
	if m != nil {
		return m.Google
	}
	return nil
}

func (m *AuthenticationData) GetLine() *LineAuth {
	if m != nil {
		return m.Line
	}
	return nil
}

func (m *AuthenticationData) GetTwitter() *TwitterAuth {
	if m != nil {
		return m.Twitter
	}
	return nil
}

func (m *AuthenticationData) GetPsn() *PlaystationAuth {
	if m != nil {
		return m.Psn
	}
	return nil
}

func (m *AuthenticationData) GetSteam() *SteamAuth {
	if m != nil {
		return m.Steam
	}
	return nil
}

func (m *AuthenticationData) GetXbox() *XboxAuth {
	if m != nil {
		return m.Xbox
	}
	return nil
}

func (m *AuthenticationData) GetVk() *VkAuth {
	if m != nil {
		return m.Vk
	}
	return nil
}

func (m *AuthenticationData) GetYoutube() *YoutubeAuth {
	if m != nil {
		return m.Youtube
	}
	return nil
}

func (m *AuthenticationData) GetStadia() *StadiaAuth {
	if m != nil {
		return m.Stadia
	}
	return nil
}

func (m *AuthenticationData) GetDiscord() *DiscordAuth {
	if m != nil {
		return m.Discord
	}
	return nil
}

func (m *AuthenticationData) GetReddit() *RedditAuth {
	if m != nil {
		return m.Reddit
	}
	return nil
}

func (m *AuthenticationData) GetAfreecatv() *AfreecaTVAuth {
	if m != nil {
		return m.Afreecatv
	}
	return nil
}

//
//The LocalAuthentication record is the main record for a Global Account. Every Global Account has a Local Authentication record.
type LocalAuth struct {
	// The Global Account ID this Local Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Email Address of the Local auth.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this record is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// Whether or not this account's email address has been verified.
	Confirmed bool `protobuf:"varint,4,opt,name=Confirmed,proto3" json:"Confirmed,omitempty"`
	// The IATA country code where this user resides.
	// string Country = 5;
	// The user's Date of Birth, as Epoch time.
	// int64 DateOfBirth = 6;
	// The user's Email address.
	Email string `protobuf:"bytes,7,opt,name=Email,proto3" json:"Email,omitempty"`
	//
	//Whether or not this account is Locked.
	//An account that fails to login too many times will be locked.
	//Resetting the password clears the lock on the account.
	Locked bool `protobuf:"varint,10,opt,name=Locked,proto3" json:"Locked,omitempty"`
	// Whether or not Player Services has place this account On Hold.
	OnHold bool `protobuf:"varint,11,opt,name=OnHold,proto3" json:"OnHold,omitempty"`
	// Whether or not this player accepted our Terms of Service/Privacy Policy.
	// bool ToSAccepted = 12;
	// When the user last updated their EmailOptIn selection, as Epoch time.
	// int64 EmailOptInUpdatedAt = 13;
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,14,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,15,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,16,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalAuth) Reset()         { *m = LocalAuth{} }
func (m *LocalAuth) String() string { return proto.CompactTextString(m) }
func (*LocalAuth) ProtoMessage()    {}
func (*LocalAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{62}
}

func (m *LocalAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalAuth.Unmarshal(m, b)
}
func (m *LocalAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalAuth.Marshal(b, m, deterministic)
}
func (m *LocalAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalAuth.Merge(m, src)
}
func (m *LocalAuth) XXX_Size() int {
	return xxx_messageInfo_LocalAuth.Size(m)
}
func (m *LocalAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalAuth.DiscardUnknown(m)
}

var xxx_messageInfo_LocalAuth proto.InternalMessageInfo

func (m *LocalAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *LocalAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *LocalAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *LocalAuth) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *LocalAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LocalAuth) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *LocalAuth) GetOnHold() bool {
	if m != nil {
		return m.OnHold
	}
	return false
}

func (m *LocalAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *LocalAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *LocalAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type TwitchAuth struct {
	// The Global Account ID this Auth record represents.
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The user's Twitch Display Name.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// Set to True if the Access Token/Refresh Token pair are no longer valid.
	BadCredentials bool `protobuf:"varint,4,opt,name=BadCredentials,proto3" json:"BadCredentials,omitempty"`
	// The email address associated with the Twitch account.
	Email string `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	// The ID of the Twitch account.
	TwitchID string `protobuf:"bytes,6,opt,name=TwitchID,proto3" json:"TwitchID,omitempty"`
	// The user's Twitch Display Name.
	Username string `protobuf:"bytes,7,opt,name=Username,proto3" json:"Username,omitempty"`
	// The OIDC Access Token for this account.
	AccessToken string `protobuf:"bytes,8,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,9,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,10,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,11,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwitchAuth) Reset()         { *m = TwitchAuth{} }
func (m *TwitchAuth) String() string { return proto.CompactTextString(m) }
func (*TwitchAuth) ProtoMessage()    {}
func (*TwitchAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{63}
}

func (m *TwitchAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwitchAuth.Unmarshal(m, b)
}
func (m *TwitchAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwitchAuth.Marshal(b, m, deterministic)
}
func (m *TwitchAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwitchAuth.Merge(m, src)
}
func (m *TwitchAuth) XXX_Size() int {
	return xxx_messageInfo_TwitchAuth.Size(m)
}
func (m *TwitchAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TwitchAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TwitchAuth proto.InternalMessageInfo

func (m *TwitchAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *TwitchAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *TwitchAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *TwitchAuth) GetBadCredentials() bool {
	if m != nil {
		return m.BadCredentials
	}
	return false
}

func (m *TwitchAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TwitchAuth) GetTwitchID() string {
	if m != nil {
		return m.TwitchID
	}
	return ""
}

func (m *TwitchAuth) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TwitchAuth) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *TwitchAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *TwitchAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *TwitchAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type FacebookAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Display Name of this Facebook account.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The email address associated with this Facebook account.
	Email string `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	// The ID of the Facebook account.
	FacebookID string `protobuf:"bytes,5,opt,name=FacebookID,proto3" json:"FacebookID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,8,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FacebookAuth) Reset()         { *m = FacebookAuth{} }
func (m *FacebookAuth) String() string { return proto.CompactTextString(m) }
func (*FacebookAuth) ProtoMessage()    {}
func (*FacebookAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{64}
}

func (m *FacebookAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FacebookAuth.Unmarshal(m, b)
}
func (m *FacebookAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FacebookAuth.Marshal(b, m, deterministic)
}
func (m *FacebookAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FacebookAuth.Merge(m, src)
}
func (m *FacebookAuth) XXX_Size() int {
	return xxx_messageInfo_FacebookAuth.Size(m)
}
func (m *FacebookAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_FacebookAuth.DiscardUnknown(m)
}

var xxx_messageInfo_FacebookAuth proto.InternalMessageInfo

func (m *FacebookAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *FacebookAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *FacebookAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *FacebookAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *FacebookAuth) GetFacebookID() string {
	if m != nil {
		return m.FacebookID
	}
	return ""
}

func (m *FacebookAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *FacebookAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *FacebookAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type LitePCAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID string `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt            int64    `protobuf:"varint,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LitePCAuth) Reset()         { *m = LitePCAuth{} }
func (m *LitePCAuth) String() string { return proto.CompactTextString(m) }
func (*LitePCAuth) ProtoMessage()    {}
func (*LitePCAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{65}
}

func (m *LitePCAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LitePCAuth.Unmarshal(m, b)
}
func (m *LitePCAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LitePCAuth.Marshal(b, m, deterministic)
}
func (m *LitePCAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LitePCAuth.Merge(m, src)
}
func (m *LitePCAuth) XXX_Size() int {
	return xxx_messageInfo_LitePCAuth.Size(m)
}
func (m *LitePCAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_LitePCAuth.DiscardUnknown(m)
}

var xxx_messageInfo_LitePCAuth proto.InternalMessageInfo

func (m *LitePCAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *LitePCAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *LitePCAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *LitePCAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *LitePCAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type YoutubeAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID string `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt            int64    `protobuf:"varint,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YoutubeAuth) Reset()         { *m = YoutubeAuth{} }
func (m *YoutubeAuth) String() string { return proto.CompactTextString(m) }
func (*YoutubeAuth) ProtoMessage()    {}
func (*YoutubeAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{66}
}

func (m *YoutubeAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YoutubeAuth.Unmarshal(m, b)
}
func (m *YoutubeAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YoutubeAuth.Marshal(b, m, deterministic)
}
func (m *YoutubeAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YoutubeAuth.Merge(m, src)
}
func (m *YoutubeAuth) XXX_Size() int {
	return xxx_messageInfo_YoutubeAuth.Size(m)
}
func (m *YoutubeAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_YoutubeAuth.DiscardUnknown(m)
}

var xxx_messageInfo_YoutubeAuth proto.InternalMessageInfo

func (m *YoutubeAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *YoutubeAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *YoutubeAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *YoutubeAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *YoutubeAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type AfreecaTVAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID string `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt            int64    `protobuf:"varint,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AfreecaTVAuth) Reset()         { *m = AfreecaTVAuth{} }
func (m *AfreecaTVAuth) String() string { return proto.CompactTextString(m) }
func (*AfreecaTVAuth) ProtoMessage()    {}
func (*AfreecaTVAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{67}
}

func (m *AfreecaTVAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AfreecaTVAuth.Unmarshal(m, b)
}
func (m *AfreecaTVAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AfreecaTVAuth.Marshal(b, m, deterministic)
}
func (m *AfreecaTVAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AfreecaTVAuth.Merge(m, src)
}
func (m *AfreecaTVAuth) XXX_Size() int {
	return xxx_messageInfo_AfreecaTVAuth.Size(m)
}
func (m *AfreecaTVAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_AfreecaTVAuth.DiscardUnknown(m)
}

var xxx_messageInfo_AfreecaTVAuth proto.InternalMessageInfo

func (m *AfreecaTVAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *AfreecaTVAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *AfreecaTVAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *AfreecaTVAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *AfreecaTVAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type GoogleAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Whether or not this link is active.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The Email associated with this Google account
	Email string `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	// The ID of the Google account.
	GoogleID string `protobuf:"bytes,5,opt,name=GoogleID,proto3" json:"GoogleID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,8,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleAuth) Reset()         { *m = GoogleAuth{} }
func (m *GoogleAuth) String() string { return proto.CompactTextString(m) }
func (*GoogleAuth) ProtoMessage()    {}
func (*GoogleAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{68}
}

func (m *GoogleAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleAuth.Unmarshal(m, b)
}
func (m *GoogleAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleAuth.Marshal(b, m, deterministic)
}
func (m *GoogleAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleAuth.Merge(m, src)
}
func (m *GoogleAuth) XXX_Size() int {
	return xxx_messageInfo_GoogleAuth.Size(m)
}
func (m *GoogleAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleAuth.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleAuth proto.InternalMessageInfo

func (m *GoogleAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *GoogleAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *GoogleAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *GoogleAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GoogleAuth) GetGoogleID() string {
	if m != nil {
		return m.GoogleID
	}
	return ""
}

func (m *GoogleAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *GoogleAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *GoogleAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type LineAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Whether or not this link is active.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The Email address associated with this Line account.
	Email string `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	// The ID of the Line account.
	LineID string `protobuf:"bytes,5,opt,name=LineID,proto3" json:"LineID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,8,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LineAuth) Reset()         { *m = LineAuth{} }
func (m *LineAuth) String() string { return proto.CompactTextString(m) }
func (*LineAuth) ProtoMessage()    {}
func (*LineAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{69}
}

func (m *LineAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineAuth.Unmarshal(m, b)
}
func (m *LineAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineAuth.Marshal(b, m, deterministic)
}
func (m *LineAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineAuth.Merge(m, src)
}
func (m *LineAuth) XXX_Size() int {
	return xxx_messageInfo_LineAuth.Size(m)
}
func (m *LineAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_LineAuth.DiscardUnknown(m)
}

var xxx_messageInfo_LineAuth proto.InternalMessageInfo

func (m *LineAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *LineAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *LineAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *LineAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LineAuth) GetLineID() string {
	if m != nil {
		return m.LineID
	}
	return ""
}

func (m *LineAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *LineAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *LineAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type TwitterAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// Whether or not this link is active.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The Email Address associated with this Twitter account.
	Email string `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	// The ID of this Twitter account.
	TwitterID string `protobuf:"bytes,5,opt,name=TwitterID,proto3" json:"TwitterID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,8,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwitterAuth) Reset()         { *m = TwitterAuth{} }
func (m *TwitterAuth) String() string { return proto.CompactTextString(m) }
func (*TwitterAuth) ProtoMessage()    {}
func (*TwitterAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{70}
}

func (m *TwitterAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwitterAuth.Unmarshal(m, b)
}
func (m *TwitterAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwitterAuth.Marshal(b, m, deterministic)
}
func (m *TwitterAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwitterAuth.Merge(m, src)
}
func (m *TwitterAuth) XXX_Size() int {
	return xxx_messageInfo_TwitterAuth.Size(m)
}
func (m *TwitterAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TwitterAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TwitterAuth proto.InternalMessageInfo

func (m *TwitterAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *TwitterAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *TwitterAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *TwitterAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TwitterAuth) GetTwitterID() string {
	if m != nil {
		return m.TwitterID
	}
	return ""
}

func (m *TwitterAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *TwitterAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *TwitterAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type PlaystationAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Display Name of this Playstation account.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// TODO
	CommunityDomain string `protobuf:"bytes,4,opt,name=CommunityDomain,proto3" json:"CommunityDomain,omitempty"`
	// The Date of Birth of the user as reported to Playstation
	DateOfBirth string `protobuf:"bytes,5,opt,name=DateOfBirth,proto3" json:"DateOfBirth,omitempty"`
	// The age of the user as calculated by Playstation
	Age int32 `protobuf:"varint,6,opt,name=Age,proto3" json:"Age,omitempty"`
	// The language the user configured on their Playstation account
	Language string `protobuf:"bytes,7,opt,name=Language,proto3" json:"Language,omitempty"`
	// The ID of this Playstation account.
	PSNID string `protobuf:"bytes,8,opt,name=PSNID,proto3" json:"PSNID,omitempty"`
	// The Region of this Playstation account.
	PSNRegion string `protobuf:"bytes,9,opt,name=PSNRegion,proto3" json:"PSNRegion,omitempty"`
	// Whether or not this account is a sub-account of another PSN account.
	SubAccount      bool                `protobuf:"varint,10,opt,name=SubAccount,proto3" json:"SubAccount,omitempty"`
	ParentalControl *PSNParentalControl `protobuf:"bytes,11,opt,name=ParentalControl,proto3" json:"ParentalControl,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,12,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,13,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,14,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaystationAuth) Reset()         { *m = PlaystationAuth{} }
func (m *PlaystationAuth) String() string { return proto.CompactTextString(m) }
func (*PlaystationAuth) ProtoMessage()    {}
func (*PlaystationAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{71}
}

func (m *PlaystationAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaystationAuth.Unmarshal(m, b)
}
func (m *PlaystationAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaystationAuth.Marshal(b, m, deterministic)
}
func (m *PlaystationAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaystationAuth.Merge(m, src)
}
func (m *PlaystationAuth) XXX_Size() int {
	return xxx_messageInfo_PlaystationAuth.Size(m)
}
func (m *PlaystationAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaystationAuth.DiscardUnknown(m)
}

var xxx_messageInfo_PlaystationAuth proto.InternalMessageInfo

func (m *PlaystationAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *PlaystationAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *PlaystationAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *PlaystationAuth) GetCommunityDomain() string {
	if m != nil {
		return m.CommunityDomain
	}
	return ""
}

func (m *PlaystationAuth) GetDateOfBirth() string {
	if m != nil {
		return m.DateOfBirth
	}
	return ""
}

func (m *PlaystationAuth) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *PlaystationAuth) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *PlaystationAuth) GetPSNID() string {
	if m != nil {
		return m.PSNID
	}
	return ""
}

func (m *PlaystationAuth) GetPSNRegion() string {
	if m != nil {
		return m.PSNRegion
	}
	return ""
}

func (m *PlaystationAuth) GetSubAccount() bool {
	if m != nil {
		return m.SubAccount
	}
	return false
}

func (m *PlaystationAuth) GetParentalControl() *PSNParentalControl {
	if m != nil {
		return m.ParentalControl
	}
	return nil
}

func (m *PlaystationAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *PlaystationAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *PlaystationAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type RedditAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Display Name of this Reddit account.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The ID of this Reddit account.
	RedditID string `protobuf:"bytes,4,opt,name=RedditID,proto3" json:"RedditID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,7,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedditAuth) Reset()         { *m = RedditAuth{} }
func (m *RedditAuth) String() string { return proto.CompactTextString(m) }
func (*RedditAuth) ProtoMessage()    {}
func (*RedditAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{72}
}

func (m *RedditAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedditAuth.Unmarshal(m, b)
}
func (m *RedditAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedditAuth.Marshal(b, m, deterministic)
}
func (m *RedditAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedditAuth.Merge(m, src)
}
func (m *RedditAuth) XXX_Size() int {
	return xxx_messageInfo_RedditAuth.Size(m)
}
func (m *RedditAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_RedditAuth.DiscardUnknown(m)
}

var xxx_messageInfo_RedditAuth proto.InternalMessageInfo

func (m *RedditAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *RedditAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *RedditAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *RedditAuth) GetRedditID() string {
	if m != nil {
		return m.RedditID
	}
	return ""
}

func (m *RedditAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *RedditAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *RedditAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type StadiaAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Display Name of this Stadia account.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether of not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The ID of this Stadia account.
	StadiaID string `protobuf:"bytes,4,opt,name=StadiaID,proto3" json:"StadiaID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,7,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StadiaAuth) Reset()         { *m = StadiaAuth{} }
func (m *StadiaAuth) String() string { return proto.CompactTextString(m) }
func (*StadiaAuth) ProtoMessage()    {}
func (*StadiaAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{73}
}

func (m *StadiaAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StadiaAuth.Unmarshal(m, b)
}
func (m *StadiaAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StadiaAuth.Marshal(b, m, deterministic)
}
func (m *StadiaAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StadiaAuth.Merge(m, src)
}
func (m *StadiaAuth) XXX_Size() int {
	return xxx_messageInfo_StadiaAuth.Size(m)
}
func (m *StadiaAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_StadiaAuth.DiscardUnknown(m)
}

var xxx_messageInfo_StadiaAuth proto.InternalMessageInfo

func (m *StadiaAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *StadiaAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *StadiaAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *StadiaAuth) GetStadiaID() string {
	if m != nil {
		return m.StadiaID
	}
	return ""
}

func (m *StadiaAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *StadiaAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *StadiaAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type SteamAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The current Display Name of this Steam account.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The ID of this Steam account.
	SteamID string `protobuf:"bytes,4,opt,name=SteamID,proto3" json:"SteamID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,7,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SteamAuth) Reset()         { *m = SteamAuth{} }
func (m *SteamAuth) String() string { return proto.CompactTextString(m) }
func (*SteamAuth) ProtoMessage()    {}
func (*SteamAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{74}
}

func (m *SteamAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SteamAuth.Unmarshal(m, b)
}
func (m *SteamAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SteamAuth.Marshal(b, m, deterministic)
}
func (m *SteamAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SteamAuth.Merge(m, src)
}
func (m *SteamAuth) XXX_Size() int {
	return xxx_messageInfo_SteamAuth.Size(m)
}
func (m *SteamAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_SteamAuth.DiscardUnknown(m)
}

var xxx_messageInfo_SteamAuth proto.InternalMessageInfo

func (m *SteamAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *SteamAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *SteamAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *SteamAuth) GetSteamID() string {
	if m != nil {
		return m.SteamID
	}
	return ""
}

func (m *SteamAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *SteamAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *SteamAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type XboxAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Display Name of this XBox account.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The ID of this XBox account.
	XUID string `protobuf:"bytes,4,opt,name=XUID,proto3" json:"XUID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,7,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XboxAuth) Reset()         { *m = XboxAuth{} }
func (m *XboxAuth) String() string { return proto.CompactTextString(m) }
func (*XboxAuth) ProtoMessage()    {}
func (*XboxAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{75}
}

func (m *XboxAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XboxAuth.Unmarshal(m, b)
}
func (m *XboxAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XboxAuth.Marshal(b, m, deterministic)
}
func (m *XboxAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XboxAuth.Merge(m, src)
}
func (m *XboxAuth) XXX_Size() int {
	return xxx_messageInfo_XboxAuth.Size(m)
}
func (m *XboxAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_XboxAuth.DiscardUnknown(m)
}

var xxx_messageInfo_XboxAuth proto.InternalMessageInfo

func (m *XboxAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *XboxAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *XboxAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *XboxAuth) GetXUID() string {
	if m != nil {
		return m.XUID
	}
	return ""
}

func (m *XboxAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *XboxAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *XboxAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type VkAuth struct {
	// The Global Account ID this Auth record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The DisplayName of this VK account.
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,3,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The Email address associated with this VK account.
	Email string `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	// The ID of this VK account.
	VKID string `protobuf:"bytes,5,opt,name=VKID,proto3" json:"VKID,omitempty"`
	// When the Local Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Local Auth was last updated, as Epoch time.
	UpdatedAt int64 `protobuf:"varint,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID           string   `protobuf:"bytes,8,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VkAuth) Reset()         { *m = VkAuth{} }
func (m *VkAuth) String() string { return proto.CompactTextString(m) }
func (*VkAuth) ProtoMessage()    {}
func (*VkAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{76}
}

func (m *VkAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VkAuth.Unmarshal(m, b)
}
func (m *VkAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VkAuth.Marshal(b, m, deterministic)
}
func (m *VkAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VkAuth.Merge(m, src)
}
func (m *VkAuth) XXX_Size() int {
	return xxx_messageInfo_VkAuth.Size(m)
}
func (m *VkAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_VkAuth.DiscardUnknown(m)
}

var xxx_messageInfo_VkAuth proto.InternalMessageInfo

func (m *VkAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *VkAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *VkAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *VkAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VkAuth) GetVKID() string {
	if m != nil {
		return m.VKID
	}
	return ""
}

func (m *VkAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *VkAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *VkAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

type DiscordAuth struct {
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Provider ID used to look up this Authentication record.
	ProviderID string `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	// The account's Username, without the Discriminator code.
	DisplayName string `protobuf:"bytes,3,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// Whether or not this link is active.
	Deactivated bool `protobuf:"varint,4,opt,name=Deactivated,proto3" json:"Deactivated,omitempty"`
	// The Email address associated with this Discord account.
	Email string `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	// The user's ID in Discord's identity system.
	DiscordID string `protobuf:"bytes,6,opt,name=DiscordID,proto3" json:"DiscordID,omitempty"`
	// The user's discriminator, or hash code. In "Username#12345" the Discriminator is "12345".
	Discriminator string `protobuf:"bytes,7,opt,name=Discriminator,proto3" json:"Discriminator,omitempty"`
	// When the Discord Auth was created, as Epoch time.
	CreatedAt int64 `protobuf:"varint,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the Discord Auth was last updated, as Epoch time.
	UpdatedAt            int64    `protobuf:"varint,9,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscordAuth) Reset()         { *m = DiscordAuth{} }
func (m *DiscordAuth) String() string { return proto.CompactTextString(m) }
func (*DiscordAuth) ProtoMessage()    {}
func (*DiscordAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{77}
}

func (m *DiscordAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscordAuth.Unmarshal(m, b)
}
func (m *DiscordAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscordAuth.Marshal(b, m, deterministic)
}
func (m *DiscordAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscordAuth.Merge(m, src)
}
func (m *DiscordAuth) XXX_Size() int {
	return xxx_messageInfo_DiscordAuth.Size(m)
}
func (m *DiscordAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscordAuth.DiscardUnknown(m)
}

var xxx_messageInfo_DiscordAuth proto.InternalMessageInfo

func (m *DiscordAuth) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *DiscordAuth) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *DiscordAuth) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *DiscordAuth) GetDeactivated() bool {
	if m != nil {
		return m.Deactivated
	}
	return false
}

func (m *DiscordAuth) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *DiscordAuth) GetDiscordID() string {
	if m != nil {
		return m.DiscordID
	}
	return ""
}

func (m *DiscordAuth) GetDiscriminator() string {
	if m != nil {
		return m.Discriminator
	}
	return ""
}

func (m *DiscordAuth) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *DiscordAuth) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type Profile struct {
	// The Global Account ID this Profile record represents
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The Provider ID for this Profile
	ProviderID string `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	// The DisplayName for this Profile
	DisplayName string `protobuf:"bytes,3,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// THe IATA country code for this user profile
	Country string `protobuf:"bytes,4,opt,name=Country,proto3" json:"Country,omitempty"`
	// The user's date of birth, as Epoch time.
	DateOfBirth int64 `protobuf:"varint,5,opt,name=DateOfBirth,proto3" json:"DateOfBirth,omitempty"`
	// The user's email address
	Email string `protobuf:"bytes,6,opt,name=Email,proto3" json:"Email,omitempty"`
	// Whether or not the user would like to receive email communications from PUBG.
	EmailOptIn bool `protobuf:"varint,7,opt,name=EmailOptIn,proto3" json:"EmailOptIn,omitempty"`
	// Whether or not this player accepted out Terms of Service/Privacy Policy
	ToSAccepted bool `protobuf:"varint,8,opt,name=ToSAccepted,proto3" json:"ToSAccepted,omitempty"`
	// When the user last updated their EmailOptIn selection, as Epoch time
	EmailOptInUpdatedAt int64 `protobuf:"varint,9,opt,name=EmailOptInUpdatedAt,proto3" json:"EmailOptInUpdatedAt,omitempty"`
	// User's preferred language
	PreferredLanguage string `protobuf:"bytes,10,opt,name=PreferredLanguage,proto3" json:"PreferredLanguage,omitempty"`
	// Username for this Profile
	Username string `protobuf:"bytes,11,opt,name=Username,proto3" json:"Username,omitempty"`
	// When the profile was created, as Epoch time
	CreatedAt int64 `protobuf:"varint,12,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// When the profile was last updated, as Epoch time
	UpdatedAt int64 `protobuf:"varint,13,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// Information for the creator this account is supporting
	CreatorInfo *CreatorInfo `protobuf:"bytes,14,opt,name=CreatorInfo,proto3" json:"CreatorInfo,omitempty"`
	// Promo codes claimed by this profile
	PromoCodes           map[string]string `protobuf:"bytes,15,rep,name=PromoCodes,proto3" json:"PromoCodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{78}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *Profile) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *Profile) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Profile) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Profile) GetDateOfBirth() int64 {
	if m != nil {
		return m.DateOfBirth
	}
	return 0
}

func (m *Profile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Profile) GetEmailOptIn() bool {
	if m != nil {
		return m.EmailOptIn
	}
	return false
}

func (m *Profile) GetToSAccepted() bool {
	if m != nil {
		return m.ToSAccepted
	}
	return false
}

func (m *Profile) GetEmailOptInUpdatedAt() int64 {
	if m != nil {
		return m.EmailOptInUpdatedAt
	}
	return 0
}

func (m *Profile) GetPreferredLanguage() string {
	if m != nil {
		return m.PreferredLanguage
	}
	return ""
}

func (m *Profile) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Profile) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Profile) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Profile) GetCreatorInfo() *CreatorInfo {
	if m != nil {
		return m.CreatorInfo
	}
	return nil
}

func (m *Profile) GetPromoCodes() map[string]string {
	if m != nil {
		return m.PromoCodes
	}
	return nil
}

type PrevTwitch struct {
	// The Twitch ID that the account was last linked with.
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// The Twitch Display Name of the Twitch Account that this Global Account was last linked to.
	DisplayName          string   `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrevTwitch) Reset()         { *m = PrevTwitch{} }
func (m *PrevTwitch) String() string { return proto.CompactTextString(m) }
func (*PrevTwitch) ProtoMessage()    {}
func (*PrevTwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{79}
}

func (m *PrevTwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrevTwitch.Unmarshal(m, b)
}
func (m *PrevTwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrevTwitch.Marshal(b, m, deterministic)
}
func (m *PrevTwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrevTwitch.Merge(m, src)
}
func (m *PrevTwitch) XXX_Size() int {
	return xxx_messageInfo_PrevTwitch.Size(m)
}
func (m *PrevTwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_PrevTwitch.DiscardUnknown(m)
}

var xxx_messageInfo_PrevTwitch proto.InternalMessageInfo

func (m *PrevTwitch) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PrevTwitch) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type CreatorInfo struct {
	// Code used to support this creator
	CreatorCode string `protobuf:"bytes,1,opt,name=CreatorCode,proto3" json:"CreatorCode,omitempty"`
	// Human-readable creator name
	CreatorName string `protobuf:"bytes,2,opt,name=CreatorName,proto3" json:"CreatorName,omitempty"`
	// When this code was selected by the user, as Epoch time
	UpdatedAt            int64    `protobuf:"varint,3,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatorInfo) Reset()         { *m = CreatorInfo{} }
func (m *CreatorInfo) String() string { return proto.CompactTextString(m) }
func (*CreatorInfo) ProtoMessage()    {}
func (*CreatorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{80}
}

func (m *CreatorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatorInfo.Unmarshal(m, b)
}
func (m *CreatorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatorInfo.Marshal(b, m, deterministic)
}
func (m *CreatorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatorInfo.Merge(m, src)
}
func (m *CreatorInfo) XXX_Size() int {
	return xxx_messageInfo_CreatorInfo.Size(m)
}
func (m *CreatorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CreatorInfo proto.InternalMessageInfo

func (m *CreatorInfo) GetCreatorCode() string {
	if m != nil {
		return m.CreatorCode
	}
	return ""
}

func (m *CreatorInfo) GetCreatorName() string {
	if m != nil {
		return m.CreatorName
	}
	return ""
}

func (m *CreatorInfo) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type AccessLog struct {
	// SessionID is a key of session, it helps to clarify  this session data is for current user.
	SessionID string `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	// Timestamp the access log was created
	Timestamp int64 `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	// stored user's browser
	Browser string `protobuf:"bytes,3,opt,name=Browser,proto3" json:"Browser,omitempty"`
	// stored user's os
	Os string `protobuf:"bytes,4,opt,name=Os,proto3" json:"Os,omitempty"`
	// stored user's county code based on IP
	Country string `protobuf:"bytes,5,opt,name=Country,proto3" json:"Country,omitempty"`
	// stored user's IP
	IP string `protobuf:"bytes,6,opt,name=IP,proto3" json:"IP,omitempty"`
	// This data is current session or not
	CurrentUser          bool     `protobuf:"varint,7,opt,name=CurrentUser,proto3" json:"CurrentUser,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccessLog) Reset()         { *m = AccessLog{} }
func (m *AccessLog) String() string { return proto.CompactTextString(m) }
func (*AccessLog) ProtoMessage()    {}
func (*AccessLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{81}
}

func (m *AccessLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessLog.Unmarshal(m, b)
}
func (m *AccessLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessLog.Marshal(b, m, deterministic)
}
func (m *AccessLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessLog.Merge(m, src)
}
func (m *AccessLog) XXX_Size() int {
	return xxx_messageInfo_AccessLog.Size(m)
}
func (m *AccessLog) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessLog.DiscardUnknown(m)
}

var xxx_messageInfo_AccessLog proto.InternalMessageInfo

func (m *AccessLog) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *AccessLog) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AccessLog) GetBrowser() string {
	if m != nil {
		return m.Browser
	}
	return ""
}

func (m *AccessLog) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *AccessLog) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *AccessLog) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *AccessLog) GetCurrentUser() bool {
	if m != nil {
		return m.CurrentUser
	}
	return false
}

type AccessLogResponse struct {
	//
	//Indicates the outcome of the request.
	//Individual methods should document what values may be returned here.
	//See the "BackendErrCode" enum for all possible values.
	Code BackendErrCode `protobuf:"varint,1,opt,name=Code,proto3,enum=pubg.globalaccounts.BackendErrCode" json:"Code,omitempty"`
	// May contain a message about the response.
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// list of AccessLog in session table
	ActivedAccessLogs []*AccessLog `protobuf:"bytes,3,rep,name=ActivedAccessLogs,proto3" json:"ActivedAccessLogs,omitempty"`
	// list of AccessLog in iplog table
	AccessLogs           []*AccessLog `protobuf:"bytes,4,rep,name=AccessLogs,proto3" json:"AccessLogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AccessLogResponse) Reset()         { *m = AccessLogResponse{} }
func (m *AccessLogResponse) String() string { return proto.CompactTextString(m) }
func (*AccessLogResponse) ProtoMessage()    {}
func (*AccessLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{82}
}

func (m *AccessLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessLogResponse.Unmarshal(m, b)
}
func (m *AccessLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessLogResponse.Marshal(b, m, deterministic)
}
func (m *AccessLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessLogResponse.Merge(m, src)
}
func (m *AccessLogResponse) XXX_Size() int {
	return xxx_messageInfo_AccessLogResponse.Size(m)
}
func (m *AccessLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccessLogResponse proto.InternalMessageInfo

func (m *AccessLogResponse) GetCode() BackendErrCode {
	if m != nil {
		return m.Code
	}
	return BackendErrCode_ErrAccountByIDNotFound
}

func (m *AccessLogResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AccessLogResponse) GetActivedAccessLogs() []*AccessLog {
	if m != nil {
		return m.ActivedAccessLogs
	}
	return nil
}

func (m *AccessLogResponse) GetAccessLogs() []*AccessLog {
	if m != nil {
		return m.AccessLogs
	}
	return nil
}

type PromotionInfo struct {
	// Internal ID for the promotion
	PromotionID string `protobuf:"bytes,1,opt,name=PromotionID,proto3" json:"PromotionID,omitempty"`
	// Name for the promotion
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// Description of the promotion
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	// URL for image to be shown with promo info
	ImageURL string `protobuf:"bytes,4,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	// URL for the external shop link
	LinkURL string `protobuf:"bytes,5,opt,name=LinkURL,proto3" json:"LinkURL,omitempty"`
	// Number of unclaimed codes for the promotion
	Remaining int64 `protobuf:"varint,6,opt,name=Remaining,proto3" json:"Remaining,omitempty"`
	// Total number of codes for this promotion
	Total int64 `protobuf:"varint,7,opt,name=Total,proto3" json:"Total,omitempty"`
	// Start date for this promotion
	StartDate int64 `protobuf:"varint,8,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	// End date for this promotion
	EndDate int64 `protobuf:"varint,9,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	// Whether or not this promotion's codes were pregenerated
	PreGeneratedCodes bool `protobuf:"varint,10,opt,name=PreGeneratedCodes,proto3" json:"PreGeneratedCodes,omitempty"`
	// The type of promotion this is
	PromotionType string `protobuf:"bytes,11,opt,name=PromotionType,proto3" json:"PromotionType,omitempty"`
	// Whether or not the UI should display the claimed code
	ShowCode             bool     `protobuf:"varint,12,opt,name=ShowCode,proto3" json:"ShowCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PromotionInfo) Reset()         { *m = PromotionInfo{} }
func (m *PromotionInfo) String() string { return proto.CompactTextString(m) }
func (*PromotionInfo) ProtoMessage()    {}
func (*PromotionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{83}
}

func (m *PromotionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionInfo.Unmarshal(m, b)
}
func (m *PromotionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionInfo.Marshal(b, m, deterministic)
}
func (m *PromotionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionInfo.Merge(m, src)
}
func (m *PromotionInfo) XXX_Size() int {
	return xxx_messageInfo_PromotionInfo.Size(m)
}
func (m *PromotionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionInfo proto.InternalMessageInfo

func (m *PromotionInfo) GetPromotionID() string {
	if m != nil {
		return m.PromotionID
	}
	return ""
}

func (m *PromotionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PromotionInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PromotionInfo) GetImageURL() string {
	if m != nil {
		return m.ImageURL
	}
	return ""
}

func (m *PromotionInfo) GetLinkURL() string {
	if m != nil {
		return m.LinkURL
	}
	return ""
}

func (m *PromotionInfo) GetRemaining() int64 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *PromotionInfo) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PromotionInfo) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *PromotionInfo) GetEndDate() int64 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

func (m *PromotionInfo) GetPreGeneratedCodes() bool {
	if m != nil {
		return m.PreGeneratedCodes
	}
	return false
}

func (m *PromotionInfo) GetPromotionType() string {
	if m != nil {
		return m.PromotionType
	}
	return ""
}

func (m *PromotionInfo) GetShowCode() bool {
	if m != nil {
		return m.ShowCode
	}
	return false
}

// A PlatformAccount links a TSL Account ID to a GlobalAccount/Provider link.
type PlatformAccount struct {
	// The Global Account ID this link belongs to.
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The user's TSL Username
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// The TSL Account ID.
	PlatformID string `protobuf:"bytes,3,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`
	// The user's ID in the associated auth provider (XBox ID, PSN ID, etc.)
	AuthProviderID string `protobuf:"bytes,4,opt,name=AuthProviderID,proto3" json:"AuthProviderID,omitempty"`
	// The time when this link was created, Epoch time.
	CreatedAt int64 `protobuf:"varint,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// The time when this link was last updated, Epoch time.
	UpdatedAt            int64    `protobuf:"varint,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlatformAccount) Reset()         { *m = PlatformAccount{} }
func (m *PlatformAccount) String() string { return proto.CompactTextString(m) }
func (*PlatformAccount) ProtoMessage()    {}
func (*PlatformAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{84}
}

func (m *PlatformAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlatformAccount.Unmarshal(m, b)
}
func (m *PlatformAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlatformAccount.Marshal(b, m, deterministic)
}
func (m *PlatformAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformAccount.Merge(m, src)
}
func (m *PlatformAccount) XXX_Size() int {
	return xxx_messageInfo_PlatformAccount.Size(m)
}
func (m *PlatformAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformAccount.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformAccount proto.InternalMessageInfo

func (m *PlatformAccount) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *PlatformAccount) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *PlatformAccount) GetPlatformID() string {
	if m != nil {
		return m.PlatformID
	}
	return ""
}

func (m *PlatformAccount) GetAuthProviderID() string {
	if m != nil {
		return m.AuthProviderID
	}
	return ""
}

func (m *PlatformAccount) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *PlatformAccount) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

// A GameAccount links a Game-specific account to a GlobalAccount through an Authentication Provider.
type GameAccount struct {
	// The Global Account ID this link belongs to.
	GUID string `protobuf:"bytes,1,opt,name=GUID,proto3" json:"GUID,omitempty"`
	// The unique ID of this GameAccount record
	ProviderID string `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	// The Game Account ID.
	PlatformID string `protobuf:"bytes,3,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`
	// The Auth Provider that the AuthProvier ID is scoped to (xbox, steam, psn, etc.)
	AuthProvider string `protobuf:"bytes,4,opt,name=AuthProvider,proto3" json:"AuthProvider,omitempty"`
	// The user's ID in the associated auth provider (XBox ID, PSN ID, etc.)
	AuthProviderID string `protobuf:"bytes,5,opt,name=AuthProviderID,proto3" json:"AuthProviderID,omitempty"`
	// The player's IGN
	DisplayName string `protobuf:"bytes,6,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	// The time when this record was created, Epoch time.
	CreatedAt int64 `protobuf:"varint,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// The time when this record was last updated, Epoch time.
	UpdatedAt            int64    `protobuf:"varint,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameAccount) Reset()         { *m = GameAccount{} }
func (m *GameAccount) String() string { return proto.CompactTextString(m) }
func (*GameAccount) ProtoMessage()    {}
func (*GameAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e8e57dbfc8de4e9, []int{85}
}

func (m *GameAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameAccount.Unmarshal(m, b)
}
func (m *GameAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameAccount.Marshal(b, m, deterministic)
}
func (m *GameAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameAccount.Merge(m, src)
}
func (m *GameAccount) XXX_Size() int {
	return xxx_messageInfo_GameAccount.Size(m)
}
func (m *GameAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_GameAccount.DiscardUnknown(m)
}

var xxx_messageInfo_GameAccount proto.InternalMessageInfo

func (m *GameAccount) GetGUID() string {
	if m != nil {
		return m.GUID
	}
	return ""
}

func (m *GameAccount) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *GameAccount) GetPlatformID() string {
	if m != nil {
		return m.PlatformID
	}
	return ""
}

func (m *GameAccount) GetAuthProvider() string {
	if m != nil {
		return m.AuthProvider
	}
	return ""
}

func (m *GameAccount) GetAuthProviderID() string {
	if m != nil {
		return m.AuthProviderID
	}
	return ""
}

func (m *GameAccount) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *GameAccount) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *GameAccount) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func init() {
	proto.RegisterEnum("pubg.globalaccounts.BackendErrCode", BackendErrCode_name, BackendErrCode_value)
	proto.RegisterType((*UserData)(nil), "pubg.globalaccounts.UserData")
	proto.RegisterMapType((map[string]string)(nil), "pubg.globalaccounts.UserData.MetaEntry")
	proto.RegisterType((*CreateAccountParams)(nil), "pubg.globalaccounts.CreateAccountParams")
	proto.RegisterType((*FindOrInitGPPAccountParams)(nil), "pubg.globalaccounts.FindOrInitGPPAccountParams")
	proto.RegisterType((*GPPAccountResponse)(nil), "pubg.globalaccounts.GPPAccountResponse")
	proto.RegisterType((*AuthLinkInfo)(nil), "pubg.globalaccounts.AuthLinkInfo")
	proto.RegisterType((*FacebookLinkInfo)(nil), "pubg.globalaccounts.FacebookLinkInfo")
	proto.RegisterType((*GoogleLinkInfo)(nil), "pubg.globalaccounts.GoogleLinkInfo")
	proto.RegisterType((*LineLinkInfo)(nil), "pubg.globalaccounts.LineLinkInfo")
	proto.RegisterType((*PlaystationLinkInfo)(nil), "pubg.globalaccounts.PlaystationLinkInfo")
	proto.RegisterType((*PSNParentalControl)(nil), "pubg.globalaccounts.PSNParentalControl")
	proto.RegisterType((*RedditLinkInfo)(nil), "pubg.globalaccounts.RedditLinkInfo")
	proto.RegisterType((*StadiaLinkInfo)(nil), "pubg.globalaccounts.StadiaLinkInfo")
	proto.RegisterType((*SteamLinkInfo)(nil), "pubg.globalaccounts.SteamLinkInfo")
	proto.RegisterType((*SteamPhoto)(nil), "pubg.globalaccounts.SteamPhoto")
	proto.RegisterType((*TwitchLinkInfo)(nil), "pubg.globalaccounts.TwitchLinkInfo")
	proto.RegisterType((*TwitterLinkInfo)(nil), "pubg.globalaccounts.TwitterLinkInfo")
	proto.RegisterType((*VKLinkInfo)(nil), "pubg.globalaccounts.VKLinkInfo")
	proto.RegisterType((*XboxLinkInfo)(nil), "pubg.globalaccounts.XboxLinkInfo")
	proto.RegisterType((*DiscordLinkInfo)(nil), "pubg.globalaccounts.DiscordLinkInfo")
	proto.RegisterType((*DeleteAccountParams)(nil), "pubg.globalaccounts.DeleteAccountParams")
	proto.RegisterType((*ResendActivationParams)(nil), "pubg.globalaccounts.ResendActivationParams")
	proto.RegisterType((*GuidInput)(nil), "pubg.globalaccounts.GuidInput")
	proto.RegisterType((*GuidProviderCombo)(nil), "pubg.globalaccounts.GuidProviderCombo")
	proto.RegisterType((*DestroyLinkParams)(nil), "pubg.globalaccounts.DestroyLinkParams")
	proto.RegisterType((*CriteriaQuery)(nil), "pubg.globalaccounts.CriteriaQuery")
	proto.RegisterType((*ActivateAccountParams)(nil), "pubg.globalaccounts.ActivateAccountParams")
	proto.RegisterType((*BeginEmailChangeParams)(nil), "pubg.globalaccounts.BeginEmailChangeParams")
	proto.RegisterType((*CompleteEmailChangeParams)(nil), "pubg.globalaccounts.CompleteEmailChangeParams")
	proto.RegisterType((*UpdateUsernameParams)(nil), "pubg.globalaccounts.UpdateUsernameParams")
	proto.RegisterType((*UpdatePasswordParams)(nil), "pubg.globalaccounts.UpdatePasswordParams")
	proto.RegisterType((*BeginForgotPasswordParams)(nil), "pubg.globalaccounts.BeginForgotPasswordParams")
	proto.RegisterType((*CompleteForgotPasswordParams)(nil), "pubg.globalaccounts.CompleteForgotPasswordParams")
	proto.RegisterType((*SetCommPrefsParams)(nil), "pubg.globalaccounts.SetCommPrefsParams")
	proto.RegisterType((*SetPersonaParams)(nil), "pubg.globalaccounts.SetPersonaParams")
	proto.RegisterType((*CreateLinkParams)(nil), "pubg.globalaccounts.CreateLinkParams")
	proto.RegisterType((*CreateRelyingPartyLinkParams)(nil), "pubg.globalaccounts.CreateRelyingPartyLinkParams")
	proto.RegisterType((*VerifyPasswordParams)(nil), "pubg.globalaccounts.VerifyPasswordParams")
	proto.RegisterType((*GetPrevTwitchParams)(nil), "pubg.globalaccounts.GetPrevTwitchParams")
	proto.RegisterType((*CompleteEnableTOTPParams)(nil), "pubg.globalaccounts.CompleteEnableTOTPParams")
	proto.RegisterType((*VerifyTOTPCodeParams)(nil), "pubg.globalaccounts.VerifyTOTPCodeParams")
	proto.RegisterType((*SocialLoginParams)(nil), "pubg.globalaccounts.SocialLoginParams")
	proto.RegisterType((*PreferredLangParams)(nil), "pubg.globalaccounts.PreferredLangParams")
	proto.RegisterType((*MagicLinkGenerateParams)(nil), "pubg.globalaccounts.MagicLinkGenerateParams")
	proto.RegisterType((*MagicLinkCodeParams)(nil), "pubg.globalaccounts.MagicLinkCodeParams")
	proto.RegisterType((*UpdateCreatorCodeParams)(nil), "pubg.globalaccounts.UpdateCreatorCodeParams")
	proto.RegisterType((*GetCreatorCodesParams)(nil), "pubg.globalaccounts.GetCreatorCodesParams")
	proto.RegisterType((*GetPromotionsParams)(nil), "pubg.globalaccounts.GetPromotionsParams")
	proto.RegisterType((*ClaimPromoCodeParams)(nil), "pubg.globalaccounts.ClaimPromoCodeParams")
	proto.RegisterType((*StatusResponse)(nil), "pubg.globalaccounts.StatusResponse")
	proto.RegisterType((*TokenClaimResponse)(nil), "pubg.globalaccounts.TokenClaimResponse")
	proto.RegisterMapType((map[string]string)(nil), "pubg.globalaccounts.TokenClaimResponse.TokenClaimEntry")
	proto.RegisterType((*GlobalAccountResponse)(nil), "pubg.globalaccounts.GlobalAccountResponse")
	proto.RegisterType((*GetLinkResponse)(nil), "pubg.globalaccounts.GetLinkResponse")
	proto.RegisterType((*PrevTwitchResponse)(nil), "pubg.globalaccounts.PrevTwitchResponse")
	proto.RegisterType((*BeginEnableTOTPResponse)(nil), "pubg.globalaccounts.BeginEnableTOTPResponse")
	proto.RegisterType((*CompleteEnableTOTPResponse)(nil), "pubg.globalaccounts.CompleteEnableTOTPResponse")
	proto.RegisterType((*MagicLinkGenerateResponse)(nil), "pubg.globalaccounts.MagicLinkGenerateResponse")
	proto.RegisterType((*MagicLinkValidateResponse)(nil), "pubg.globalaccounts.MagicLinkValidateResponse")
	proto.RegisterType((*MagicLinkCheckCompleteResponse)(nil), "pubg.globalaccounts.MagicLinkCheckCompleteResponse")
	proto.RegisterType((*CodesResponse)(nil), "pubg.globalaccounts.CodesResponse")
	proto.RegisterType((*PromotionsResponse)(nil), "pubg.globalaccounts.PromotionsResponse")
	proto.RegisterType((*GlobalAccount)(nil), "pubg.globalaccounts.GlobalAccount")
	proto.RegisterMapType((map[string]*PlatformAccount)(nil), "pubg.globalaccounts.GlobalAccount.PlatformsEntry")
	proto.RegisterType((*AuthenticationData)(nil), "pubg.globalaccounts.AuthenticationData")
	proto.RegisterType((*LocalAuth)(nil), "pubg.globalaccounts.LocalAuth")
	proto.RegisterType((*TwitchAuth)(nil), "pubg.globalaccounts.TwitchAuth")
	proto.RegisterType((*FacebookAuth)(nil), "pubg.globalaccounts.FacebookAuth")
	proto.RegisterType((*LitePCAuth)(nil), "pubg.globalaccounts.LitePCAuth")
	proto.RegisterType((*YoutubeAuth)(nil), "pubg.globalaccounts.YoutubeAuth")
	proto.RegisterType((*AfreecaTVAuth)(nil), "pubg.globalaccounts.AfreecaTVAuth")
	proto.RegisterType((*GoogleAuth)(nil), "pubg.globalaccounts.GoogleAuth")
	proto.RegisterType((*LineAuth)(nil), "pubg.globalaccounts.LineAuth")
	proto.RegisterType((*TwitterAuth)(nil), "pubg.globalaccounts.TwitterAuth")
	proto.RegisterType((*PlaystationAuth)(nil), "pubg.globalaccounts.PlaystationAuth")
	proto.RegisterType((*RedditAuth)(nil), "pubg.globalaccounts.RedditAuth")
	proto.RegisterType((*StadiaAuth)(nil), "pubg.globalaccounts.StadiaAuth")
	proto.RegisterType((*SteamAuth)(nil), "pubg.globalaccounts.SteamAuth")
	proto.RegisterType((*XboxAuth)(nil), "pubg.globalaccounts.XboxAuth")
	proto.RegisterType((*VkAuth)(nil), "pubg.globalaccounts.VkAuth")
	proto.RegisterType((*DiscordAuth)(nil), "pubg.globalaccounts.DiscordAuth")
	proto.RegisterType((*Profile)(nil), "pubg.globalaccounts.Profile")
	proto.RegisterMapType((map[string]string)(nil), "pubg.globalaccounts.Profile.PromoCodesEntry")
	proto.RegisterType((*PrevTwitch)(nil), "pubg.globalaccounts.PrevTwitch")
	proto.RegisterType((*CreatorInfo)(nil), "pubg.globalaccounts.CreatorInfo")
	proto.RegisterType((*AccessLog)(nil), "pubg.globalaccounts.AccessLog")
	proto.RegisterType((*AccessLogResponse)(nil), "pubg.globalaccounts.AccessLogResponse")
	proto.RegisterType((*PromotionInfo)(nil), "pubg.globalaccounts.PromotionInfo")
	proto.RegisterType((*PlatformAccount)(nil), "pubg.globalaccounts.PlatformAccount")
	proto.RegisterType((*GameAccount)(nil), "pubg.globalaccounts.GameAccount")
}

func init() { proto.RegisterFile("rpc/identity/identity.proto", fileDescriptor_8e8e57dbfc8de4e9) }

var fileDescriptor_8e8e57dbfc8de4e9 = []byte{
	// 5135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x3c, 0x5d, 0x6f, 0x1b, 0x57,
	0x76, 0x1d, 0x91, 0x12, 0xa9, 0xa3, 0xaf, 0xf1, 0x95, 0x6c, 0xd3, 0xb2, 0x63, 0x3b, 0x13, 0xc7,
	0x51, 0xbe, 0xe4, 0x8d, 0xb3, 0x1b, 0xa7, 0xc9, 0x26, 0x5d, 0x49, 0x94, 0xb5, 0x4c, 0x64, 0x89,
	0x21, 0x25, 0x27, 0x0d, 0x02, 0x34, 0x23, 0xce, 0x15, 0x35, 0xd1, 0x70, 0x86, 0x3b, 0x73, 0x29,
	0x9b, 0x4d, 0x81, 0x2d, 0x0a, 0xb4, 0x5b, 0xb4, 0x40, 0x9f, 0xda, 0xa7, 0xee, 0x07, 0x16, 0x45,
	0xd1, 0x62, 0x8b, 0xfd, 0x03, 0x05, 0xda, 0x87, 0x3e, 0x15, 0xd8, 0xf6, 0xa5, 0x4f, 0x2d, 0xd0,
	0xe7, 0x7d, 0x69, 0x9f, 0x8a, 0x16, 0x68, 0x81, 0x3e, 0x2c, 0xee, 0xe7, 0xdc, 0x19, 0xce, 0x50,
	0x74, 0x24, 0x3a, 0x7e, 0xe3, 0x3d, 0xf7, 0xdc, 0x39, 0x1f, 0xf7, 0xdc, 0x73, 0xee, 0xc7, 0x39,
	0x84, 0xab, 0x61, 0xb7, 0x75, 0xc7, 0x75, 0xb0, 0x4f, 0x5c, 0xd2, 0x57, 0x3f, 0x56, 0xbb, 0x61,
	0x40, 0x02, 0xb4, 0xd8, 0xed, 0x1d, 0xb4, 0x57, 0xdb, 0x5e, 0x70, 0x60, 0x7b, 0x76, 0xab, 0x15,
	0xf4, 0x7c, 0x12, 0x59, 0xff, 0x60, 0x40, 0x79, 0x3f, 0xc2, 0x61, 0xd5, 0x26, 0x36, 0x9a, 0x87,
	0x89, 0x5a, 0xbd, 0x62, 0xdc, 0x34, 0x56, 0xa6, 0x1b, 0x13, 0xb5, 0x3a, 0xba, 0x04, 0x53, 0xdb,
	0x41, 0xcb, 0xf6, 0x70, 0x65, 0x82, 0xc1, 0x44, 0x0b, 0x55, 0xa0, 0xd4, 0xc0, 0x5e, 0xdf, 0xf5,
	0xdb, 0x95, 0x02, 0xeb, 0x90, 0x4d, 0xf4, 0x2e, 0x14, 0x1f, 0x60, 0x62, 0x57, 0x8a, 0x37, 0x0b,
	0x2b, 0x33, 0x77, 0x5f, 0x5a, 0xcd, 0x20, 0xb9, 0x2a, 0xc9, 0xad, 0x52, 0xcc, 0x4d, 0x9f, 0x84,
	0xfd, 0x06, 0x1b, 0xb4, 0x7c, 0x0f, 0xa6, 0x15, 0x08, 0x99, 0x50, 0x38, 0xc6, 0x7d, 0xc1, 0x0c,
	0xfd, 0x89, 0x96, 0x60, 0xf2, 0xc4, 0xf6, 0x7a, 0x92, 0x19, 0xde, 0x78, 0x67, 0xe2, 0x6d, 0xc3,
	0xfa, 0xe7, 0x02, 0x2c, 0x6e, 0x84, 0xd8, 0x26, 0x78, 0x8d, 0x13, 0xa9, 0xdb, 0xa1, 0xdd, 0x89,
	0xd0, 0x1b, 0x50, 0xa4, 0xc4, 0xd8, 0x47, 0x66, 0xee, 0x3e, 0x37, 0x94, 0x9b, 0x06, 0x43, 0xa5,
	0x44, 0x36, 0x3b, 0xb6, 0xeb, 0x49, 0x22, 0xac, 0x81, 0x96, 0xa1, 0x5c, 0xb7, 0xa3, 0xe8, 0x51,
	0x10, 0x3a, 0x95, 0x22, 0xeb, 0x50, 0x6d, 0x74, 0x17, 0x96, 0xe4, 0xef, 0x8d, 0xc0, 0x3f, 0x74,
	0xc3, 0x8e, 0x4d, 0xdc, 0xc0, 0xaf, 0x4c, 0x32, 0xbc, 0xcc, 0x3e, 0x74, 0x13, 0x66, 0xaa, 0x36,
	0xc1, 0xbb, 0x87, 0xeb, 0x6e, 0x48, 0x8e, 0x2a, 0x53, 0x37, 0x8d, 0x95, 0x42, 0x43, 0x07, 0x51,
	0x15, 0x6f, 0x50, 0x06, 0xc3, 0x7e, 0xa5, 0xc4, 0x55, 0x2c, 0x9a, 0xe8, 0x3a, 0x00, 0x63, 0x6a,
	0xb7, 0x4b, 0x6a, 0x7e, 0xa5, 0x7c, 0xd3, 0x58, 0x29, 0x37, 0x34, 0x08, 0xfd, 0xf6, 0x5e, 0x10,
	0xad, 0xb5, 0x5a, 0xb8, 0x4b, 0xb0, 0x53, 0x99, 0x66, 0x08, 0x3a, 0x88, 0x4a, 0xb3, 0xe1, 0xb9,
	0xd8, 0x27, 0xb5, 0x6a, 0x05, 0xb8, 0x34, 0xb2, 0x8d, 0xde, 0x83, 0xf2, 0xb6, 0xeb, 0x1f, 0xd7,
	0xfc, 0xc3, 0xa0, 0x32, 0xcb, 0xd4, 0xf6, 0x7c, 0xa6, 0xda, 0xd6, 0x7a, 0xe4, 0x48, 0x22, 0x36,
	0xd4, 0x10, 0x64, 0xc1, 0xec, 0x5a, 0x8b, 0xb8, 0x27, 0x36, 0xc1, 0x7b, 0x38, 0x22, 0x95, 0x39,
	0xf6, 0xf9, 0x04, 0x8c, 0x92, 0xa7, 0xaa, 0xf6, 0xed, 0x0e, 0xae, 0xcc, 0x73, 0xf2, 0xb2, 0xfd,
	0x41, 0xb1, 0x5c, 0x30, 0x8b, 0xd6, 0x9f, 0x18, 0xb0, 0x7c, 0xdf, 0xf5, 0x9d, 0xdd, 0xb0, 0xe6,
	0xbb, 0x64, 0xab, 0x5e, 0x4f, 0x4e, 0x2b, 0x25, 0xd2, 0x23, 0x47, 0xf5, 0x30, 0x38, 0x71, 0x1d,
	0x31, 0xbd, 0x94, 0x88, 0x06, 0x43, 0xb7, 0x61, 0x5e, 0x6f, 0xd7, 0xaa, 0x62, 0x42, 0x53, 0x50,
	0x74, 0x0b, 0xe6, 0xb6, 0xec, 0x8e, 0xb4, 0x9b, 0x5a, 0x55, 0x18, 0x74, 0x12, 0x68, 0xfd, 0xa5,
	0x01, 0x28, 0x66, 0xa3, 0x81, 0xa3, 0x6e, 0xe0, 0x47, 0x18, 0xdd, 0x83, 0xe2, 0x46, 0xe0, 0x60,
	0xc6, 0xc0, 0xfc, 0xdd, 0x17, 0x32, 0x15, 0xb5, 0x6e, 0xb7, 0x8e, 0xb1, 0xef, 0x6c, 0x86, 0x21,
	0x45, 0x6d, 0xb0, 0x01, 0x74, 0x76, 0x1f, 0xe0, 0x28, 0xb2, 0xdb, 0xd2, 0x98, 0x65, 0x13, 0x7d,
	0x1b, 0x4a, 0x82, 0x0a, 0xe3, 0x64, 0xe6, 0xae, 0x95, 0xf9, 0xd5, 0x2d, 0xd6, 0x94, 0xfc, 0xc8,
	0x21, 0xd6, 0x1f, 0x4c, 0x71, 0xd5, 0xa8, 0xf9, 0xa0, 0x86, 0x9b, 0x54, 0x93, 0x6a, 0xa3, 0x35,
	0x28, 0xdf, 0xb7, 0x5b, 0xf8, 0x20, 0x08, 0x8e, 0x05, 0xad, 0x17, 0x33, 0x69, 0x49, 0xa4, 0x78,
	0xba, 0x25, 0x04, 0xbd, 0x0b, 0x53, 0x5b, 0x41, 0xd0, 0xf6, 0x30, 0x5b, 0x15, 0x33, 0x39, 0x2a,
	0xe0, 0x28, 0x6a, 0xb8, 0x18, 0x82, 0xbe, 0x05, 0xc5, 0x6d, 0xd7, 0xc7, 0x6c, 0xa1, 0xe4, 0x99,
	0x19, 0x45, 0x50, 0x03, 0x19, 0x3a, 0xfa, 0x00, 0x66, 0xea, 0x9e, 0xdd, 0x8f, 0x08, 0x5f, 0x66,
	0x53, 0x6c, 0xf4, 0x4a, 0xe6, 0x68, 0x0d, 0x4f, 0x7d, 0x44, 0x1f, 0x8c, 0xde, 0x86, 0xc9, 0x26,
	0xc1, 0x76, 0x87, 0xad, 0xb1, 0x3c, 0x5d, 0x33, 0x0c, 0x35, 0x9e, 0x0f, 0xa0, 0x92, 0xef, 0x3d,
	0x72, 0x49, 0xeb, 0x88, 0xad, 0xc0, 0x3c, 0xc9, 0x39, 0x4a, 0x2c, 0x39, 0x6f, 0xa3, 0xf7, 0xa1,
	0x44, 0x7f, 0x11, 0x1c, 0xb2, 0xe5, 0x39, 0x73, 0xf7, 0x56, 0xee, 0x68, 0x82, 0x43, 0x35, 0x5c,
	0x0e, 0x42, 0x77, 0x60, 0xe2, 0xe1, 0x87, 0x6c, 0xe9, 0xce, 0xdc, 0xbd, 0x91, 0x39, 0xf4, 0xe1,
	0x87, 0x6a, 0xd4, 0xc4, 0xc3, 0x0f, 0xa9, 0xaa, 0x3f, 0x39, 0x08, 0x1e, 0x57, 0x66, 0x86, 0xa8,
	0x9a, 0x22, 0xc4, 0xaa, 0xa6, 0x2d, 0x2a, 0x64, 0x93, 0xd8, 0x8e, 0x6b, 0x0b, 0x57, 0xf0, 0x42,
	0x8e, 0x7e, 0x28, 0x4a, 0x2c, 0x24, 0x6f, 0x53, 0x21, 0xab, 0x6e, 0xd4, 0xa2, 0x2e, 0x73, 0x6e,
	0x88, 0x90, 0x02, 0x27, 0x16, 0x52, 0x00, 0x28, 0xf1, 0x06, 0x76, 0x1c, 0x97, 0x30, 0x27, 0x91,
	0x47, 0x9c, 0xa3, 0xc4, 0xc4, 0x79, 0xdb, 0xfa, 0x1d, 0x30, 0xd3, 0x66, 0xcb, 0xa2, 0x5b, 0x55,
	0x45, 0xb7, 0x2a, 0x73, 0xc2, 0x6e, 0xd4, 0xf5, 0xec, 0xfe, 0x0e, 0x75, 0x45, 0x7c, 0x21, 0xea,
	0x20, 0x8a, 0x41, 0x9d, 0x66, 0x14, 0xed, 0x05, 0xc7, 0xd8, 0x17, 0xae, 0x41, 0x07, 0xc5, 0xe1,
	0xa2, 0xa8, 0x85, 0x0b, 0xeb, 0xc7, 0x06, 0xcc, 0x27, 0x8d, 0x7e, 0x2c, 0xc4, 0x2d, 0x98, 0x6d,
	0xe0, 0xc3, 0x10, 0x47, 0x47, 0x1c, 0x85, 0xf3, 0x90, 0x80, 0xc5, 0x0c, 0x4e, 0xea, 0x0c, 0xfe,
	0xd0, 0x80, 0x59, 0x7d, 0x69, 0x3d, 0x63, 0xec, 0xfd, 0x6e, 0x01, 0x16, 0x33, 0xd6, 0x2e, 0xba,
	0x06, 0xd3, 0xb1, 0xa3, 0xe6, 0xcc, 0xc6, 0x80, 0x73, 0xe1, 0xd9, 0x84, 0xc2, 0x5a, 0x9b, 0x7b,
	0xb3, 0xc9, 0x06, 0xfd, 0x89, 0x56, 0x60, 0x61, 0x23, 0xe8, 0x74, 0x7a, 0xbe, 0x4b, 0xfa, 0xd5,
	0xa0, 0x63, 0xbb, 0x32, 0xb2, 0xa7, 0xc1, 0x59, 0x41, 0x7d, 0x3a, 0x19, 0xd4, 0x97, 0xa1, 0xbc,
	0x6d, 0xfb, 0xed, 0x1e, 0xf5, 0xfb, 0x3c, 0xaa, 0xab, 0x36, 0xfa, 0x08, 0x16, 0xea, 0x76, 0x88,
	0x7d, 0x62, 0x7b, 0x1b, 0x81, 0x4f, 0xc2, 0xc0, 0x13, 0x9e, 0x25, 0x7b, 0x13, 0x55, 0x6f, 0xee,
	0xa4, 0xd0, 0x1b, 0xe9, 0xf1, 0x74, 0xfb, 0xd6, 0xc0, 0x6d, 0xea, 0x24, 0xa7, 0xf9, 0xf6, 0x8d,
	0xb7, 0xe8, 0xc4, 0xd4, 0xa2, 0x66, 0xef, 0x40, 0x06, 0x1a, 0x60, 0x5b, 0x84, 0x04, 0x8c, 0x86,
	0x60, 0x34, 0x48, 0x83, 0xcf, 0x69, 0x44, 0x42, 0xb7, 0x45, 0x36, 0x8e, 0x6c, 0xc2, 0x26, 0xa1,
	0xdc, 0x48, 0xc0, 0xa8, 0x1e, 0x64, 0x7b, 0x7f, 0xeb, 0x01, 0x9b, 0x87, 0x72, 0x43, 0x07, 0xd1,
	0x2d, 0x93, 0x6c, 0x36, 0x49, 0x10, 0x62, 0xfa, 0x75, 0x2c, 0x22, 0x5e, 0xb9, 0x91, 0xd9, 0x67,
	0xfd, 0xa1, 0x01, 0xf3, 0xc9, 0xc5, 0xfe, 0x75, 0x19, 0xad, 0xb5, 0x0e, 0xf3, 0x49, 0x9f, 0xf7,
	0xe4, 0x9c, 0x58, 0xbf, 0x0d, 0x73, 0x89, 0xb8, 0xf2, 0x15, 0x84, 0xb9, 0x07, 0x53, 0xf5, 0xa3,
	0x80, 0x04, 0x51, 0xa5, 0xc0, 0x76, 0xdb, 0x37, 0xf2, 0xa3, 0x17, 0xc3, 0x6b, 0x08, 0x74, 0xcb,
	0x02, 0x88, 0xa1, 0x74, 0x09, 0x3e, 0x64, 0xdb, 0x6a, 0x4e, 0x9b, 0x37, 0xac, 0xbf, 0x35, 0x60,
	0x3e, 0x19, 0xbd, 0x9e, 0x2d, 0x1f, 0x91, 0xd8, 0x45, 0x4e, 0x25, 0x77, 0x91, 0xd6, 0x97, 0xb0,
	0x90, 0x8a, 0x9d, 0x4f, 0xd1, 0xf9, 0x9f, 0x00, 0xc4, 0xd1, 0xf7, 0x29, 0xd2, 0xfd, 0x99, 0x01,
	0xb3, 0x7a, 0x0c, 0x47, 0x08, 0x8a, 0x9f, 0xec, 0x2b, 0xe2, 0xec, 0xf7, 0x53, 0x9b, 0xb3, 0xeb,
	0x00, 0x0f, 0x6d, 0xcf, 0x75, 0xf6, 0x7d, 0x22, 0x26, 0xae, 0xd0, 0xd0, 0x20, 0xd6, 0xef, 0x17,
	0x60, 0x21, 0x15, 0xf9, 0x07, 0x54, 0xa5, 0xcf, 0xf0, 0x44, 0x72, 0x86, 0xe9, 0xb6, 0x9d, 0x0e,
	0x0f, 0xdd, 0x8e, 0xeb, 0xdb, 0x24, 0x08, 0xe5, 0xb6, 0x3d, 0x01, 0xcc, 0x56, 0x14, 0xfd, 0xee,
	0x43, 0x1c, 0xba, 0x87, 0x2e, 0x76, 0x18, 0x67, 0xe5, 0x86, 0x6a, 0x53, 0xff, 0xbf, 0x1e, 0x10,
	0x66, 0x50, 0xe5, 0x06, 0xfd, 0x99, 0xd6, 0x47, 0xe9, 0x74, 0x7d, 0x94, 0x33, 0xf4, 0x71, 0x0d,
	0xa6, 0x37, 0x1f, 0x77, 0xdd, 0x10, 0x47, 0x35, 0xee, 0x8d, 0x0b, 0x8d, 0x18, 0x40, 0xb5, 0xb5,
	0x76, 0x62, 0x13, 0x3b, 0xfc, 0xae, 0x1d, 0x1d, 0x89, 0x23, 0x99, 0x06, 0xa1, 0x3c, 0xd4, 0x43,
	0xdc, 0x71, 0x7b, 0x9d, 0xbd, 0x7e, 0x17, 0xb3, 0x5d, 0x5c, 0xa1, 0xa1, 0x83, 0xa8, 0xa4, 0xf7,
	0x3d, 0xbb, 0x1d, 0xb1, 0x8d, 0x5a, 0xa1, 0xc1, 0x1b, 0x6c, 0x5c, 0xef, 0xc0, 0x73, 0x5b, 0xbc,
	0x6f, 0x4e, 0x8c, 0x8b, 0x41, 0xd6, 0x63, 0x58, 0xac, 0x62, 0x0f, 0x9f, 0xc3, 0xc1, 0x19, 0x41,
	0x71, 0x6b, 0x5f, 0x1d, 0xb3, 0xd8, 0xef, 0xc4, 0xb1, 0xb9, 0x90, 0x3c, 0x36, 0x5b, 0x3f, 0x31,
	0xe0, 0x52, 0x03, 0x47, 0xd8, 0x77, 0xc4, 0xe1, 0xd0, 0x0d, 0xfc, 0x73, 0xa7, 0xae, 0x8e, 0xb9,
	0x85, 0xd4, 0x31, 0x37, 0x7d, 0x4e, 0x2d, 0x0e, 0x9e, 0x53, 0x2d, 0x1f, 0xa6, 0xb7, 0x7a, 0xae,
	0x53, 0xf3, 0xbb, 0x3d, 0xf2, 0x14, 0x78, 0xb2, 0x36, 0xe0, 0x02, 0xa5, 0x27, 0xcf, 0x67, 0x1b,
	0x41, 0xe7, 0x20, 0x50, 0x1f, 0x31, 0x52, 0x6a, 0x95, 0x87, 0xba, 0x89, 0xe4, 0xa1, 0xce, 0x3a,
	0x81, 0x0b, 0x55, 0x1a, 0x3e, 0x83, 0x3e, 0x5d, 0x57, 0xe7, 0x3f, 0x9d, 0x92, 0x6e, 0x21, 0x45,
	0x77, 0x17, 0xe6, 0x36, 0x42, 0x97, 0xe0, 0xd0, 0xb5, 0x3f, 0xea, 0xe1, 0xb0, 0xcf, 0x24, 0x15,
	0x00, 0x79, 0xf2, 0x94, 0x6d, 0xaa, 0x7d, 0xf9, 0x9b, 0x19, 0x34, 0x27, 0x92, 0x80, 0x59, 0x04,
	0x2e, 0xca, 0xd9, 0x38, 0xb3, 0x6d, 0xae, 0xc0, 0x42, 0x6c, 0x64, 0xba, 0x5f, 0x4b, 0x83, 0xad,
	0x1f, 0x19, 0x70, 0x69, 0x1d, 0xb7, 0x5d, 0x9f, 0xb9, 0x8a, 0x8d, 0x23, 0xdb, 0x6f, 0xe3, 0x73,
	0x57, 0xe2, 0x0e, 0x7e, 0xc4, 0xdd, 0x92, 0x50, 0xa2, 0x6c, 0x27, 0xd6, 0xcb, 0x64, 0x72, 0xbd,
	0x7c, 0x50, 0x2c, 0x17, 0xcd, 0x49, 0xcb, 0x81, 0x2b, 0x1b, 0x41, 0xa7, 0x4b, 0x57, 0xec, 0xb9,
	0x70, 0xb8, 0x04, 0x93, 0x5c, 0x1f, 0xe2, 0xba, 0x8b, 0x6b, 0xe1, 0xfb, 0xb0, 0xb4, 0xdf, 0x75,
	0x6c, 0x82, 0xa5, 0xbf, 0x3d, 0x5f, 0x15, 0xdc, 0x84, 0x99, 0x1d, 0xfc, 0x48, 0xf9, 0x76, 0x11,
	0x62, 0x34, 0x90, 0xf5, 0x73, 0x43, 0x72, 0x20, 0xe5, 0x3f, 0x5f, 0x0e, 0x2a, 0x50, 0xda, 0xf5,
	0x1c, 0xfa, 0x6d, 0x79, 0x81, 0x29, 0x9a, 0xb4, 0x67, 0x07, 0x3f, 0x62, 0x3d, 0xdc, 0x27, 0xc8,
	0xa6, 0x9c, 0x9c, 0x8d, 0xc0, 0x3f, 0xd4, 0x27, 0x87, 0xb6, 0xad, 0x3f, 0x35, 0xe0, 0x0a, 0x33,
	0x9b, 0xfb, 0x41, 0xd8, 0x0e, 0xc8, 0xd9, 0x99, 0xce, 0xbe, 0x86, 0x94, 0xa2, 0x14, 0x72, 0x3c,
	0x4a, 0x31, 0xe5, 0x51, 0xfe, 0xca, 0x80, 0x6b, 0xd2, 0x5c, 0xce, 0x8b, 0xb3, 0xeb, 0x00, 0xd4,
	0x6d, 0x13, 0xdd, 0x6c, 0x34, 0x88, 0xae, 0xc0, 0x42, 0xbe, 0x02, 0x8b, 0x29, 0x05, 0x7e, 0x09,
	0xa8, 0x89, 0x09, 0x3d, 0x51, 0xd5, 0x43, 0x7c, 0x18, 0x9d, 0xef, 0x6c, 0x27, 0x6f, 0x4c, 0x0b,
	0xe9, 0x1b, 0x53, 0x6b, 0x1d, 0xcc, 0x26, 0x26, 0x75, 0x1c, 0x46, 0x81, 0x6f, 0x0b, 0xd2, 0x79,
	0x7e, 0xd7, 0xb3, 0xc9, 0x61, 0x10, 0x76, 0x94, 0xdf, 0x15, 0x6d, 0xeb, 0xef, 0x0d, 0x30, 0xf9,
	0x15, 0xf4, 0xf9, 0xfb, 0x5d, 0xfd, 0x4e, 0xb6, 0xf0, 0xe4, 0x77, 0xb2, 0xb7, 0x60, 0xee, 0x81,
	0xdd, 0x76, 0x5b, 0x14, 0xc0, 0xae, 0x2b, 0xb9, 0xf2, 0x93, 0x40, 0xea, 0xf9, 0xae, 0x71, 0x01,
	0xc4, 0x5d, 0x7e, 0xdd, 0x0e, 0xc9, 0x19, 0x83, 0xc8, 0x90, 0x40, 0xf5, 0xc4, 0xb6, 0xfc, 0x25,
	0x2c, 0xb1, 0x5d, 0x5a, 0x7f, 0x5c, 0x8b, 0x6b, 0xd8, 0x66, 0xe5, 0x33, 0x58, 0xdc, 0xc2, 0xa4,
	0x1e, 0xe2, 0x13, 0x7e, 0x26, 0x3a, 0xd7, 0xf9, 0xb5, 0xd6, 0xa1, 0xa2, 0x9c, 0xba, 0x6f, 0x1f,
	0x78, 0x78, 0x6f, 0x77, 0xaf, 0x3e, 0xc4, 0x0e, 0x91, 0xb8, 0x76, 0x16, 0xdf, 0x60, 0xd3, 0xf7,
	0xa9, 0x54, 0x0f, 0x1d, 0x4b, 0x21, 0xa7, 0xd8, 0xb1, 0x94, 0x74, 0x22, 0xf5, 0x9a, 0x21, 0xbf,
	0x5d, 0xd0, 0xbe, 0x7d, 0x08, 0x17, 0x9a, 0x41, 0xcb, 0xb5, 0xbd, 0xed, 0xa0, 0xed, 0xfa, 0x67,
	0x72, 0x1d, 0x03, 0xf7, 0xf1, 0x1a, 0x84, 0x6e, 0x46, 0xe9, 0xea, 0xc7, 0x61, 0x88, 0x9d, 0x6d,
	0x9b, 0x59, 0xe0, 0xf9, 0x06, 0x5e, 0x75, 0xf9, 0x52, 0x48, 0x5e, 0xbe, 0xd0, 0xb3, 0xd3, 0x65,
	0xb5, 0x1c, 0xb6, 0xb0, 0x8f, 0x43, 0x16, 0x7a, 0xc6, 0x61, 0xf7, 0x49, 0x25, 0x14, 0xd2, 0x4a,
	0x48, 0x9f, 0xd0, 0x8a, 0x83, 0x57, 0x07, 0x0e, 0x2c, 0x26, 0x96, 0xee, 0x99, 0xf8, 0x54, 0x4e,
	0x41, 0xf0, 0xa9, 0xfc, 0xc1, 0xef, 0x19, 0x70, 0x99, 0x87, 0x60, 0xe6, 0x15, 0x82, 0xf0, 0x6c,
	0xa4, 0x72, 0xf6, 0x01, 0xda, 0xb7, 0xe5, 0x3e, 0x40, 0x03, 0x59, 0x97, 0xe1, 0xe2, 0x16, 0x26,
	0x1a, 0x44, 0x44, 0x06, 0xeb, 0xa2, 0x58, 0x90, 0x41, 0x27, 0xa0, 0x9b, 0x37, 0x09, 0xfe, 0x3e,
	0x2c, 0x6d, 0x78, 0xb6, 0xdb, 0x61, 0x1d, 0x63, 0x61, 0x58, 0x91, 0x54, 0x93, 0xa7, 0x83, 0xac,
	0x3e, 0xbb, 0x1a, 0x22, 0xbd, 0x68, 0x9c, 0x6f, 0x44, 0xd4, 0x7f, 0x85, 0xa1, 0x3a, 0xf4, 0xf2,
	0x86, 0xf5, 0x67, 0x13, 0x80, 0x58, 0x08, 0x66, 0x1a, 0x78, 0xea, 0xf4, 0xd1, 0xc7, 0x00, 0x31,
	0x79, 0xf1, 0x00, 0x7c, 0x2f, 0xfb, 0x5d, 0x63, 0x80, 0x4b, 0x0d, 0xc4, 0x1f, 0x84, 0xb5, 0x4f,
	0x2d, 0xbf, 0x07, 0x0b, 0xa9, 0xee, 0x27, 0x7a, 0x1c, 0xfe, 0x6b, 0x03, 0x2e, 0x26, 0x9f, 0xcb,
	0x9e, 0xd9, 0xe7, 0xbb, 0x9f, 0x1a, 0xb0, 0xb0, 0x85, 0xd9, 0x05, 0xe7, 0x38, 0x99, 0x7c, 0x97,
	0x3d, 0xbc, 0xc9, 0x47, 0xbf, 0x97, 0x72, 0xf7, 0x12, 0xd8, 0x27, 0x6e, 0x8b, 0x1d, 0x8e, 0xf8,
	0xba, 0xa0, 0x83, 0xac, 0x1f, 0x1a, 0x80, 0xe2, 0x40, 0x38, 0x4e, 0x36, 0xdf, 0x84, 0x22, 0xa5,
	0x2b, 0xd8, 0xcc, 0xbe, 0xdd, 0xd4, 0x38, 0x61, 0xc8, 0x74, 0x27, 0x7e, 0x99, 0x1f, 0xe0, 0x54,
	0x24, 0x1d, 0x27, 0x8f, 0xb7, 0x61, 0x9e, 0x92, 0x68, 0x62, 0xd2, 0xeb, 0xd6, 0x3a, 0x32, 0xb4,
	0xcc, 0x36, 0x52, 0x50, 0xeb, 0x07, 0x06, 0x2c, 0x0f, 0xc6, 0xf8, 0x71, 0x72, 0xc6, 0x2e, 0xff,
	0xa3, 0x9e, 0x27, 0x6f, 0xd5, 0x45, 0xcb, 0xfa, 0x23, 0x03, 0xae, 0x0c, 0x84, 0x3a, 0xc5, 0x88,
	0x1e, 0x11, 0x8c, 0x64, 0x44, 0x50, 0x4c, 0x16, 0xce, 0xc0, 0x64, 0x31, 0xc1, 0xa4, 0xf5, 0x4f,
	0x3a, 0x33, 0xec, 0x7a, 0x30, 0xc5, 0x4c, 0xee, 0xe3, 0xf5, 0x29, 0x7b, 0x89, 0x31, 0x30, 0x9b,
	0x8e, 0xcc, 0x93, 0x83, 0x91, 0xf9, 0x07, 0x06, 0x5c, 0x8f, 0x43, 0xf3, 0x11, 0x6e, 0x1d, 0xcb,
	0x39, 0x57, 0x32, 0x65, 0xed, 0xc7, 0xc6, 0xa0, 0xd8, 0x9f, 0x19, 0x30, 0xc7, 0xe2, 0xe5, 0x38,
	0x4d, 0x8c, 0x5d, 0xe3, 0xc4, 0xa1, 0x99, 0x3d, 0x43, 0xb0, 0x6b, 0x9c, 0x18, 0xa6, 0xe1, 0x50,
	0x0d, 0x45, 0x2c, 0x2e, 0xc4, 0x38, 0x0c, 0x66, 0xfd, 0x0d, 0x73, 0x29, 0x32, 0x94, 0x8f, 0x93,
	0xe3, 0x75, 0x66, 0x35, 0x82, 0x90, 0x78, 0x36, 0xb1, 0x72, 0x1c, 0x8b, 0x0c, 0xea, 0xf4, 0x30,
	0xa5, 0x8d, 0xb2, 0x7e, 0x5e, 0x84, 0xb9, 0x84, 0xff, 0xce, 0xdb, 0x63, 0xe7, 0x5e, 0x5e, 0xaf,
	0xc0, 0x82, 0x3c, 0x6c, 0xca, 0xe3, 0xa4, 0xb8, 0x8e, 0x4a, 0x81, 0xf9, 0x83, 0x27, 0xbf, 0x04,
	0xe3, 0x89, 0x47, 0xe5, 0x46, 0x0c, 0x48, 0x9d, 0x6b, 0x27, 0x07, 0x32, 0x81, 0x3e, 0x82, 0x85,
	0xa4, 0x1b, 0x8f, 0x44, 0xb6, 0xc4, 0xc8, 0x2e, 0x3f, 0x3d, 0x1e, 0xed, 0xc2, 0xb4, 0x64, 0x2e,
	0xaa, 0x94, 0x98, 0xfe, 0xde, 0x38, 0x3d, 0xc2, 0xad, 0xaa, 0x31, 0x3c, 0xba, 0xc7, 0xdf, 0x40,
	0x6f, 0x41, 0xa9, 0x1e, 0x06, 0x87, 0xae, 0x87, 0xc5, 0x73, 0xe7, 0xb5, 0xbc, 0xe9, 0xa0, 0x38,
	0x0d, 0x89, 0x8c, 0xaa, 0x30, 0xab, 0xa5, 0xe8, 0x44, 0x95, 0x69, 0xc6, 0xcb, 0xcd, 0x6c, 0x5e,
	0x62, 0xc4, 0x46, 0x62, 0xd4, 0xf2, 0x01, 0xcc, 0x27, 0x59, 0xcb, 0xd8, 0x59, 0xbc, 0xa3, 0xef,
	0x2c, 0xf2, 0xb2, 0x18, 0xe4, 0x57, 0x24, 0x19, 0x6d, 0xff, 0xf1, 0xa3, 0x12, 0xa0, 0x41, 0xd5,
	0xa2, 0x6f, 0xc2, 0xa4, 0x17, 0xb4, 0x6c, 0x4f, 0xec, 0x49, 0xaf, 0x67, 0xa7, 0xbf, 0x50, 0x0c,
	0x3a, 0xb8, 0xc1, 0x91, 0xd1, 0x3d, 0x98, 0x22, 0x3c, 0xed, 0x64, 0x62, 0x48, 0x54, 0xe4, 0x11,
	0x91, 0x8d, 0x13, 0xe8, 0xe8, 0x3d, 0x28, 0x1f, 0x26, 0x93, 0x7d, 0x9e, 0x1f, 0x9a, 0xec, 0xc3,
	0x06, 0xab, 0x21, 0x94, 0xae, 0xe7, 0x12, 0xdc, 0x6d, 0x89, 0x44, 0x9f, 0x1b, 0x39, 0xd9, 0x3a,
	0x04, 0xd7, 0x37, 0x38, 0x5d, 0x8e, 0x4e, 0x07, 0xb6, 0x79, 0x86, 0xd0, 0xe4, 0x90, 0x81, 0x3c,
	0x59, 0x82, 0x0f, 0xe4, 0xe8, 0x74, 0xcb, 0xee, 0xb9, 0x3e, 0x16, 0x16, 0xfb, 0x5c, 0x6e, 0x76,
	0x10, 0x1b, 0xc4, 0x50, 0xd1, 0x3b, 0x50, 0x22, 0x22, 0xad, 0x86, 0xe7, 0xf3, 0xdc, 0x1c, 0x96,
	0x56, 0xc3, 0x06, 0xca, 0x01, 0xe8, 0x2d, 0x28, 0x74, 0x23, 0x5f, 0xd8, 0xe0, 0xad, 0xd3, 0xb2,
	0x89, 0xd8, 0x58, 0x3a, 0x80, 0x4e, 0x63, 0xc4, 0x32, 0x88, 0xa6, 0x87, 0x4c, 0x23, 0x7b, 0x6d,
	0xe5, 0xd3, 0xc8, 0x90, 0xa9, 0x70, 0x8f, 0x0f, 0x82, 0xc7, 0x22, 0x85, 0xe7, 0xb9, 0xdc, 0x7c,
	0x1c, 0x2e, 0x1c, 0x45, 0x45, 0xaf, 0xc2, 0xc4, 0xc9, 0xb1, 0x48, 0xe0, 0xb9, 0x9a, 0x9d, 0xf3,
	0xc3, 0x27, 0x6d, 0xe2, 0xe4, 0x98, 0x6a, 0xa2, 0x1f, 0xf4, 0x48, 0xef, 0x00, 0x8b, 0xcc, 0x9d,
	0x6c, 0x4d, 0xfc, 0x26, 0xc7, 0xe1, 0x9a, 0x10, 0x03, 0xe8, 0x8c, 0x45, 0x3c, 0xe9, 0x67, 0x6e,
	0xc8, 0x8c, 0xf1, 0x07, 0x70, 0x3e, 0x63, 0x1c, 0x9d, 0x12, 0x75, 0x44, 0xc2, 0xcf, 0xfc, 0x10,
	0xa2, 0xe2, 0xd9, 0x8f, 0x13, 0x15, 0x03, 0x28, 0xd1, 0x90, 0x27, 0xfb, 0x2c, 0x0c, 0x21, 0xca,
	0xdf, 0xff, 0x39, 0x51, 0x8e, 0x8e, 0xbe, 0x03, 0xd3, 0xf6, 0x61, 0x88, 0x71, 0xcb, 0x26, 0x27,
	0x15, 0x73, 0xc8, 0x96, 0x7b, 0x8d, 0x63, 0xed, 0x3d, 0x64, 0xc3, 0xe3, 0x41, 0xd6, 0x5f, 0x4c,
	0xc0, 0xb4, 0x5a, 0x67, 0x99, 0xbe, 0x7c, 0xa4, 0x47, 0xd3, 0x2a, 0xb6, 0x95, 0xa7, 0xe6, 0x3b,
	0x2e, 0x1d, 0x44, 0x3d, 0xb9, 0xc8, 0x00, 0x8d, 0x3d, 0xb9, 0x02, 0xc4, 0x37, 0x52, 0x25, 0xfd,
	0x46, 0x8a, 0xa7, 0xdf, 0x1e, 0x63, 0x47, 0x64, 0x68, 0x88, 0x16, 0x85, 0xef, 0xfa, 0xdf, 0x0d,
	0x3c, 0x87, 0x99, 0x43, 0xb9, 0x21, 0x5a, 0x8c, 0x06, 0xbb, 0xc1, 0x73, 0xd6, 0x78, 0xd2, 0x54,
	0xa1, 0x11, 0x03, 0x68, 0x2f, 0x3f, 0xcf, 0xd3, 0xde, 0x05, 0xde, 0xab, 0x00, 0xa9, 0xfd, 0x94,
	0x39, 0x70, 0x37, 0xf3, 0xaf, 0x13, 0x00, 0xb1, 0x5b, 0x19, 0x9b, 0x9a, 0x6e, 0xc3, 0xfc, 0xba,
	0xed, 0x6c, 0x84, 0x98, 0xa5, 0x2e, 0xdb, 0x5e, 0x24, 0x74, 0x95, 0x82, 0xe6, 0xe7, 0x04, 0x70,
	0x1e, 0x6b, 0x55, 0x99, 0x13, 0x20, 0xdb, 0x89, 0x80, 0x5c, 0x4a, 0x05, 0xe4, 0xd4, 0x1b, 0x6f,
	0x79, 0xf0, 0x8d, 0x37, 0xa1, 0xda, 0xe9, 0xa1, 0xaa, 0x85, 0xe1, 0xaa, 0x9d, 0x19, 0x50, 0xed,
	0xff, 0x1a, 0x30, 0xab, 0xbb, 0xdd, 0xb1, 0x29, 0x37, 0xfb, 0x39, 0xfc, 0x3a, 0x80, 0xa4, 0x5e,
	0xab, 0x0a, 0x7d, 0x6a, 0x90, 0xa4, 0xe8, 0x53, 0x43, 0x45, 0x2f, 0x0d, 0x17, 0xbd, 0x3c, 0x20,
	0xfa, 0x8f, 0x0d, 0x80, 0x38, 0x68, 0x64, 0x0a, 0x7e, 0xda, 0x46, 0x7f, 0xb4, 0xa5, 0xa7, 0x04,
	0x28, 0x0e, 0x15, 0x60, 0x32, 0x25, 0x80, 0xf5, 0x13, 0x03, 0x66, 0x34, 0x2f, 0xf9, 0x0c, 0x72,
	0xf8, 0x53, 0x03, 0xe6, 0x12, 0xbe, 0xed, 0x19, 0xe4, 0xf1, 0xbf, 0x0c, 0x80, 0x38, 0xc4, 0x3f,
	0x65, 0xfb, 0x5e, 0x86, 0x32, 0xa7, 0xad, 0xac, 0x5b, 0xb5, 0xc7, 0x6a, 0xdb, 0xff, 0x69, 0xb0,
	0xb3, 0xf4, 0xd7, 0x21, 0x32, 0x0d, 0x1c, 0xae, 0x1f, 0x0b, 0x2c, 0x5a, 0x63, 0x15, 0xf7, 0x7f,
	0x0c, 0x98, 0xd1, 0x76, 0x56, 0x4f, 0x59, 0xe2, 0x6b, 0x30, 0x2d, 0x88, 0x2b, 0xa1, 0x63, 0xc0,
	0x58, 0xe5, 0xfe, 0x65, 0x01, 0x16, 0x52, 0x3b, 0xc3, 0xb1, 0xc9, 0x9e, 0x91, 0x8b, 0x5a, 0x1c,
	0x29, 0x17, 0x75, 0x72, 0x30, 0x17, 0x55, 0x64, 0xba, 0x4e, 0xc5, 0x99, 0xae, 0xc3, 0xb2, 0x53,
	0x97, 0x60, 0xb2, 0xde, 0xdc, 0x51, 0x0a, 0xe0, 0x0d, 0xaa, 0xb9, 0x7a, 0x73, 0x27, 0x91, 0x63,
	0x1a, 0x03, 0xa8, 0xe6, 0x06, 0x92, 0x4c, 0x35, 0x48, 0x56, 0xc6, 0xeb, 0xcc, 0x19, 0x33, 0x5e,
	0x13, 0x13, 0x3d, 0x3b, 0x74, 0xa2, 0xe7, 0x86, 0x4f, 0xf4, 0xfc, 0xc0, 0x44, 0xff, 0xbb, 0x01,
	0x10, 0x6f, 0x40, 0xc7, 0x36, 0xc7, 0xcb, 0x50, 0xe6, 0x54, 0xe2, 0x37, 0x50, 0xd9, 0x4e, 0x8a,
	0x37, 0x39, 0x54, 0xbc, 0xa9, 0xe1, 0xe2, 0x95, 0x32, 0xc5, 0x8b, 0x37, 0xf5, 0xe3, 0x14, 0x8f,
	0x53, 0x89, 0xc5, 0x93, 0xed, 0xb1, 0x8a, 0xf7, 0x6f, 0x06, 0x4c, 0xab, 0x63, 0xd8, 0xd8, 0xa4,
	0xab, 0x40, 0x89, 0x11, 0x51, 0xc2, 0xc9, 0xe6, 0x58, 0x65, 0xfb, 0x17, 0x03, 0xca, 0xf2, 0xb4,
	0x38, 0x36, 0xd1, 0x64, 0x36, 0x69, 0x51, 0xcb, 0x26, 0x1d, 0xa7, 0x50, 0xbf, 0x34, 0x60, 0xea,
	0xe1, 0xd7, 0xb1, 0x1f, 0x46, 0x50, 0x7c, 0xf8, 0xa1, 0x8a, 0x22, 0xec, 0xf7, 0x58, 0x03, 0xc8,
	0x9f, 0x4f, 0x30, 0x51, 0xe4, 0x99, 0xf8, 0x2b, 0x6f, 0xdf, 0x34, 0x6d, 0x14, 0x4e, 0xd5, 0x46,
	0x71, 0x88, 0x36, 0x26, 0x53, 0x81, 0x55, 0x30, 0xa7, 0xce, 0x54, 0x31, 0x60, 0x30, 0x0d, 0xb7,
	0x94, 0x95, 0x86, 0x9b, 0xd0, 0x5e, 0x79, 0xa8, 0xf6, 0xa6, 0xd3, 0x5b, 0xc7, 0xff, 0x2f, 0xaa,
	0x0b, 0xc2, 0x31, 0x69, 0x46, 0xab, 0xb4, 0x2c, 0x26, 0x2b, 0x2d, 0x33, 0x82, 0x68, 0xaa, 0x4a,
	0x53, 0xe9, 0x6c, 0x2a, 0x75, 0xa2, 0xd2, 0xee, 0x65, 0x4b, 0xd9, 0x15, 0x9a, 0x4d, 0x55, 0xa1,
	0x59, 0x96, 0x15, 0x9a, 0x0a, 0x84, 0xbe, 0x01, 0x8b, 0x31, 0x7e, 0x5a, 0x3b, 0x59, 0x5d, 0xe8,
	0x35, 0xb8, 0x90, 0xc8, 0x9d, 0x60, 0x51, 0x9c, 0x67, 0x12, 0x0f, 0x76, 0x24, 0x0e, 0xc3, 0x33,
	0xa9, 0xc3, 0xf0, 0x59, 0x62, 0xe8, 0xba, 0x7a, 0xd1, 0x67, 0xc9, 0x4a, 0xc3, 0xae, 0x81, 0x34,
	0xbc, 0x86, 0x3e, 0x08, 0x6d, 0x8b, 0x3b, 0x7a, 0xfe, 0xa6, 0xb0, 0xc0, 0xee, 0x75, 0x5f, 0x1b,
	0x76, 0x29, 0xbc, 0x1a, 0xa3, 0x8b, 0xc7, 0xe3, 0x18, 0xb0, 0xfc, 0x1e, 0x2c, 0xa4, 0xba, 0x9f,
	0xe8, 0xf1, 0xf8, 0x7d, 0xca, 0x8c, 0x7c, 0x62, 0xfc, 0x0a, 0x65, 0x1e, 0x41, 0x42, 0x21, 0xe9,
	0x8c, 0x07, 0x63, 0x20, 0xe3, 0x41, 0xc3, 0xd0, 0x3f, 0xa9, 0x81, 0x92, 0x33, 0x50, 0x48, 0xaf,
	0x97, 0xbf, 0x33, 0x58, 0x8d, 0x14, 0x8e, 0xa2, 0xed, 0xa0, 0x4d, 0x71, 0x9b, 0x38, 0x8a, 0x78,
	0xba, 0x82, 0x28, 0x98, 0x52, 0x00, 0xb6, 0x69, 0x76, 0x3b, 0x38, 0x22, 0x76, 0xa7, 0xcb, 0x28,
	0x15, 0x1a, 0x31, 0x80, 0xae, 0x8b, 0xf5, 0x30, 0x78, 0x14, 0xa9, 0x64, 0x5f, 0xd9, 0xa4, 0x6a,
	0xd8, 0x95, 0xe9, 0x91, 0x13, 0xbb, 0x91, 0xbe, 0x82, 0x26, 0x93, 0x2b, 0x88, 0x17, 0x94, 0x4f,
	0xa9, 0x82, 0x72, 0x2a, 0x5d, 0x2f, 0xa4, 0x7b, 0x36, 0x96, 0x8e, 0xc1, 0x97, 0x86, 0x0e, 0xb2,
	0xfe, 0xdb, 0x80, 0x0b, 0x8a, 0xff, 0x71, 0x3e, 0x05, 0x6d, 0x53, 0x3a, 0xc4, 0x3d, 0xc1, 0x8e,
	0x22, 0x27, 0x5f, 0x84, 0xb2, 0x2f, 0x71, 0x63, 0xae, 0x06, 0x07, 0xa2, 0xf7, 0x01, 0xb4, 0xcf,
	0x14, 0x47, 0xfa, 0x8c, 0x36, 0xc2, 0xfa, 0xbf, 0x09, 0x98, 0x4b, 0x3c, 0x39, 0xa5, 0x73, 0x4d,
	0x8c, 0x81, 0x5c, 0x13, 0xea, 0x0e, 0x35, 0x1b, 0x29, 0xc6, 0x6e, 0x9e, 0xfa, 0xde, 0x2e, 0x2b,
	0x8e, 0x95, 0xee, 0x2e, 0x06, 0xd1, 0xa5, 0xcf, 0x9e, 0xa4, 0xf7, 0x1b, 0xdb, 0x72, 0x03, 0x26,
	0xdb, 0x54, 0x5b, 0xdb, 0xae, 0x7f, 0x4c, 0xbb, 0xc4, 0x44, 0x8a, 0x26, 0x35, 0x95, 0x06, 0xa6,
	0x27, 0x0b, 0xd7, 0x6f, 0xcb, 0x00, 0xa8, 0x00, 0x3c, 0x8b, 0x98, 0xd8, 0x9e, 0x08, 0x7e, 0xbc,
	0xc1, 0x8c, 0x8f, 0xd8, 0x21, 0xa1, 0x0e, 0x53, 0xba, 0x7d, 0x05, 0xa0, 0xb4, 0x36, 0x7d, 0x87,
	0xf5, 0x71, 0xb7, 0x26, 0x9b, 0xc2, 0x95, 0xc9, 0xa7, 0x69, 0x87, 0xfb, 0x01, 0x7e, 0x7c, 0x18,
	0xec, 0xa0, 0x21, 0x48, 0x29, 0x45, 0x55, 0x47, 0x4c, 0x37, 0x92, 0x40, 0xb6, 0xed, 0x3c, 0x0a,
	0x1e, 0x31, 0x23, 0x9a, 0xe5, 0x35, 0x1f, 0xb2, 0x6d, 0xfd, 0xc2, 0x60, 0x27, 0x38, 0xfd, 0xfd,
	0xe6, 0x2b, 0x6e, 0x39, 0x68, 0x30, 0x12, 0x1f, 0xd2, 0x72, 0xbb, 0x14, 0x24, 0xa3, 0x28, 0xbd,
	0x98, 0x59, 0x94, 0x7e, 0x86, 0x7d, 0x95, 0xf5, 0xc7, 0x13, 0x30, 0xa3, 0xbd, 0x71, 0x7d, 0xa5,
	0xa0, 0x79, 0x9a, 0x1c, 0xe9, 0x02, 0xfc, 0xe2, 0x48, 0x05, 0xf8, 0x93, 0x99, 0xb2, 0xa6, 0xb4,
	0x3a, 0x35, 0xa8, 0xd5, 0x84, 0x36, 0x4a, 0x43, 0xb5, 0x51, 0x4e, 0x69, 0xe3, 0x95, 0x5f, 0x98,
	0x30, 0x9f, 0x74, 0x0c, 0x68, 0x19, 0x2e, 0x6d, 0x86, 0xa1, 0x50, 0xcf, 0x7a, 0xbf, 0x56, 0xdd,
	0x09, 0xc8, 0xfd, 0xa0, 0xe7, 0x3b, 0xe6, 0xaf, 0xa1, 0x6b, 0x50, 0xd1, 0xfb, 0xa8, 0xb2, 0x54,
	0xaf, 0x81, 0x9e, 0x83, 0x2b, 0x7a, 0x2f, 0x0b, 0xc3, 0xaa, 0x7b, 0x02, 0x59, 0x70, 0x5d, 0xef,
	0x8e, 0x65, 0x54, 0x38, 0x05, 0x74, 0x05, 0x2e, 0xc6, 0x38, 0xda, 0xee, 0xcb, 0x2c, 0xa2, 0xcb,
	0xb0, 0x18, 0x77, 0xa9, 0x47, 0x5e, 0x73, 0x12, 0x2d, 0x81, 0x19, 0x77, 0xf0, 0xab, 0x7e, 0x73,
	0x4a, 0x88, 0x51, 0xf3, 0x4f, 0x6c, 0xcf, 0x75, 0xf4, 0x5a, 0x23, 0xb3, 0x24, 0x18, 0x15, 0x7d,
	0xa9, 0x12, 0x07, 0xb3, 0x2c, 0xa4, 0xbc, 0x6f, 0xbb, 0x1e, 0x76, 0x98, 0x10, 0x22, 0xf3, 0xc2,
	0x0d, 0x7c, 0x73, 0x1a, 0xdd, 0x81, 0x57, 0x37, 0xc3, 0x30, 0x7e, 0x79, 0xc4, 0x11, 0x56, 0x69,
	0xe3, 0xe2, 0x93, 0x22, 0x59, 0x9e, 0x42, 0x4c, 0x40, 0x2b, 0x70, 0x4b, 0x1f, 0xd0, 0x1c, 0x40,
	0xbf, 0x1f, 0x84, 0x1d, 0x9b, 0x98, 0x33, 0x82, 0xf0, 0x46, 0xd0, 0xf3, 0x9c, 0x9d, 0x80, 0x24,
	0x0a, 0x8f, 0xcc, 0x59, 0xc1, 0x35, 0x67, 0x8b, 0xcf, 0x60, 0xbc, 0xd1, 0x31, 0xe7, 0x84, 0xc0,
	0x7a, 0xb7, 0x78, 0x2d, 0x37, 0xe7, 0xd1, 0x25, 0x40, 0x42, 0x60, 0xd7, 0x53, 0x05, 0x34, 0xe6,
	0x82, 0xd0, 0x29, 0x1f, 0x13, 0x67, 0x67, 0x9b, 0x66, 0xa2, 0x83, 0xf3, 0xc1, 0x3a, 0x2e, 0x08,
	0x2a, 0x8c, 0x45, 0x3f, 0x20, 0x1b, 0x81, 0x7f, 0x82, 0x43, 0x76, 0xe0, 0x37, 0x11, 0xba, 0x09,
	0xd7, 0x36, 0xc3, 0x90, 0x31, 0xc5, 0xaf, 0x59, 0x76, 0x02, 0xf2, 0xf1, 0x91, 0x4b, 0xb0, 0xe7,
	0x46, 0x74, 0xaa, 0x16, 0xd1, 0x45, 0xb8, 0xb0, 0x19, 0x86, 0x7b, 0xbb, 0xcd, 0x9d, 0x80, 0xc8,
	0xcd, 0x9c, 0xb9, 0x84, 0x2e, 0xc0, 0x5c, 0x3c, 0x1f, 0xd5, 0xdd, 0x75, 0xf3, 0x62, 0x72, 0xfa,
	0x78, 0x29, 0x07, 0x7f, 0x0d, 0x32, 0x2f, 0x69, 0xd2, 0x78, 0x6e, 0xac, 0xe8, 0xcb, 0xc9, 0x69,
	0x4d, 0xfd, 0xaf, 0x88, 0x59, 0x41, 0x57, 0xe1, 0xb2, 0x66, 0x40, 0x5e, 0x88, 0x6d, 0xa7, 0xbf,
	0xf9, 0xd8, 0x8d, 0x48, 0x64, 0x5e, 0x41, 0x15, 0x58, 0x62, 0x63, 0x5b, 0x41, 0x18, 0xe2, 0x96,
	0x9a, 0x21, 0x73, 0x19, 0xdd, 0x80, 0xab, 0xf1, 0xb0, 0x5a, 0xb4, 0x16, 0x62, 0xdb, 0x73, 0xfa,
	0xdc, 0xce, 0xb0, 0x63, 0x5e, 0x15, 0x36, 0xab, 0x2b, 0x5e, 0x18, 0xe1, 0xb5, 0x8c, 0x2e, 0xfe,
	0x44, 0x65, 0x3e, 0x97, 0xb4, 0x5a, 0x01, 0xbd, 0x9e, 0xb4, 0xff, 0x7d, 0xbf, 0x25, 0x5f, 0xc0,
	0xcc, 0x1b, 0x99, 0xec, 0xd3, 0x49, 0xc1, 0x8e, 0x79, 0x13, 0xbd, 0x0c, 0x2f, 0x52, 0x1b, 0x63,
	0x4f, 0x05, 0xdb, 0x76, 0xcf, 0x6f, 0x1d, 0xe1, 0xb0, 0x81, 0xdb, 0x6e, 0x44, 0x42, 0xfe, 0xa4,
	0xee, 0x46, 0xf6, 0x81, 0x87, 0x1d, 0xf3, 0xf9, 0xa4, 0xf6, 0x64, 0x12, 0xbc, 0x69, 0xa1, 0x17,
	0xe0, 0x86, 0x9c, 0x3d, 0x5e, 0x35, 0x23, 0xcb, 0x6e, 0x9a, 0xd4, 0x5b, 0x46, 0xbb, 0x9e, 0x63,
	0xbe, 0x80, 0x5e, 0x85, 0x97, 0xb2, 0x91, 0x04, 0x43, 0x9c, 0x26, 0x0e, 0xb1, 0x63, 0xde, 0x12,
	0x86, 0xaf, 0x21, 0xef, 0x7a, 0x8e, 0x8e, 0xcc, 0x81, 0x8e, 0xf9, 0x22, 0xba, 0x0e, 0xcb, 0x49,
	0x4c, 0xc1, 0x1e, 0x5f, 0x91, 0xb7, 0x85, 0x65, 0xc9, 0x49, 0x61, 0x4b, 0x2e, 0x81, 0xf1, 0x92,
	0x90, 0x4a, 0x8a, 0xf3, 0xc0, 0x8d, 0x22, 0xd7, 0x6f, 0x9b, 0x2b, 0xe2, 0xcb, 0xd2, 0xe4, 0x85,
	0xf6, 0x94, 0xc3, 0x79, 0x59, 0xd8, 0xd9, 0x5e, 0x73, 0xbb, 0x1e, 0x06, 0x8f, 0xfb, 0x0d, 0xfc,
	0xbd, 0x1e, 0x8e, 0x08, 0x9d, 0x30, 0xf3, 0x15, 0x74, 0x1b, 0x2c, 0xd1, 0x97, 0x8c, 0x7e, 0xfb,
	0x7e, 0xc7, 0x0e, 0xa3, 0x23, 0xdb, 0x63, 0x78, 0xaf, 0xe6, 0xe2, 0x6d, 0x76, 0xba, 0xa4, 0x2f,
	0xf7, 0x68, 0xe6, 0x6b, 0x42, 0x1f, 0x83, 0x78, 0xcd, 0x5e, 0xa7, 0x63, 0x87, 0x7d, 0xc5, 0xd5,
	0xeb, 0x42, 0xcd, 0xb9, 0x98, 0x42, 0xbc, 0xaa, 0x4d, 0x6c, 0x73, 0x55, 0x88, 0xa8, 0x92, 0x37,
	0x5b, 0xd8, 0x27, 0x5e, 0x7f, 0xdf, 0xf7, 0xb8, 0x6d, 0xdc, 0x11, 0x36, 0xb5, 0x17, 0x04, 0x0f,
	0x6c, 0x5f, 0x4a, 0xb8, 0xde, 0xaf, 0x75, 0xcd, 0x6f, 0x08, 0x87, 0x93, 0xee, 0x62, 0x69, 0xec,
	0xe6, 0x1b, 0xe8, 0x45, 0x78, 0x3e, 0xa3, 0x37, 0x59, 0x28, 0x63, 0xde, 0x15, 0x4b, 0x67, 0x27,
	0x50, 0x99, 0x22, 0xc2, 0x2a, 0xdf, 0x4c, 0x9a, 0x9a, 0x3c, 0x40, 0x99, 0xdf, 0x14, 0xb6, 0x2f,
	0x01, 0x7b, 0x36, 0x9d, 0xc2, 0x6f, 0x89, 0x49, 0x56, 0xf1, 0x41, 0x76, 0x2b, 0xb5, 0xbc, 0x25,
	0x24, 0x91, 0x1d, 0xc2, 0x8a, 0x9a, 0x98, 0x98, 0xf7, 0x84, 0x67, 0x11, 0xa4, 0xc4, 0xf6, 0xda,
	0x7c, 0x5b, 0x2c, 0x9a, 0x44, 0x3a, 0xb8, 0xc0, 0x31, 0x7f, 0x3d, 0xdd, 0xb9, 0x43, 0xfd, 0x19,
	0x4f, 0x47, 0x33, 0xdf, 0x11, 0xb4, 0xe4, 0x07, 0xe3, 0x13, 0x88, 0xf9, 0xae, 0xa0, 0x25, 0x6d,
	0x4a, 0xac, 0xdd, 0x6f, 0x8b, 0xf8, 0x96, 0x56, 0x17, 0xb7, 0x67, 0x66, 0xda, 0xe6, 0x7b, 0x42,
	0x57, 0xd2, 0xc3, 0x6f, 0x61, 0x52, 0xeb, 0xd2, 0xfd, 0xad, 0xf9, 0xbe, 0x70, 0x5e, 0x5a, 0x8f,
	0x38, 0x87, 0xb0, 0xee, 0xdf, 0x90, 0x7e, 0x37, 0xe6, 0x83, 0x12, 0x70, 0xe9, 0x3a, 0xfb, 0x8e,
	0xf8, 0xa8, 0xda, 0xd0, 0x29, 0x85, 0xad, 0x09, 0x21, 0xf4, 0x1e, 0xbe, 0x35, 0x37, 0xd7, 0xe5,
	0x92, 0x8a, 0xbb, 0xd8, 0x76, 0x71, 0x8d, 0x46, 0x08, 0xea, 0x29, 0xcc, 0x0d, 0x21, 0xcf, 0xbe,
	0x7f, 0xec, 0x07, 0x8f, 0xfc, 0xcd, 0x13, 0xec, 0x13, 0xba, 0x55, 0xbc, 0x1f, 0x06, 0x9d, 0x07,
	0xb6, 0xeb, 0x7d, 0x81, 0x89, 0x59, 0x45, 0xb3, 0x50, 0x6a, 0xf6, 0xd8, 0x36, 0xdd, 0xfc, 0x47,
	0xe3, 0xee, 0x7f, 0x5c, 0x87, 0x72, 0x4d, 0xfc, 0xa9, 0x16, 0x3a, 0x96, 0xff, 0x39, 0x95, 0x4c,
	0x06, 0x5b, 0xc9, 0x3f, 0xed, 0x26, 0x0b, 0x19, 0x97, 0x5f, 0x19, 0x21, 0x35, 0x58, 0x1e, 0x80,
	0xba, 0xb0, 0x94, 0xf5, 0x87, 0x48, 0xe8, 0x4e, 0x76, 0x12, 0x4f, 0xee, 0x7f, 0x27, 0x2d, 0x67,
	0xdf, 0xad, 0x67, 0xfc, 0xb7, 0x91, 0x23, 0x2b, 0x83, 0x47, 0x11, 0x2f, 0xa3, 0x86, 0x78, 0x39,
	0xf7, 0xcf, 0x62, 0xf4, 0xec, 0xf8, 0x03, 0x30, 0xb7, 0x30, 0x49, 0x92, 0xb0, 0x72, 0x34, 0xa8,
	0x55, 0x97, 0x3e, 0x91, 0xee, 0xbc, 0xb8, 0x92, 0x34, 0x49, 0xe8, 0x95, 0x9c, 0x03, 0x5a, 0x46,
	0xd5, 0x69, 0x8e, 0xde, 0x32, 0xf2, 0xed, 0x1d, 0x30, 0xd3, 0x65, 0xcd, 0xe8, 0xd5, 0x9c, 0x6c,
	0x96, 0xac, 0xea, 0xe7, 0xd1, 0xf4, 0xe6, 0x80, 0x99, 0x2e, 0x53, 0xcd, 0xa1, 0x92, 0x5d, 0xcd,
	0x3a, 0x1a, 0x15, 0x1f, 0x16, 0x33, 0xaa, 0x4d, 0xd1, 0x6a, 0xf6, 0x04, 0xe5, 0xd5, 0xa5, 0x8e,
	0xae, 0xbb, 0xcf, 0x61, 0x3e, 0x59, 0x77, 0x8a, 0x5e, 0xce, 0x2e, 0xd5, 0xc8, 0x28, 0x4e, 0x1d,
	0x4d, 0x22, 0x45, 0x41, 0x15, 0x3c, 0x0d, 0xa3, 0x90, 0x2c, 0x35, 0x1b, 0x8d, 0xc2, 0x17, 0xb0,
	0x98, 0x51, 0x09, 0x9a, 0xa3, 0xb3, 0xdc, 0x9a, 0xd1, 0xd1, 0x68, 0x11, 0xb8, 0x94, 0x5d, 0xde,
	0x89, 0xde, 0x18, 0x3a, 0x45, 0x99, 0x14, 0x47, 0x9e, 0xa5, 0xcf, 0x60, 0x56, 0xaf, 0xd5, 0x44,
	0xd9, 0x03, 0x07, 0xcb, 0x39, 0x47, 0x93, 0xe9, 0x13, 0x80, 0xb8, 0x18, 0x13, 0xbd, 0x98, 0xf7,
	0xed, 0x44, 0xb5, 0xe6, 0x68, 0x5f, 0x6e, 0xc0, 0x0c, 0x0d, 0x83, 0x22, 0x9d, 0x03, 0x65, 0x5f,
	0xcf, 0xa8, 0x8a, 0xff, 0xd1, 0xbe, 0xf9, 0x11, 0x00, 0xfd, 0x26, 0xdf, 0x98, 0x9e, 0xcf, 0x27,
	0xbb, 0x70, 0x29, 0xbb, 0x0e, 0x33, 0x6f, 0x52, 0x87, 0x14, 0x6d, 0x8e, 0xac, 0xf2, 0xf8, 0x70,
	0x94, 0xa3, 0xf2, 0x74, 0x6d, 0xeb, 0x68, 0x5f, 0xfe, 0x94, 0x5d, 0x47, 0xc9, 0x7f, 0x23, 0x40,
	0xb7, 0x73, 0x82, 0x47, 0xea, 0xff, 0x0a, 0x46, 0xe5, 0x7a, 0x9a, 0xa5, 0xd8, 0x0f, 0xf9, 0xf2,
	0xc0, 0xdf, 0x29, 0x8c, 0xf6, 0xe5, 0x8f, 0xa1, 0x24, 0xaa, 0x70, 0x46, 0xfe, 0x6e, 0x76, 0xc6,
	0x68, 0xba, 0x96, 0xa7, 0x0d, 0xf3, 0xc9, 0x1a, 0xd6, 0x1c, 0xef, 0x93, 0x55, 0xe8, 0xfa, 0x44,
	0x21, 0xef, 0x00, 0xe6, 0x12, 0xf5, 0xaa, 0x39, 0x61, 0x3b, 0xa3, 0xa6, 0x35, 0xc7, 0x0d, 0x64,
	0x54, 0xfc, 0xfc, 0x16, 0x2c, 0xa4, 0x0a, 0x6d, 0x4e, 0xb5, 0xff, 0xd7, 0x86, 0x44, 0xa8, 0xc1,
	0xa2, 0x18, 0x02, 0x68, 0xb0, 0x64, 0x06, 0xbd, 0x3e, 0x3c, 0xf8, 0xa4, 0xea, 0x67, 0x97, 0xef,
	0x8c, 0x88, 0xae, 0xa9, 0xee, 0x6a, 0x03, 0xb7, 0x55, 0x5d, 0x4c, 0x2b, 0x38, 0xc1, 0x61, 0x7f,
	0x6f, 0xb7, 0xbe, 0xc7, 0xaf, 0x1b, 0xcf, 0x65, 0x89, 0x37, 0xa9, 0x07, 0xf5, 0x1d, 0x59, 0xaa,
	0x7b, 0x3e, 0x1f, 0xfd, 0x5c, 0x1a, 0x97, 0xfa, 0xec, 0x30, 0xe3, 0x4a, 0x96, 0x09, 0x8f, 0x46,
	0xc1, 0x06, 0xc4, 0x56, 0xdc, 0xd6, 0x7e, 0xad, 0x4a, 0xed, 0xba, 0x8a, 0x3d, 0xbb, 0x7f, 0xbe,
	0x4b, 0xaf, 0x9d, 0x28, 0x35, 0xde, 0x0e, 0x82, 0xe3, 0x5e, 0x37, 0x87, 0xc2, 0x40, 0x49, 0xf2,
	0x13, 0xad, 0x90, 0xcf, 0x60, 0xa6, 0xc9, 0xac, 0xff, 0x70, 0xdb, 0xf6, 0xdb, 0x39, 0xeb, 0x23,
	0xa3, 0x1a, 0x79, 0x34, 0x31, 0xbe, 0x07, 0x17, 0x06, 0x6a, 0xac, 0x50, 0xb6, 0xf5, 0xe7, 0x94,
	0x1d, 0x2f, 0xaf, 0x8e, 0x86, 0xad, 0x48, 0x76, 0x34, 0x92, 0xb2, 0x92, 0x2a, 0x47, 0xac, 0x8c,
	0xea, 0xe1, 0xd3, 0xc8, 0x0d, 0xd4, 0x66, 0x3d, 0x82, 0x4b, 0xd9, 0x95, 0x4e, 0x4f, 0x40, 0xf3,
	0xcd, 0x53, 0x30, 0x33, 0x0b, 0xa8, 0x0e, 0xe1, 0xc2, 0x40, 0x59, 0x72, 0x8e, 0x6a, 0x73, 0xca,
	0x97, 0x47, 0x35, 0xf6, 0x85, 0x54, 0xe9, 0x71, 0xce, 0x79, 0x21, 0xb3, 0x40, 0x79, 0x39, 0xe7,
	0x10, 0x93, 0x28, 0xc9, 0xfa, 0x98, 0x79, 0x69, 0xed, 0x15, 0xe9, 0x34, 0x3f, 0x70, 0xfb, 0x94,
	0x17, 0xa5, 0xb4, 0xfb, 0x97, 0x35, 0x4b, 0xc3, 0xdc, 0x7f, 0xb2, 0x82, 0x3a, 0xd7, 0xfd, 0x0f,
	0x54, 0x67, 0x7d, 0x0e, 0xf3, 0xc9, 0x52, 0xeb, 0x1c, 0x77, 0x93, 0x55, 0x8f, 0x3d, 0xd2, 0x0c,
	0xac, 0xdf, 0xff, 0xb4, 0xda, 0x76, 0xc9, 0x6a, 0x37, 0x0c, 0xbe, 0xc0, 0x2d, 0x72, 0x10, 0x06,
	0xab, 0xad, 0xa0, 0x73, 0xc7, 0x8d, 0x9c, 0x3b, 0x7c, 0xdc, 0xeb, 0x72, 0xa0, 0xfa, 0xa3, 0xeb,
	0xd7, 0x23, 0x1c, 0x9e, 0xb8, 0x2d, 0x7c, 0x47, 0xff, 0x1b, 0xec, 0x83, 0x29, 0xf6, 0xf7, 0xd7,
	0x6f, 0xfe, 0x2a, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xd7, 0x84, 0x8e, 0x1d, 0x5b, 0x00, 0x00,
}
